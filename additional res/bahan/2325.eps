%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: (Collection of file type icons. Format and extension of documents. PDF, DOC, JPG, PSD, MP3, TX, ZIP, PPT, XLS and others. Graphic templates for ui. Vector illustration)
%%Creator: Adobe Illustrator(R) 24.0
%%For: Анна Пльонсак
%%CreationDate: 26.01.2021
%%BoundingBox: 0 0 2480 2089
%%HiResBoundingBox: 0 0 2479.6321 2088.8672
%%CropBox: 0 0 2479.6321 2088.8672
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.0.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.0.3 x375 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%Keywords: (file, icon, type, document, extension, pdf, psd, format, spreadsheet, doc, flat, xls, jpg, graphic, ai, image, png, data, vector, gif, set, presentation, css, html, mp4, raw, txt, folder, label, symbol, video, app, application, audio, softwa
%%+re, zip, web, eps, mp3, button, computer, icons, download, element, emblem)
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%BeginPhotoshop: 828
% 3842494D04040000000003301C015A00031B25471C0100000200041C020500A6
% 436F6C6C656374696F6E206F662066696C6520747970652069636F6E732E2046
% 6F726D617420616E6420657874656E73696F6E206F6620646F63756D656E7473
% 2E205044462C20444F432C204A50472C205053442C204D50332C2054582C205A
% 49502C205050542C20584C5320616E64206F74686572732E2047726170686963
% 2074656D706C6174657320666F722075692E20566563746F7220696C6C757374
% 726174696F6E1C027800A6436F6C6C656374696F6E206F662066696C65207479
% 70652069636F6E732E20466F726D617420616E6420657874656E73696F6E206F
% 6620646F63756D656E74732E205044462C20444F432C204A50472C205053442C
% 204D50332C2054582C205A49502C205050542C20584C5320616E64206F746865
% 72732E20477261706869632074656D706C6174657320666F722075692E205665
% 63746F7220696C6C757374726174696F6E1C0200000200041C0219000466696C
% 651C0219000469636F6E1C02190004747970651C02190008646F63756D656E74
% 1C02190009657874656E73696F6E1C021900037064661C021900037073641C02
% 190006666F726D61741C0219000B73707265616473686565741C02190003646F
% 631C02190004666C61741C02190003786C731C021900036A70671C0219000767
% 7261706869631C0219000261691C02190005696D6167651C02190003706E671C
% 02190004646174611C02190006766563746F721C021900036769661C02190003
% 7365741C0219000C70726573656E746174696F6E1C021900036373731C021900
% 0468746D6C1C021900036D70341C021900037261771C021900037478741C0219
% 0006666F6C6465721C021900056C6162656C1C0219000673796D626F6C1C0219
% 0005766964656F1C021900036170701C0219000B6170706C69636174696F6E1C
% 02190005617564696F1C02190008736F6674776172651C021900037A69701C02
% 1900037765621C021900036570731C021900036D70331C02190006627574746F
% 6E1C02190008636F6D70757465721C0219000569636F6E731C02190008646F77
% 6E6C6F61641C02190007656C656D656E741C02190006656D626C656D
%EndPhotoshop
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=300 GradRes=150 Text=0 Stroke=0 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="пїњ" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c148 79.164050, 2019/10/01-18:03:16        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Collection of file type icons. Format and extension of documents. PDF, DOC, JPG, PSD, MP3, TX, ZIP, PPT, XLS and others. Graphic templates for ui.  Vector illustration</rdf:li>
            </rdf:Alt>
         </dc:title>
<dc:description>
   <rdf:Alt>
      <rdf:li xml:lang="x-default">Collection of file type icons. Format and extension of documents. PDF, DOC, JPG, PSD, MP3, TX, ZIP, PPT, XLS and others. Graphic templates for ui.  Vector illustration</rdf:li>
   </rdf:Alt>
</dc:description>
<dc:subject>
   <rdf:Bag>
      <rdf:li>file</rdf:li>
      <rdf:li>icon</rdf:li>
      <rdf:li>type</rdf:li>
      <rdf:li>document</rdf:li>
      <rdf:li>extension</rdf:li>
      <rdf:li>pdf</rdf:li>
      <rdf:li>psd</rdf:li>
      <rdf:li>format</rdf:li>
      <rdf:li>spreadsheet</rdf:li>
      <rdf:li>doc</rdf:li>
      <rdf:li>flat</rdf:li>
      <rdf:li>xls</rdf:li>
      <rdf:li>jpg</rdf:li>
      <rdf:li>graphic</rdf:li>
      <rdf:li>ai</rdf:li>
      <rdf:li>image</rdf:li>
      <rdf:li>png</rdf:li>
      <rdf:li>data</rdf:li>
      <rdf:li>vector</rdf:li>
      <rdf:li>gif</rdf:li>
      <rdf:li>set</rdf:li>
      <rdf:li>presentation</rdf:li>
      <rdf:li>css</rdf:li>
      <rdf:li>html</rdf:li>
      <rdf:li>mp4</rdf:li>
      <rdf:li>raw</rdf:li>
      <rdf:li>txt</rdf:li>
      <rdf:li>folder</rdf:li>
      <rdf:li>label</rdf:li>
      <rdf:li>symbol</rdf:li>
      <rdf:li>video</rdf:li>
      <rdf:li>app</rdf:li>
      <rdf:li>application</rdf:li>
      <rdf:li>audio</rdf:li>
      <rdf:li>software</rdf:li>
      <rdf:li>zip</rdf:li>
      <rdf:li>web</rdf:li>
      <rdf:li>eps</rdf:li>
      <rdf:li>mp3</rdf:li>
      <rdf:li>button</rdf:li>
      <rdf:li>computer</rdf:li>
      <rdf:li>icons</rdf:li>
      <rdf:li>download</rdf:li>
      <rdf:li>element</rdf:li>
      <rdf:li>emblem</rdf:li>
   </rdf:Bag>
</dc:subject>
         <xmp:CreatorTool>Adobe Illustrator 24.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2021-01-26T18:37:44+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2021-01-26T18:37:44+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2021-01-26T18:37:44+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>216</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA2AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVK7uBb&#xA;wNKV5Upt06mmKoYXErDlyIrvTFWnnmCMQxqAcVVbK9E44PtKPx9xiqKxV2KuxV2Koa8vBb8Bx5GQ&#xA;lQa0piql60v8xxVZLczJGWDbin68VRdrdJcJUbOPtLiqtirsVdirsVQl1eenOtuAeTLy516bn+mK&#xA;rPWl/mOKrJbuaLiwNRXcHuMVR0E8c0YdDt3HcHFV+KuxV2KuxVBS3pM7wKCpjpVq9a4q160v8xxV&#xA;Yb6SKZeZ5Rkbjv8AMYqmCOrqGU1U7gjFW8VdirsVdiqR+btbsdJ0xZbwsEmkEacV5fFQtv8AQuV5&#xA;MogLLiazWw08RKd0TTHV/MzywFA5TbCn93/blP5yDr/9EGm/pfJUf8x/LqcuYuF4ni1YiKE70NTj&#xA;+bh5pPb2nHPi+SpYfmJ5ZnvoIIjL6k0ixpWOg5OeI7++EauBNJx9u6echEcVk1yZtmS7l2KuxV2K&#xA;sX84+Z9J0i4tIr1nV3BkXipb4QQO2Zul7PyZwTCtnWa/tfBpZAZLs9wS9fzD0BkSRUumSSoRxA5D&#xA;EVrQ96UzIPY+YGvT83EHtHpiAQJ0f6JdH+YXl+Y8Y0uZCV50WBm+GtK7dq4nsfMOfD81j7R6aXIT&#xA;P+aUb5d88eX9U1NbGzaQzyKxUNGVHwjkd/kMr1HZebDDjlVe9t0fbun1GQY4E8R8mV5rncuxV2Ku&#xA;xVh3mPznoml679Wu2kEsMa8wqFh8QLDf5NlE9RGJou20nYufPjE4VwnzQ8X5i+Xpf7pbmSgJPGFm&#xA;2WlenhUZEauHm3S9ntRHnwD/ADmj+Yvl30fWK3Ho1p6hhbjXwr0x/Nw81/0Pai69N/1k48rebNG1&#xA;qaeCwLl4lDuHTiKE0yePPGfJxNb2Vm0wBnVHuLIsudc7FXYq7FXnd9+aPlS01e9hmebnFI0TgRE/&#xA;FGeLd/EZsIdmZZAEVu4ctfjBo2q/8rP8uVK+je1C+oR9WevD+b5e+P8AJuTvj81/PQ8/ktn/ADR8&#xA;sQxrJPFdxxt9h3t2UGu+xOI7NyHlw/NTrsY538mTeUvM2leYNPkudNLmGGUxPzXgeXENsPk2Y2o0&#xA;8sRqTdhzxyC4p3lDc7FXYq7FWFfmtp99e6JapaQPOyXIZwgJovBhU/ScxNZAyiKHV0Xb2CeTFEQB&#xA;keLp7i8403yxrUd/by3elXL2qSK8qLGSWVTUr/sumYMMMrFg08zh7PzCYMsc+G99k312y1rUrRmX&#xA;Srxby4khluQ0ZK8oUkiJDbV5KUPTrXLMkZSHI25mqw5ssf7ufESCdu4Efq+1LdD8seYo9a0+STTr&#xA;hY0uYWdjG1AokBJOV48MxIbHm42l0GcZYkwlQkOnm93zcvoDsVdirsVeY/m1o+qX2pWD2drJOiws&#xA;rMgqA3KtM6TsTU48cJCcgN+rxftRoc2bJA44mQETy96A0qTzTp9pp1rFpdwkdvBILiQRMX9bncNF&#xA;xq3HiPXU14169svz/l8kpSM47kVv0qN/c4ul/N4YQgMU6jE3sbu5mNb1/EOloiSO5uPqsT6NfW1p&#xA;H6clxBDE3F2UyF4vgkhYKDJWI8tu4ysTjGz4kDLeiT7qPI93qbpY5z4QcOSMRRIA5/VcdpRNb+nf&#xA;bqEH+XHl3XbLzXb3F3YzQQIkoaR1IUVQgb/PLu1tZingMYyBO33uL7P9najFqoynCUY0dyPJ7DnJ&#xA;PoTsVdirsVePfmNoGtXnm24mtbKWaJ0i4Oikg0QA0+kZrNTikZkgPddh6/Bj00YznGMrPM+bWj2e&#xA;taRp3G30y7mvuEjrzhZY1lea1dRVXDHiLZjXxoKUrjCMojYG/wCz9SdVnwZ8nqyQENv4hdcOQdR1&#xA;4h9u6lqOmatfafIZtMvjftFDFFH6TLDG0RAdl4uFpIASQY/tHBKEiORtng1WHHMVkx8FyPMWb5dO&#xA;n9bknf5UaLq2n6lfSXtpLbo8KqjSKVBPKtBXLdJjlEmw6/2j1mLLjiISEql09z0zM95F2KuxV2Kv&#xA;m7zF5P8ANE/mLVJIdLuZEe7ndGWMmqtIxU/Ig51WDV4hCIMhyDz2XTZDMkRPMssbU/OkU0r22h3F&#xA;LeJV0wNFN/eGSJ5HkpJX/dWwHw+25zD4MJG8xvz3Hn+tyuLKOUT5fYxfV/Lvm69s9Li/RV6z2ls8&#xA;U4aJgvqNdTygr/sJVGZmLUYomR4o7nv8gP0OLkw5JAek7D9JenfkzpOp6Z5fvIdQtZLWV7suiSqV&#xA;JX00FRX3GajtTLGcwYm9nZdn45RgRIVuz/NY57sVdirsVQer/wC8L/Nf14qhUnh4L+8XoO4xVd68&#xA;H+/F+8YqrWxDyAoeQB3I3AxVHYq7FXYq7FUt1kgNbk7AMa/hiq314P8Afi/eMVd68H+/F+8YqibP&#xA;4mLrupBow6dfHFUXirsVdirsVSrUGVdSjLEAen1PzbFW/Xg/34v3jFXevB/vxfvGKo2zB4k9moQf&#xA;EYqr4q7FXYq7FUnkdF1G45MFrSlTTsMVVPXg/wB+L94xVwmhJoJFJPQVGKphbqRHQihr0OKqmKux&#xA;V2KuxVbLFHKhSReSnqPliqh+jLH/AH0PvP8AXFXfoyx/30PvP9cVVYbeGAERLxB3P+ZxVUxV2Kux&#xA;V2Kqc1tBOAJUDBen+YxVS/Rlj/vofef64q79GWP++h95/riqvFFHEgSNeKjoMVXYq7FXYq7FVGaz&#xA;tpmDSoGYCgO/T6MVWfoyx/30PvP9cVd+jLH/AH0PvP8AXFUQqqqhVFFUUA9hireKuxV2KuxVQksb&#xA;SRy7xgsepqcVW/oyx/30PvP9cVcunWSkERCo3G5/riqJxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVZNNHDGZJDRR1PXri&#xA;qH+uOdwBQ9OuKua8kCk0XYV7/wBcVVba5SdOS7MPtL4YqrYq7FXYq7FVK4uYoAvM0L7IKE1OKqX1&#xA;uTwH4/1xVZJfSIhbiDSm2/jiqKhmjmjDoag/eDiq/FXYq7FXYqoT3ccbiKv70jkBQ0p/mMVWfW5P&#xA;Afj/AFxVa1+YypdRxJoadcVRasrKGU1U7gjFW8VdirsVdiqGkvUEjRIayJ9oEHFWvrcngPx/riq0&#xA;agFmCSgBWGzDsffFUZirsVdirsVdiqV+Y9RsLHTi95cR2yO6ojSsEBbrQVp2GEAlsx4pTNRBKVJ5&#xA;u8rBFB1a0rQf7uT+uHgPc3fks38yXybPm7yqRQ6taUP/ABcn9ceA9y/ks38yXyX2Pmbys13FHBql&#xA;q0sjBERZlJYsaAAV3qceA9yDo8wFmMvkyXIuM7FXYq7FUi8y6vpVjLape3kNszEsqyuqEqCNxUjI&#xA;ynGPMt+HS5couETKu4IT/F/lX/q72n/I5P65Hxod4bv5N1P+py+Rabzb5UYcW1a0IP8Axcn9cfGh&#xA;3hf5N1P+py+RRmi695furv6vY39vPO6kiKOVXY8dyaAnphjkidgWvLos2McUoSiPMJ7k3GdirsVd&#xA;iqQ6tqum22rIlxdRROsY5K7qpFakbE++UT1OOBqUgD73Ix6TLMXGMiPcs/xDoX/Vwt/+Ri/1yH53&#xA;D/Pj82z+T9R/Ml8lr695fcUa/tyP+Mq/1x/O4f58fmv8n6j+ZL5Jjo+o6bc+pHZ3McxSjMsbh6A9&#xA;9ictx54T+kgtWXTZMe84mPvTLLWh2KuxV2KpDJqFimo3HK4jXem7r1GxHXMKXaWniSDkjY828aXK&#xA;RYifkv8A0rpv/LVF/wAGv9cj/Kmm/wBUh8wn8pl/mn5LH1DSXNWuYiR/lj+uP8qab/VIfML+Uy/z&#xA;T8k0064t5resEiyIh41VuVO9MycOox5RcJCQ8mqeOUDUhSKy5g7FXYq7FXnP54/8o5Y/8xg/5NPl&#xA;2Hm7rsP+9l/V/SHmuh3+j2mhagLy2iurqd1it43WPmA8Ug5h2BdFR+LfBTegrlpBt3mfHOWSPCSA&#xA;P1j8bp9cyaU3KW3OkxzSPZNJbslo0cMIFyLhFbj+8qfTaq1koQD0yO/m4kRPkeOvVv6tz6a93X+i&#xA;xjRTbnzbYG2BFsb+L0Q3UJ6w4196ZM8nPz34Mr58J+59M5hvCuxV2KuxV43+ef8Ax2NN/wCYdv8A&#xA;iea7W8w9n7Mf3c/636EotZfL4W0+vfUTZGC0EIRY/VFyAnqtOYh6vp/b5h+ppTKwY7XVbOZOOb1c&#xA;HHxXK+dcO9cN7XyqmmewOngIdMHmNeHNytr9V9H1JKhQV+rer9jelePvXHaunF8P7FAnx7+J4P8A&#xA;ncV0P8+ufx8mvymqfPdqTSvCcnjQD+7bpTbHS/3gT29/ikvh9733Nq+fuxV2KuxV5J5+CnzfMH2Q&#xA;iHkTttwWucl2p/jB+D3HYx/wUV5/ejJb3yu0srRCFXuJTOpdAUjcRvFGtKH4BLSQjpQ5bLJgJNVu&#xA;b92xA+F7+5oji1IAB4vSK58xYJ+PD6feEJ9d0gW6fWDA99axCcvGg4SzAyKsZoArbNEW7fCcq8TH&#xA;W9cURfvO+3+5+Td4WXi9PEISNbnkNt/91XvCYflV/wAdK+/4wr/xLMjsP65e5xfaP+7j7/0PSs6V&#xA;5J2KuxV2KvMNSNNSuj/xdJ/xI55Trf7+f9eX3vYYP7uPuH3JlFe2kkwNwYfTEUfH92u0xC/EeIGy&#xA;kHl7bZscepxSl6+Hh4Y16R9W2+w5A/V5bdXFlikB6buz16fjkgb269W3tkqhZVb1eKqp5c2AqVA/&#xA;ZpmBqc3FCA2ut6AG9nuHdTkYsdSkd/wGUeR/+OdP/wAZj/xFc632W/uJf1/0B0/a/wDeD3Mjzp3U&#xA;uxV2KuxVA61FHJYMJEVwCpHIA0NffFIkRyQiWNlwX/R4ug/YX+mG2XiS7y39Rsf+WeL/AIBf6Y2v&#xA;iS7yqW9lZrMhEEYIIIIRagj6MbXxJd5TTAwdirsVdiqVa5BDI9sZI1c8iKsAdtvHAQGUZyHI0s+o&#xA;2P8Ayzxf8Av9MeEMvGn3n5u+o2P/ACzxf8Av9MeEL40+8/NEWNraxzFo4URgpoyqAfvAxACDkkdi&#xA;SmGFg7FXYq7FUp1CGJtUj5IrVj3qAe5yJhE8wzGSQ5Eu+q23++U/4EYPDj3BPiz7z83fVbb/AHyn&#xA;/AjHw49wXxZ95+aLsIYk5lEVSaVKgD9WERA5BjKcjzNovJMXYq7FXYqk7RxnUbgFQeh6DwGVHBA/&#xA;wj5M/El3lU9GH/fa/cMfAx/zR8l8SXeXejD/AL7X7hj4GP8Amj5L4ku8o6zRVhooCip6CmTjAR5C&#xA;mJkTzVskh2KuxV2KqVzbrcQmJiQDTcddjXFUJ+hov9+yfeP6Yq79DRf7+k+8f0xVE2tmlupCsXqa&#xA;1bFVfFXYq7FXYqh7yyjugodivAkilO+Kof8AQ0X+/pPvH9MVd+hov9/SfeP6YqjLe3WCIRqS1K/E&#xA;eu+KqmKuxV2KuxVC3WnRXMokZ2VgOPw08Sf44qo/oaL/AH9J94/pirv0NF/v6T7x/TFUdHGI41Qd&#xA;FAFT1NBTfFV2KuxV2KuxVBT6VFLM0pkdWbqBTFVn6Gi/39J94/pira6RErA+rIaGtKj+mKo8ADpi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirTMqjkxCjxOwxVR+tr/LX3xVo3igE8TtviqtFKkqB0NQcVXYq7FXYq7FVryIgq&#xA;xA8KmlcVUvra/wApxVa19Go5MpoOuKohWVlDKaqdwRireKuxV2KuxVZJMkexI5dlrviqn9bX+U4q&#xA;19diDKGHEMaV7YqiMVdirsVdirsVU5LiNDSoZu6gioxVZ9bX+U4q5LyJpRGfhYj4a9DiqvirsVdi&#xA;rsVdiqD1f/eF/mv68VUE+wvyGKtkVBHjtirdnG0Uo4seLbMvY4qmOKuxV2KuxVLdY+1bf65/hire&#xA;KrZEDoVO1cVVtPRo2ZORKUrQ9jiqNxV2KuxV2KpXff8AHTi/4x/xbFV+KrJYhIACaUNcVRljyEZQ&#xA;tyC/Zr4YqiMVdirsVdiqUn/jo3H0fqGKquKqcsIkYGpBGKphbMxhHI8iNq+OKquKuxV2KuxVhf5p&#xA;zTRaLamJ2jJuQCVJBp6beGbjsWIOQ2P4f0h5v2nnKOCJBr1/oLBPLrX17qaQs0s8IVnmXnL8Mair&#xA;MBGwYnwHc5vdWIwhewPTl+l5Xs85MmWjch13ly79jadSRadFp8t5d/WLQOg9OJpZjIrvLeKigVpy&#xA;pBHXltQHvmEDMzEY8MvgK5Q/4o8nZyjjjjM58cNthcrBMstfH0x57c+rH9Dvr1ta09WuJSpuYQQX&#xA;ahBkHvmfqcUfDlsPpP3Oo0WfIc8PUfrj183uucQ+pOxV2KuxV57+Zk88eoWYjkZAYmJCkj9r2zIw&#xA;jZ5jt6chONHokeixTXcbkvNPMZUhVBI6qgcN8b8Q7dQANqDvk5bOv0sTMcyTYHM7X1PP8c0RqcMd&#xA;lpqv6z/WZCgXlLLWv1e3lbiACv2pm+0Rt0wR3LZqIjHjuzxGup/mwP8AvjzX+Q7q5fzLbq8rspSS&#xA;qsxI+wfHHKPSy7HySOoAJPX7nqeYr2LsVdirsVeY+eLi4TzHOqSuqhY6AMQPsDwzpOzoA4RY73Z6&#xA;aI4AiP0Xbc7VzdTCAIXvW9YAL+7jKirhQrF5QO4p75X4xo7C+m3mf0Bjxnfb3IbUNPa00r1GuJje&#xA;xmkiiQ0p68sXIqR9n92KEN1+jLcWXjnVDh93kD+lnCdy5bfsCZflzPPJf3YkkZwIgQGJP7XvmN2t&#xA;ECMaHVq1gAAZ7mjcB2KuxV2KvEdavLtdZvws8gAuJQAHboHPvm4xxHCPc6+ZNlPI9FeW3t4Y7qUX&#xA;0kfGUmU0SYhZgGWu37r1Fp4rlJyUeWzZwfNKNbl9GaFrKeYW80ZkTlIxJHquqnr/ACqMtxi+bCfk&#xA;zj8sZpZdHujI7ORcEAsSTTgvjmHqxUh7nIwHZmOYje7FXYq7FUq8yadZX2ncbuISrG4dAa7N0rt7&#xA;HLsOeeI3A0XH1Okx5xw5BxAJQnk7y0VBNglSB3f+uZH8pZ/533OF/Imk/mD7f1rv8G+Wf+WBPvf/&#xA;AJqx/lLP/O+5f5E0n8wfb+tVtPKXlyK6iljskWSNw6MC+zKag9fHBLtDORRlsfcyh2PpYkSEBY9/&#xA;62S5hOzdirsVdiqR+Y9K0+8ltXuYRKwJQE1+zUGmxyQkRycbPo8WU3MXSFXyroCmq2ag+IZx/HD4&#xA;kmkdl6cfw/f+tx8q6AQAbNSB0qz/AC8fbHxJL/Jen/m/f+tF6T5f0e0vBcW1sscyKeLgttXY9T4H&#xA;AZktmLQYccuKMaKd5Fy3Yq7FXYqx7V9G0y61dXuLdZHkjBdiTvSoHQ+AzIx6vJAVE0GyOaURQK0+&#xA;XNFKlTbAq1Kjk9DTp+17ZL87l7/uZePPvc3lzRm+1bA7cd2c7VrT7XjviNbl7/uXx596P0bR9NsX&#xA;kktIBE7gKxBJqOvcnIZdRPIKkbYzyylzKaZQ1uxV2KuxVis/ljQZtTujJZqxZuZNW3ZtyevicuGe&#xA;Y6tZxR7l/wDhTy/Un6mtTufif/mrH8xPvXwo9zR8o+XDStkppsPif/mrH8xPvXwo9yc6Nplhp9s0&#xA;dnCIUdizKCTVqAV3J8MhOZlzZRiByR+QZOxV2KuxVQvbdri3aJSASRuemxriqCGn6iAAJ0oOm39m&#xA;Kt/UNR/3+n3f2YqibO1ljBM7B3r8JG1B+GKorFXYq7FXYqhNQs5LkR+mwUxknfFUP9Q1H/f6fd/Z&#xA;irvqGo/7/T7v7MVRtrA8UY9Qhpd+TDp1xVWxV2KuxV2KoG9sZ5rhZonVCq8d/mfY+OKqX1DUf9/p&#xA;939mKu+oaj/v9Pu/sxVMIIvTjUHd6DmfE064qvxV2KuxV2KpdPp101zJNFIqh6bH5fLFVv1DUf8A&#xA;f6fd/Zira2GochymQrXcU7fdiqYqiqKKKDFW8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVUzcQg05fgcVcbmECpbb5HFVR&#xA;WDAMpqDuCMVdirsVdirsVcSAKnoMVU/rEP8AN+BxVxuYB1eg8TXFVTFXYq7FXYq7FWmZVFWNBiqz&#xA;6xD/ADfgcVcLiEsFDbnoMVVMVdirsVdirsVWvIiCrGlcVW/WIf5vwOKtpNE7cVarUrT2xVfirsVd&#xA;irsVdiqE1V2WycqSpqNwaHriqghqik9aDFXMKqR4imKrrAzxOI2IMbdvA+2KphirsVdirsVS/Vnd&#xA;WtwrFQzGoBpXpirWKrJULxlR1Pj88VRGntMAYpCGUCqnuPbFUZirsVdirsVS29d/0jGnI8DHUrXa&#xA;tT2xVvFVOaNnUcTQg1riqOs5JWjpJQsu3Id8VV8VdirsVdiqVM7nUJ1LEqKUBOw2GKqmKqUkcpkV&#xA;424lehxVMoHZ4gzUDdDTpiqpirsVdirsVYx5/v7uz0uA20hjMkwVyADUBSabg9xi7bsfTwy5CJix&#xA;TGNO1PXbqyubg6k0IthtyROJopahY0oTxotAanC7fPpNPCcY+HfF5n8e/kmEaeYzcTRSaoyrFLNG&#xA;HWOJqrEyLzI5DjXnU1OwxcYx03CCMfMA8z1vb7Pildl5j1waxBbtemWP6wsbMoXiy8wpI26HFzMv&#xA;Z2DwjIQo8N9e56lgePdirsVdirzz8y9c1ax1XTreyuDAkiFmoqN8RelfiBzfdk6TFkhIzF0WrJIg&#xA;oJr7zDbyMl5rcled6Izbx2sw4WMQmJfi3wswJHE7jvlww4ZC44x/BzMh9Rr8FFnvXrL5qdRMNaZb&#xA;V7aGeN2hh5GSejCIgDqIvj64Dj0428P1cRHM8h1+ey796zyX5l1+584Lp13eGe3BmRlKItfTU0Pw&#xA;gHquHX6LDHT8cY0du/qsJG6eoZzbc7FXYq7FXnXnLXtVtPMMsVvP6aRogQBVNKqCeoPc5oNfrMsM&#xA;pjE0HX6jNKM6Bba91mO1huJdXZRLH6rRiCIvT0/Uqg5DkP2STTfE5soiCZ8xfId1/jkvHOr4vsU7&#xA;vUtbt9PN5+lHcO1IFEMIBXhG4L1bkp/e0oFbp4ZGeoyxhxcZ8th5fr80SyTAvi+wJn5C1vU7+8uo&#xA;7ucyokYZQVUUPKn7IGZHZmpyZJESN7NmlyykTZZrm5c12KuxV2KvDtY84+ZYdav1ivmVVnlRQFTZ&#xA;VcgD7PgMuEQ+a6rtvVxyzAmaEj3d/uT8XettNeRnzBJEtnRZJpFtSgY+p9ri54isdKH4t/s5Gh3O&#xA;0Gp1BMh45HB1IhXXz8v62/JJtW80eZLMWzW+rS3ENxEsgnMcSoWoOSrTkfgb4SDQ5IRDrtV2rqsf&#xA;CY5ZSEhd1GvOvdy3pnX5YaxqWqaRdS385nkjuOCMQoovBTT4QO+QmKem9nNZlz4pHIeIiX6AzHIP&#xA;QuxV2KuxVJPNukR6lpqI8jR+jIHBUA1qCvf54ubotadPIyAuwx9fIluYPT+uScGIcrxXrSn8cNux&#xA;/l2V3wC0Q/lFnEwbUJSLhneb4E+JpCCx+kqMDUO16qoD01W56LLHyHaQ3kEwupCYpFcDiu/E1p+G&#xA;G2eTtycomPCNwzbA6N2KuxV2KsS86+VbXV7uyuJZ5InjBjXhx/mBruDmw0faMsESAAbYShaWn8vY&#xA;SSTqdzVmmcn4PtXKBJj0/bUUOZP8sH+ZHp3/AMO4+SPDXp5DEaoqatdhU+wPgoP3axbbfyIFwHta&#xA;/wCCP299/evh+aO0PyXb2WuJqpu5Z7iNXFGWNQeQKmvAL/NlWftI5MZx8IA+KRCjbLs1jN2KuxV2&#xA;KsR8w+VbTUNbM0k0iNMikhaUHEce4/yc12o7OjlmZElxsmmEzdqSeTYVlWUXkpdUEQ5JGw4BePEq&#xA;ykHbIDssA3xH7EflR3tXPkyG5AE97M4DFwCE2ZlVT0H8saj6MZ9liXOR/H9iDpQeZKaeWPLNrpM0&#xA;80MryNIoQh6UArXsMv0uhjhJIN22YsAgdmQZmt7sVdirsVebX35Z2N1q15Ib2VfUkaWgVTQyHlT8&#xA;cnxvK5vZbHOZlxy9RJ5Dqr3P5dC5V1m1SZlkIaT93GOTLWhagFT8R648bPJ7NCd8WSW/kGrz8uFv&#xA;EhS51SZ0gBWFOCBVDGpoFoKnuceNGX2ZGQASySIjy2DJfJ/lqDQLCW3hmacTS+oWcAU+ELTb5ZGR&#xA;t2vZfZkdJAxBMrNp9gdm7FXYq7FUNqUUktoyRjkxIoPpxVAquohQPq/QU6j+uKt01H/ln/Ef1xVF&#xA;WUU5q06emVPwjrXFUZirsVdirsVQGqwTy+iYk5lGJI29sVUKaj/yz/iP64q6mo/8s/4j+uKo2zjk&#xA;CB5V4SGoKdab4qicVdirsVdiqW6hBdG8SaGPmAnE7jrU/wBcVU6aj/yz/iP64q6mo/8ALP8AiP64&#xA;qmNtGUjBbZ2ALDwNOmKquKuxV2KuxVKp4L1b2WSOLmr0oajwHvirVNR/5Z/xH9cVbVdQLAG3oCdz&#xA;Uf1xVM44wi8Qa4quxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2Kv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:520f0377-bf5b-4b64-95f9-eff7acd5280b</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:520f0377-bf5b-4b64-95f9-eff7acd5280b</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:3dbc6e47-24ab-4d14-89c7-42f7dbecb860</stRef:instanceID>
            <stRef:documentID>xmp.did:3dbc6e47-24ab-4d14-89c7-42f7dbecb860</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1d4c9b2b-c660-5b4a-b21a-3092321e51f9</stEvt:instanceID>
                  <stEvt:when>2018-10-30T13:43:20+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bf0f66b1-a3c0-b54b-a1d2-58e399664907</stEvt:instanceID>
                  <stEvt:when>2018-10-30T15:40:35+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:498a8cda-e34a-c54b-a01a-abee159d5b91</stEvt:instanceID>
                  <stEvt:when>2018-12-05T09:40:03+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:23dc6479-5df0-de4b-903f-ce04c57d01cb</stEvt:instanceID>
                  <stEvt:when>2018-12-05T09:44:22+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0307d70f-d2e1-054d-a61d-db2d7572d52a</stEvt:instanceID>
                  <stEvt:when>2019-01-10T12:26:45+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8d2eadfa-21eb-964c-a47a-6fdc86132595</stEvt:instanceID>
                  <stEvt:when>2019-01-10T12:38:30+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:27f81a6c-5196-d349-a5fa-27d875882681</stEvt:instanceID>
                  <stEvt:when>2019-01-10T13:18:50+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:722ab4d8-3489-424a-bcde-c656e28fcd43</stEvt:instanceID>
                  <stEvt:when>2019-02-07T11:22:40+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fbcf324c-8877-734f-971d-71822d7a1eed</stEvt:instanceID>
                  <stEvt:when>2019-02-10T21:40:59+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9b6cd0c6-9d42-e147-a585-cd050b3495b6</stEvt:instanceID>
                  <stEvt:when>2019-02-11T12:29:58+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:990aae7e-a18b-6c43-b06b-d58552380041</stEvt:instanceID>
                  <stEvt:when>2019-05-22T19:18:43+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cef13259-6701-2b42-9645-dab756f681cb</stEvt:instanceID>
                  <stEvt:when>2019-05-23T12:01:15+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4d4cc28c-beb5-b543-91d9-9bd1bd911ece</stEvt:instanceID>
                  <stEvt:when>2019-07-05T22:47:28+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ee2aeb39-5e87-bb4f-9eff-f9c292e6dd79</stEvt:instanceID>
                  <stEvt:when>2019-07-09T11:19:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3dbc6e47-24ab-4d14-89c7-42f7dbecb860</stEvt:instanceID>
                  <stEvt:when>2021-01-26T18:34:52+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:520f0377-bf5b-4b64-95f9-eff7acd5280b</stEvt:instanceID>
                  <stEvt:when>2021-01-26T18:37:44+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2479.632030</stDim:w>
            <stDim:h>2088.867198</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>–У—А—Г–њ–њ–∞ –Њ–±—А–∞–Ј—Ж–Њ–≤ –њ–Њ —Г–Љ–Њ–ї—З–∞–љ–Є—О</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>–Е–µ–ї—Л–є</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>вАЮ–µ—А–љ—Л–є</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB –Ї—А–∞—Б–љ—Л–є</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB –ґ–µ–ї—В—Л–є</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB –Ј–µ–ї–µ–љ—Л–є</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB –≥–Њ–ї—Г–±–Њ–є</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB —Б–Є–љ–Є–є</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB –њ—Г—А–њ—Г—А–љ—Л–є</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=64 B=64</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>63</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=85 G=239 B=196</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>84</xmpG:red>
                           <xmpG:green>239</xmpG:green>
                           <xmpG:blue>195</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=38 G=38 B=38</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>38</xmpG:red>
                           <xmpG:green>38</xmpG:green>
                           <xmpG:blue>38</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=192 B=128</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                               <?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2088.87 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2088.87 li
2479.63 2088.87 li
2479.63 0 li
cp
clp
2479.63 2088.87 mo
.000121942 2088.87 li
.000121942 -3.4024e-05 li
2479.63 -3.4024e-05 li
2479.63 2088.87 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1565.32 1635.32 mo
1430.2 1635.32 li
1427.31 1635.32 1424.97 1637.66 1424.97 1640.56 cv
1424.97 1914 li
1424.97 1916.89 1427.31 1919.24 1430.2 1919.24 cv
1629.45 1919.24 li
1632.34 1919.24 1634.69 1916.89 1634.69 1914 cv
1634.69 1704.69 li
1634.69 1702.93 1633.99 1701.25 1632.75 1700.01 cv
1570 1637.26 li
1568.76 1636.02 1567.07 1635.32 1565.32 1635.32 cv
cp
.87 .87 .87 rgb
f
1597.61 1769.15 mo
1462.04 1769.15 li
1459.96 1769.15 1458.28 1767.46 1458.28 1765.39 cv
1458.28 1765.39 li
1458.28 1763.31 1459.96 1761.63 1462.04 1761.63 cv
1597.61 1761.63 li
1599.69 1761.63 1601.37 1763.31 1601.37 1765.39 cv
1601.37 1765.39 li
1601.37 1767.46 1599.69 1769.15 1597.61 1769.15 cv
cp
.929412 .929412 .929412 rgb
f
1597.61 1807.69 mo
1462.04 1807.69 li
1459.96 1807.69 1458.28 1806.01 1458.28 1803.93 cv
1458.28 1803.93 li
1458.28 1801.86 1459.96 1800.17 1462.04 1800.17 cv
1597.61 1800.17 li
1599.69 1800.17 1601.37 1801.86 1601.37 1803.93 cv
1601.37 1803.93 li
1601.37 1806.01 1599.69 1807.69 1597.61 1807.69 cv
cp
f
1597.61 1846.24 mo
1462.04 1846.24 li
1459.96 1846.24 1458.28 1844.56 1458.28 1842.48 cv
1458.28 1842.48 li
1458.28 1840.4 1459.96 1838.72 1462.04 1838.72 cv
1597.61 1838.72 li
1599.69 1838.72 1601.37 1840.4 1601.37 1842.48 cv
1601.37 1842.48 li
1601.37 1844.56 1599.69 1846.24 1597.61 1846.24 cv
cp
f
1597.61 1884.79 mo
1462.04 1884.79 li
1459.96 1884.79 1458.28 1883.1 1458.28 1881.03 cv
1458.28 1881.03 li
1458.28 1878.95 1459.96 1877.27 1462.04 1877.27 cv
1597.61 1877.27 li
1599.69 1877.27 1601.37 1878.95 1601.37 1881.03 cv
1601.37 1881.03 li
1601.37 1883.1 1599.69 1884.79 1597.61 1884.79 cv
cp
f
1597.61 1730.6 mo
1462.04 1730.6 li
1459.96 1730.6 1458.28 1728.92 1458.28 1726.84 cv
1458.28 1726.84 li
1458.28 1724.76 1459.96 1723.08 1462.04 1723.08 cv
1597.61 1723.08 li
1599.69 1723.08 1601.37 1724.76 1601.37 1726.84 cv
1601.37 1726.84 li
1601.37 1728.92 1599.69 1730.6 1597.61 1730.6 cv
cp
f
1573.99 1701.95 mo
1629.12 1701.95 li
1631.18 1701.95 1632.2 1699.46 1630.75 1698.01 cv
1571.99 1639.25 li
1570.54 1637.8 1568.06 1638.83 1568.06 1640.88 cv
1568.06 1696.01 li
1568.06 1699.29 1570.71 1701.95 1573.99 1701.95 cv
cp
f
1593.24 1608.66 mo
1458.12 1608.66 li
1455.23 1608.66 1452.88 1611.01 1452.88 1613.9 cv
1452.88 1887.34 li
1452.88 1890.24 1455.23 1892.58 1458.12 1892.58 cv
1657.37 1892.58 li
1660.26 1892.58 1662.6 1890.24 1662.6 1887.34 cv
1662.6 1678.03 li
1662.6 1676.28 1661.91 1674.59 1660.67 1673.35 cv
1597.92 1610.6 li
1596.67 1609.36 1594.99 1608.66 1593.24 1608.66 cv
cp
.95 .95 .95 rgb
f
1601.91 1675.29 mo
1657.04 1675.29 li
1659.1 1675.29 1660.12 1672.81 1658.67 1671.36 cv
1599.91 1612.6 li
1598.46 1611.15 1595.98 1612.17 1595.98 1614.22 cv
1595.98 1669.36 li
1595.98 1672.63 1598.63 1675.29 1601.91 1675.29 cv
cp
.9 .9 .9 rgb
f
1666.02 1815.74 mo
1420.73 1815.74 li
1417.9 1815.74 1415.6 1813.45 1415.6 1810.62 cv
1415.6 1728.2 li
1415.6 1725.37 1417.9 1723.08 1420.73 1723.08 cv
1666.02 1723.08 li
1668.86 1723.08 1671.15 1725.37 1671.15 1728.2 cv
1671.15 1810.62 li
1671.15 1813.45 1668.86 1815.74 1666.02 1815.74 cv
cp
.498039 .8 .270588 rgb
f
.25 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
1666.02 1815.74 mo
1420.73 1815.74 li
1417.9 1815.74 1415.6 1813.45 1415.6 1810.62 cv
1415.6 1728.2 li
1415.6 1725.37 1417.9 1723.08 1420.73 1723.08 cv
1666.02 1723.08 li
1668.86 1723.08 1671.15 1725.37 1671.15 1728.2 cv
1671.15 1810.62 li
1671.15 1813.45 1668.86 1815.74 1666.02 1815.74 cv
cp
1 1 1 rgb
@
1493.36 1771.44 mo
1494.86 1771.83 1496.74 1771.99 1499.02 1771.99 cv
1507.26 1771.99 1512.29 1767.99 1512.29 1760.68 cv
1512.29 1753.7 1507.34 1750.32 1499.8 1750.32 cv
1496.82 1750.32 1494.54 1750.56 1493.36 1750.87 cv
1493.36 1771.44 li
cp
1486.53 1745.92 mo
1489.83 1745.37 1494.15 1744.9 1499.64 1744.9 cv
1506.4 1744.9 1511.34 1746.47 1514.48 1749.3 cv
1517.39 1751.81 1519.12 1755.66 1519.12 1760.37 cv
1519.12 1765.16 1517.7 1768.93 1515.03 1771.68 cv
1511.42 1775.52 1505.53 1777.49 1498.86 1777.49 cv
1496.82 1777.49 1494.93 1777.41 1493.36 1777.02 cv
1493.36 1798.22 li
1486.53 1798.22 li
1486.53 1745.92 li
cp
f
1535.14 1792.8 mo
1536.86 1793.11 1539.38 1793.19 1542.05 1793.19 cv
1556.65 1793.19 1564.58 1785.03 1564.58 1770.73 cv
1564.66 1758.25 1557.59 1750.32 1543.15 1750.32 cv
1539.61 1750.32 1536.94 1750.63 1535.14 1751.03 cv
1535.14 1792.8 li
cp
1528.31 1746 mo
1532.47 1745.37 1537.41 1744.9 1542.83 1744.9 cv
1552.65 1744.9 1559.64 1747.18 1564.27 1751.5 cv
1568.98 1755.82 1571.73 1761.94 1571.73 1770.5 cv
1571.73 1779.14 1569.06 1786.2 1564.11 1791.07 cv
1559.16 1796.02 1551 1798.69 1540.71 1798.69 cv
1535.84 1798.69 1531.76 1798.45 1528.31 1798.06 cv
1528.31 1746 li
cp
f
1580.6 1745.29 mo
1609.1 1745.29 li
1609.1 1751.03 li
1587.43 1751.03 li
1587.43 1768.62 li
1607.45 1768.62 li
1607.45 1774.27 li
1587.43 1774.27 li
1587.43 1798.22 li
1580.6 1798.22 li
1580.6 1745.29 li
cp
f
958.201 1635.32 mo
823.084 1635.32 li
820.192 1635.32 817.848 1637.66 817.848 1640.56 cv
817.848 1914 li
817.848 1916.89 820.192 1919.24 823.084 1919.24 cv
1022.33 1919.24 li
1025.22 1919.24 1027.57 1916.89 1027.57 1914 cv
1027.57 1704.69 li
1027.57 1702.93 1026.87 1701.25 1025.63 1700.01 cv
962.879 1637.26 li
961.638 1636.02 959.956 1635.32 958.201 1635.32 cv
cp
.87 .87 .87 rgb
f
990.493 1769.15 mo
854.921 1769.15 li
852.844 1769.15 851.16 1767.46 851.16 1765.39 cv
851.16 1765.39 li
851.16 1763.31 852.844 1761.63 854.921 1761.63 cv
990.493 1761.63 li
992.57 1761.63 994.254 1763.31 994.254 1765.39 cv
994.254 1765.39 li
994.254 1767.46 992.57 1769.15 990.493 1769.15 cv
cp
.929412 .929412 .929412 rgb
f
990.493 1807.69 mo
854.921 1807.69 li
852.844 1807.69 851.16 1806.01 851.16 1803.93 cv
851.16 1803.93 li
851.16 1801.86 852.844 1800.17 854.921 1800.17 cv
990.493 1800.17 li
992.57 1800.17 994.254 1801.86 994.254 1803.93 cv
994.254 1803.93 li
994.254 1806.01 992.57 1807.69 990.493 1807.69 cv
cp
f
990.493 1846.24 mo
854.921 1846.24 li
852.844 1846.24 851.16 1844.56 851.16 1842.48 cv
851.16 1842.48 li
851.16 1840.4 852.844 1838.72 854.921 1838.72 cv
990.493 1838.72 li
992.57 1838.72 994.254 1840.4 994.254 1842.48 cv
994.254 1842.48 li
994.254 1844.56 992.57 1846.24 990.493 1846.24 cv
cp
f
990.493 1884.79 mo
854.921 1884.79 li
852.844 1884.79 851.16 1883.1 851.16 1881.03 cv
851.16 1881.03 li
851.16 1878.95 852.844 1877.27 854.921 1877.27 cv
990.493 1877.27 li
992.57 1877.27 994.254 1878.95 994.254 1881.03 cv
994.254 1881.03 li
994.254 1883.1 992.57 1884.79 990.493 1884.79 cv
cp
f
990.493 1730.6 mo
854.921 1730.6 li
852.844 1730.6 851.16 1728.92 851.16 1726.84 cv
851.16 1726.84 li
851.16 1724.76 852.844 1723.08 854.921 1723.08 cv
990.493 1723.08 li
992.57 1723.08 994.254 1724.76 994.254 1726.84 cv
994.254 1726.84 li
994.254 1728.92 992.57 1730.6 990.493 1730.6 cv
cp
f
966.872 1701.95 mo
1022.01 1701.95 li
1024.06 1701.95 1025.09 1699.46 1023.63 1698.01 cv
964.873 1639.25 li
963.422 1637.8 960.942 1638.83 960.942 1640.88 cv
960.942 1696.01 li
960.942 1699.29 963.597 1701.95 966.872 1701.95 cv
cp
f
986.119 1608.66 mo
851.003 1608.66 li
848.11 1608.66 845.766 1611.01 845.766 1613.9 cv
845.766 1887.34 li
845.766 1890.24 848.11 1892.58 851.003 1892.58 cv
1050.25 1892.58 li
1053.14 1892.58 1055.49 1890.24 1055.49 1887.34 cv
1055.49 1678.03 li
1055.49 1676.28 1054.79 1674.59 1053.55 1673.35 cv
990.797 1610.6 li
989.557 1609.36 987.874 1608.66 986.119 1608.66 cv
cp
.95 .95 .95 rgb
f
994.79 1675.29 mo
1049.92 1675.29 li
1051.98 1675.29 1053 1672.81 1051.55 1671.36 cv
992.792 1612.6 li
991.34 1611.15 988.86 1612.17 988.86 1614.22 cv
988.86 1669.36 li
988.86 1672.63 991.515 1675.29 994.79 1675.29 cv
cp
.9 .9 .9 rgb
f
1058.91 1815.74 mo
813.608 1815.74 li
810.777 1815.74 808.483 1813.45 808.483 1810.62 cv
808.483 1728.2 li
808.483 1725.37 810.777 1723.08 813.608 1723.08 cv
1058.91 1723.08 li
1061.74 1723.08 1064.03 1725.37 1064.03 1728.2 cv
1064.03 1810.62 li
1064.03 1813.45 1061.74 1815.74 1058.91 1815.74 cv
cp
.52549 .478431 1 rgb
f
1058.91 1815.74 mo
813.608 1815.74 li
810.777 1815.74 808.483 1813.45 808.483 1810.62 cv
808.483 1728.2 li
808.483 1725.37 810.777 1723.08 813.608 1723.08 cv
1058.91 1723.08 li
1061.74 1723.08 1064.03 1725.37 1064.03 1728.2 cv
1064.03 1810.62 li
1064.03 1813.45 1061.74 1815.74 1058.91 1815.74 cv
cp
1 1 1 rgb
@
857.572 1743.09 mo
857.572 1765.23 li
883.17 1765.23 li
883.17 1743.09 li
890.08 1743.09 li
890.08 1796.01 li
883.17 1796.01 li
883.17 1771.2 li
857.572 1771.2 li
857.572 1796.01 li
850.741 1796.01 li
850.741 1743.09 li
857.572 1743.09 li
cp
f
911.989 1748.9 mo
895.892 1748.9 li
895.892 1743.09 li
935.073 1743.09 li
935.073 1748.9 li
918.899 1748.9 li
918.899 1796.01 li
911.989 1796.01 li
911.989 1748.9 li
cp
f
985.563 1772.77 mo
985.17 1765.39 984.699 1756.52 984.778 1749.92 cv
984.542 1749.92 li
982.736 1756.12 980.538 1762.72 977.868 1770.02 cv
968.525 1795.7 li
963.342 1795.7 li
954.783 1770.49 li
952.271 1763.03 950.151 1756.2 948.659 1749.92 cv
948.502 1749.92 li
948.345 1756.52 947.952 1765.39 947.481 1773.32 cv
946.068 1796.01 li
939.55 1796.01 li
943.241 1743.09 li
951.956 1743.09 li
960.986 1768.69 li
963.185 1775.2 964.991 1781.01 966.325 1786.51 cv
966.561 1786.51 li
967.896 1781.17 969.78 1775.36 972.136 1768.69 cv
981.559 1743.09 li
990.274 1743.09 li
993.572 1796.01 li
986.898 1796.01 li
985.563 1772.77 li
cp
f
1004.1 1743.09 mo
1010.93 1743.09 li
1010.93 1790.28 li
1033.54 1790.28 li
1033.54 1796.01 li
1004.1 1796.01 li
1004.1 1743.09 li
cp
f
351.083 1635.32 mo
215.966 1635.32 li
213.074 1635.32 210.73 1637.66 210.73 1640.56 cv
210.73 1914 li
210.73 1916.89 213.074 1919.24 215.966 1919.24 cv
415.212 1919.24 li
418.104 1919.24 420.449 1916.89 420.449 1914 cv
420.449 1704.69 li
420.449 1702.93 419.752 1701.25 418.511 1700.01 cv
355.761 1637.26 li
354.52 1636.02 352.838 1635.32 351.083 1635.32 cv
cp
.87 .87 .87 rgb
f
383.376 1769.15 mo
247.803 1769.15 li
245.726 1769.15 244.043 1767.46 244.043 1765.39 cv
244.043 1765.39 li
244.043 1763.31 245.726 1761.63 247.803 1761.63 cv
383.376 1761.63 li
385.452 1761.63 387.136 1763.31 387.136 1765.39 cv
387.136 1765.39 li
387.136 1767.46 385.452 1769.15 383.376 1769.15 cv
cp
.929412 .929412 .929412 rgb
f
383.376 1807.69 mo
247.803 1807.69 li
245.726 1807.69 244.043 1806.01 244.043 1803.93 cv
244.043 1803.93 li
244.043 1801.86 245.726 1800.17 247.803 1800.17 cv
383.376 1800.17 li
385.452 1800.17 387.136 1801.86 387.136 1803.93 cv
387.136 1803.93 li
387.136 1806.01 385.452 1807.69 383.376 1807.69 cv
cp
f
383.376 1846.24 mo
247.803 1846.24 li
245.726 1846.24 244.043 1844.56 244.043 1842.48 cv
244.043 1842.48 li
244.043 1840.4 245.726 1838.72 247.803 1838.72 cv
383.376 1838.72 li
385.452 1838.72 387.136 1840.4 387.136 1842.48 cv
387.136 1842.48 li
387.136 1844.56 385.452 1846.24 383.376 1846.24 cv
cp
f
383.376 1884.79 mo
247.803 1884.79 li
245.726 1884.79 244.043 1883.1 244.043 1881.03 cv
244.043 1881.03 li
244.043 1878.95 245.726 1877.27 247.803 1877.27 cv
383.376 1877.27 li
385.452 1877.27 387.136 1878.95 387.136 1881.03 cv
387.136 1881.03 li
387.136 1883.1 385.452 1884.79 383.376 1884.79 cv
cp
f
383.376 1730.6 mo
247.803 1730.6 li
245.726 1730.6 244.043 1728.92 244.043 1726.84 cv
244.043 1726.84 li
244.043 1724.76 245.726 1723.08 247.803 1723.08 cv
383.376 1723.08 li
385.452 1723.08 387.136 1724.76 387.136 1726.84 cv
387.136 1726.84 li
387.136 1728.92 385.452 1730.6 383.376 1730.6 cv
cp
f
359.754 1701.95 mo
414.888 1701.95 li
416.941 1701.95 417.968 1699.46 416.517 1698.01 cv
357.755 1639.25 li
356.304 1637.8 353.823 1638.83 353.823 1640.88 cv
353.823 1696.01 li
353.823 1699.29 356.479 1701.95 359.754 1701.95 cv
cp
f
379.001 1608.66 mo
243.885 1608.66 li
240.992 1608.66 238.648 1611.01 238.648 1613.9 cv
238.648 1887.34 li
238.648 1890.24 240.992 1892.58 243.885 1892.58 cv
443.13 1892.58 li
446.023 1892.58 448.367 1890.24 448.367 1887.34 cv
448.367 1678.03 li
448.367 1676.28 447.67 1674.59 446.429 1673.35 cv
383.679 1610.6 li
382.439 1609.36 380.756 1608.66 379.001 1608.66 cv
cp
.95 .95 .95 rgb
f
387.672 1675.29 mo
442.807 1675.29 li
444.859 1675.29 445.886 1672.81 444.435 1671.36 cv
385.673 1612.6 li
384.223 1611.15 381.742 1612.17 381.742 1614.22 cv
381.742 1669.36 li
381.742 1672.63 384.397 1675.29 387.672 1675.29 cv
cp
.9 .9 .9 rgb
f
451.788 1815.74 mo
206.49 1815.74 li
203.659 1815.74 201.364 1813.45 201.364 1810.62 cv
201.364 1728.2 li
201.364 1725.37 203.659 1723.08 206.49 1723.08 cv
451.788 1723.08 li
454.619 1723.08 456.914 1725.37 456.914 1728.2 cv
456.914 1810.62 li
456.914 1813.45 454.619 1815.74 451.788 1815.74 cv
cp
1 .478431 .670588 rgb
f
275.761 1771.77 mo
277.254 1772.16 279.138 1772.32 281.415 1772.32 cv
289.66 1772.32 294.685 1768.31 294.685 1761.01 cv
294.685 1754.02 289.738 1750.65 282.2 1750.65 cv
279.216 1750.65 276.939 1750.88 275.761 1751.2 cv
275.761 1771.77 li
cp
268.93 1746.25 mo
272.228 1745.7 276.547 1745.23 282.043 1745.23 cv
288.796 1745.23 293.742 1746.8 296.883 1749.63 cv
299.788 1752.14 301.516 1755.99 301.516 1760.7 cv
301.516 1765.49 300.103 1769.26 297.433 1772 cv
293.821 1775.85 287.932 1777.81 281.258 1777.81 cv
279.216 1777.81 277.332 1777.74 275.761 1777.34 cv
275.761 1798.54 li
268.93 1798.54 li
268.93 1746.25 li
cp
1 1 1 rgb
f
317.536 1745.62 mo
317.536 1767.76 li
343.133 1767.76 li
343.133 1745.62 li
350.043 1745.62 li
350.043 1798.54 li
343.133 1798.54 li
343.133 1773.73 li
317.536 1773.73 li
317.536 1798.54 li
310.705 1798.54 li
310.705 1745.62 li
317.536 1745.62 li
cp
f
368.733 1771.77 mo
370.224 1772.16 372.109 1772.32 374.386 1772.32 cv
382.63 1772.32 387.656 1768.31 387.656 1761.01 cv
387.656 1754.02 382.709 1750.65 375.171 1750.65 cv
372.187 1750.65 369.91 1750.88 368.733 1751.2 cv
368.733 1771.77 li
cp
361.901 1746.25 mo
365.199 1745.7 369.518 1745.23 375.014 1745.23 cv
381.767 1745.23 386.714 1746.8 389.854 1749.63 cv
392.759 1752.14 394.487 1755.99 394.487 1760.7 cv
394.487 1765.49 393.073 1769.26 390.404 1772 cv
386.792 1775.85 380.903 1777.81 374.229 1777.81 cv
372.187 1777.81 370.303 1777.74 368.733 1777.34 cv
368.733 1798.54 li
361.901 1798.54 li
361.901 1746.25 li
cp
f
2172.44 1155.64 mo
2037.32 1155.64 li
2034.43 1155.64 2032.08 1157.99 2032.08 1160.88 cv
2032.08 1434.32 li
2032.08 1437.21 2034.43 1439.56 2037.32 1439.56 cv
2236.57 1439.56 li
2239.46 1439.56 2241.8 1437.21 2241.8 1434.32 cv
2241.8 1225.01 li
2241.8 1223.25 2241.11 1221.57 2239.86 1220.33 cv
2177.11 1157.58 li
2175.87 1156.34 2174.19 1155.64 2172.44 1155.64 cv
cp
.87 .87 .87 rgb
f
2204.73 1289.47 mo
2069.16 1289.47 li
2067.08 1289.47 2065.4 1287.79 2065.4 1285.71 cv
2065.4 1285.71 li
2065.4 1283.63 2067.08 1281.95 2069.16 1281.95 cv
2204.73 1281.95 li
2206.81 1281.95 2208.49 1283.63 2208.49 1285.71 cv
2208.49 1285.71 li
2208.49 1287.79 2206.81 1289.47 2204.73 1289.47 cv
cp
.929412 .929412 .929412 rgb
f
2204.73 1328.02 mo
2069.16 1328.02 li
2067.08 1328.02 2065.4 1326.33 2065.4 1324.25 cv
2065.4 1324.25 li
2065.4 1322.18 2067.08 1320.5 2069.16 1320.5 cv
2204.73 1320.5 li
2206.81 1320.5 2208.49 1322.18 2208.49 1324.25 cv
2208.49 1324.25 li
2208.49 1326.33 2206.81 1328.02 2204.73 1328.02 cv
cp
f
2204.73 1366.56 mo
2069.16 1366.56 li
2067.08 1366.56 2065.4 1364.88 2065.4 1362.8 cv
2065.4 1362.8 li
2065.4 1360.73 2067.08 1359.04 2069.16 1359.04 cv
2204.73 1359.04 li
2206.81 1359.04 2208.49 1360.73 2208.49 1362.8 cv
2208.49 1362.8 li
2208.49 1364.88 2206.81 1366.56 2204.73 1366.56 cv
cp
f
2204.73 1405.11 mo
2069.16 1405.11 li
2067.08 1405.11 2065.4 1403.43 2065.4 1401.35 cv
2065.4 1401.35 li
2065.4 1399.27 2067.08 1397.59 2069.16 1397.59 cv
2204.73 1397.59 li
2206.81 1397.59 2208.49 1399.27 2208.49 1401.35 cv
2208.49 1401.35 li
2208.49 1403.43 2206.81 1405.11 2204.73 1405.11 cv
cp
f
2204.73 1250.92 mo
2069.16 1250.92 li
2067.08 1250.92 2065.4 1249.24 2065.4 1247.16 cv
2065.4 1247.16 li
2065.4 1245.08 2067.08 1243.4 2069.16 1243.4 cv
2204.73 1243.4 li
2206.81 1243.4 2208.49 1245.08 2208.49 1247.16 cv
2208.49 1247.16 li
2208.49 1249.24 2206.81 1250.92 2204.73 1250.92 cv
cp
f
2181.11 1222.27 mo
2236.24 1222.27 li
2238.29 1222.27 2239.32 1219.79 2237.87 1218.34 cv
2179.11 1159.57 li
2177.66 1158.12 2175.18 1159.15 2175.18 1161.2 cv
2175.18 1216.34 li
2175.18 1219.61 2177.83 1222.27 2181.11 1222.27 cv
cp
f
2200.35 1128.99 mo
2065.24 1128.99 li
2062.35 1128.99 2060 1131.33 2060 1134.22 cv
2060 1407.67 li
2060 1410.56 2062.35 1412.9 2065.24 1412.9 cv
2264.48 1412.9 li
2267.38 1412.9 2269.72 1410.56 2269.72 1407.67 cv
2269.72 1198.35 li
2269.72 1196.6 2269.02 1194.92 2267.78 1193.67 cv
2205.03 1130.92 li
2203.79 1129.68 2202.11 1128.99 2200.35 1128.99 cv
cp
.95 .95 .95 rgb
f
2209.03 1195.61 mo
2264.16 1195.61 li
2266.21 1195.61 2267.24 1193.13 2265.79 1191.68 cv
2207.03 1132.92 li
2205.58 1131.47 2203.1 1132.5 2203.1 1134.55 cv
2203.1 1189.68 li
2203.1 1192.96 2205.75 1195.61 2209.03 1195.61 cv
cp
.9 .9 .9 rgb
f
2273.14 1336.07 mo
2027.84 1336.07 li
2025.01 1336.07 2022.72 1333.77 2022.72 1330.94 cv
2022.72 1248.53 li
2022.72 1245.7 2025.01 1243.4 2027.84 1243.4 cv
2273.14 1243.4 li
2275.97 1243.4 2278.27 1245.7 2278.27 1248.53 cv
2278.27 1330.94 li
2278.27 1333.77 2275.97 1336.07 2273.14 1336.07 cv
cp
.537255 .623529 .8 rgb
f
2273.14 1336.07 mo
2027.84 1336.07 li
2025.01 1336.07 2022.72 1333.77 2022.72 1330.94 cv
2022.72 1248.53 li
2022.72 1245.7 2025.01 1243.4 2027.84 1243.4 cv
2273.14 1243.4 li
2275.97 1243.4 2278.27 1245.7 2278.27 1248.53 cv
2278.27 1330.94 li
2278.27 1333.77 2275.97 1336.07 2273.14 1336.07 cv
cp
1 1 1 rgb
@
2125.96 1296.88 mo
2120.77 1281.65 li
2119.6 1278.19 2118.81 1275.05 2118.03 1271.99 cv
2117.87 1271.99 li
2117.08 1275.13 2116.22 1278.35 2115.2 1281.57 cv
2110.02 1296.88 li
2125.96 1296.88 li
cp
2108.6 1302.22 mo
2103.11 1318.87 li
2096.04 1318.87 li
2114.02 1265.94 li
2122.27 1265.94 li
2140.33 1318.87 li
2133.02 1318.87 li
2127.37 1302.22 li
2108.6 1302.22 li
cp
f
2155.56 1318.87 mo
2138.29 1265.94 li
2145.67 1265.94 li
2153.91 1292.01 li
2156.19 1299.16 2158.15 1305.6 2159.57 1311.8 cv
2159.72 1311.8 li
2161.22 1305.67 2163.41 1299 2165.77 1292.09 cv
2174.72 1265.94 li
2182.02 1265.94 li
2163.1 1318.87 li
2155.56 1318.87 li
cp
f
2194.59 1265.94 mo
2194.59 1318.87 li
2187.76 1318.87 li
2187.76 1265.94 li
2194.59 1265.94 li
cp
f
1565.32 1155.64 mo
1430.2 1155.64 li
1427.31 1155.64 1424.97 1157.99 1424.97 1160.88 cv
1424.97 1434.32 li
1424.97 1437.21 1427.31 1439.56 1430.2 1439.56 cv
1629.45 1439.56 li
1632.34 1439.56 1634.69 1437.21 1634.69 1434.32 cv
1634.69 1225.01 li
1634.69 1223.25 1633.99 1221.57 1632.75 1220.33 cv
1570 1157.58 li
1568.76 1156.34 1567.07 1155.64 1565.32 1155.64 cv
cp
.87 .87 .87 rgb
f
1597.61 1289.47 mo
1462.04 1289.47 li
1459.96 1289.47 1458.28 1287.79 1458.28 1285.71 cv
1458.28 1285.71 li
1458.28 1283.63 1459.96 1281.95 1462.04 1281.95 cv
1597.61 1281.95 li
1599.69 1281.95 1601.37 1283.63 1601.37 1285.71 cv
1601.37 1285.71 li
1601.37 1287.79 1599.69 1289.47 1597.61 1289.47 cv
cp
.929412 .929412 .929412 rgb
f
1597.61 1328.02 mo
1462.04 1328.02 li
1459.96 1328.02 1458.28 1326.33 1458.28 1324.25 cv
1458.28 1324.25 li
1458.28 1322.18 1459.96 1320.5 1462.04 1320.5 cv
1597.61 1320.5 li
1599.69 1320.5 1601.37 1322.18 1601.37 1324.25 cv
1601.37 1324.25 li
1601.37 1326.33 1599.69 1328.02 1597.61 1328.02 cv
cp
f
1597.61 1366.56 mo
1462.04 1366.56 li
1459.96 1366.56 1458.28 1364.88 1458.28 1362.8 cv
1458.28 1362.8 li
1458.28 1360.73 1459.96 1359.04 1462.04 1359.04 cv
1597.61 1359.04 li
1599.69 1359.04 1601.37 1360.73 1601.37 1362.8 cv
1601.37 1362.8 li
1601.37 1364.88 1599.69 1366.56 1597.61 1366.56 cv
cp
f
1597.61 1405.11 mo
1462.04 1405.11 li
1459.96 1405.11 1458.28 1403.43 1458.28 1401.35 cv
1458.28 1401.35 li
1458.28 1399.27 1459.96 1397.59 1462.04 1397.59 cv
1597.61 1397.59 li
1599.69 1397.59 1601.37 1399.27 1601.37 1401.35 cv
1601.37 1401.35 li
1601.37 1403.43 1599.69 1405.11 1597.61 1405.11 cv
cp
f
1597.61 1250.92 mo
1462.04 1250.92 li
1459.96 1250.92 1458.28 1249.24 1458.28 1247.16 cv
1458.28 1247.16 li
1458.28 1245.08 1459.96 1243.4 1462.04 1243.4 cv
1597.61 1243.4 li
1599.69 1243.4 1601.37 1245.08 1601.37 1247.16 cv
1601.37 1247.16 li
1601.37 1249.24 1599.69 1250.92 1597.61 1250.92 cv
cp
f
1573.99 1222.27 mo
1629.12 1222.27 li
1631.18 1222.27 1632.2 1219.79 1630.75 1218.34 cv
1571.99 1159.57 li
1570.54 1158.12 1568.06 1159.15 1568.06 1161.2 cv
1568.06 1216.34 li
1568.06 1219.61 1570.71 1222.27 1573.99 1222.27 cv
cp
f
1593.24 1128.99 mo
1458.12 1128.99 li
1455.23 1128.99 1452.88 1131.33 1452.88 1134.22 cv
1452.88 1407.67 li
1452.88 1410.56 1455.23 1412.9 1458.12 1412.9 cv
1657.37 1412.9 li
1660.26 1412.9 1662.6 1410.56 1662.6 1407.67 cv
1662.6 1198.35 li
1662.6 1196.6 1661.91 1194.92 1660.67 1193.67 cv
1597.92 1130.92 li
1596.67 1129.68 1594.99 1128.99 1593.24 1128.99 cv
cp
.95 .95 .95 rgb
f
1601.91 1195.61 mo
1657.04 1195.61 li
1659.1 1195.61 1660.12 1193.13 1658.67 1191.68 cv
1599.91 1132.92 li
1598.46 1131.47 1595.98 1132.5 1595.98 1134.55 cv
1595.98 1189.68 li
1595.98 1192.96 1598.63 1195.61 1601.91 1195.61 cv
cp
.9 .9 .9 rgb
f
1666.02 1336.07 mo
1420.73 1336.07 li
1417.9 1336.07 1415.6 1333.77 1415.6 1330.94 cv
1415.6 1248.53 li
1415.6 1245.7 1417.9 1243.4 1420.73 1243.4 cv
1666.02 1243.4 li
1668.86 1243.4 1671.15 1245.7 1671.15 1248.53 cv
1671.15 1330.94 li
1671.15 1333.77 1668.86 1336.07 1666.02 1336.07 cv
cp
.811765 .509804 1 rgb
f
1666.02 1336.07 mo
1420.73 1336.07 li
1417.9 1336.07 1415.6 1333.77 1415.6 1330.94 cv
1415.6 1248.53 li
1415.6 1245.7 1417.9 1243.4 1420.73 1243.4 cv
1666.02 1243.4 li
1668.86 1243.4 1671.15 1245.7 1671.15 1248.53 cv
1671.15 1330.94 li
1671.15 1333.77 1668.86 1336.07 1666.02 1336.07 cv
cp
1 1 1 rgb
@
1487.26 1292.38 mo
1494.25 1292.38 li
1501.55 1292.38 1506.19 1288.38 1506.19 1282.33 cv
1506.19 1275.5 1501.24 1272.52 1494.02 1272.44 cv
1490.72 1272.44 1488.36 1272.75 1487.26 1273.07 cv
1487.26 1292.38 li
cp
1480.43 1268.28 mo
1483.89 1267.57 1488.83 1267.18 1493.54 1267.18 cv
1500.85 1267.18 1505.56 1268.51 1508.86 1271.5 cv
1511.53 1273.85 1513.02 1277.47 1513.02 1281.55 cv
1513.02 1288.54 1508.62 1293.17 1503.05 1295.05 cv
1503.05 1295.29 li
1507.13 1296.7 1509.56 1300.47 1510.82 1305.97 cv
1512.55 1313.35 1513.8 1318.45 1514.9 1320.5 cv
1507.84 1320.5 li
1506.97 1319 1505.79 1314.45 1504.3 1307.85 cv
1502.73 1300.55 1499.9 1297.8 1493.7 1297.57 cv
1487.26 1297.57 li
1487.26 1320.5 li
1480.43 1320.5 li
1480.43 1268.28 li
cp
f
1548.98 1298.51 mo
1543.8 1283.28 li
1542.62 1279.82 1541.84 1276.68 1541.05 1273.62 cv
1540.89 1273.62 li
1540.11 1276.76 1539.24 1279.98 1538.22 1283.2 cv
1533.04 1298.51 li
1548.98 1298.51 li
cp
1531.63 1303.85 mo
1526.13 1320.5 li
1519.06 1320.5 li
1537.05 1267.57 li
1545.29 1267.57 li
1563.35 1320.5 li
1556.05 1320.5 li
1550.39 1303.85 li
1531.63 1303.85 li
cp
f
1577.96 1292.38 mo
1584.94 1292.38 li
1592.25 1292.38 1596.88 1288.38 1596.88 1282.33 cv
1596.88 1275.5 1591.93 1272.52 1584.71 1272.44 cv
1581.41 1272.44 1579.06 1272.75 1577.96 1273.07 cv
1577.96 1292.38 li
cp
1571.13 1268.28 mo
1574.58 1267.57 1579.53 1267.18 1584.24 1267.18 cv
1591.54 1267.18 1596.25 1268.51 1599.55 1271.5 cv
1602.22 1273.85 1603.71 1277.47 1603.71 1281.55 cv
1603.71 1288.54 1599.31 1293.17 1593.74 1295.05 cv
1593.74 1295.29 li
1597.82 1296.7 1600.26 1300.47 1601.51 1305.97 cv
1603.24 1313.35 1604.5 1318.45 1605.6 1320.5 cv
1598.53 1320.5 li
1597.66 1319 1596.49 1314.45 1594.99 1307.85 cv
1593.42 1300.55 1590.6 1297.8 1584.4 1297.57 cv
1577.96 1297.57 li
1577.96 1320.5 li
1571.13 1320.5 li
1571.13 1268.28 li
cp
f
958.201 1155.64 mo
823.084 1155.64 li
820.192 1155.64 817.848 1157.99 817.848 1160.88 cv
817.848 1434.32 li
817.848 1437.21 820.192 1439.56 823.084 1439.56 cv
1022.33 1439.56 li
1025.22 1439.56 1027.57 1437.21 1027.57 1434.32 cv
1027.57 1225.01 li
1027.57 1223.25 1026.87 1221.57 1025.63 1220.33 cv
962.879 1157.58 li
961.638 1156.34 959.956 1155.64 958.201 1155.64 cv
cp
.87 .87 .87 rgb
f
990.493 1289.47 mo
854.921 1289.47 li
852.844 1289.47 851.16 1287.79 851.16 1285.71 cv
851.16 1285.71 li
851.16 1283.63 852.844 1281.95 854.921 1281.95 cv
990.493 1281.95 li
992.57 1281.95 994.254 1283.63 994.254 1285.71 cv
994.254 1285.71 li
994.254 1287.79 992.57 1289.47 990.493 1289.47 cv
cp
.929412 .929412 .929412 rgb
f
990.493 1328.02 mo
854.921 1328.02 li
852.844 1328.02 851.16 1326.33 851.16 1324.25 cv
851.16 1324.25 li
851.16 1322.18 852.844 1320.5 854.921 1320.5 cv
990.493 1320.5 li
992.57 1320.5 994.254 1322.18 994.254 1324.25 cv
994.254 1324.25 li
994.254 1326.33 992.57 1328.02 990.493 1328.02 cv
cp
f
990.493 1366.56 mo
854.921 1366.56 li
852.844 1366.56 851.16 1364.88 851.16 1362.8 cv
851.16 1362.8 li
851.16 1360.73 852.844 1359.04 854.921 1359.04 cv
990.493 1359.04 li
992.57 1359.04 994.254 1360.73 994.254 1362.8 cv
994.254 1362.8 li
994.254 1364.88 992.57 1366.56 990.493 1366.56 cv
cp
f
990.493 1405.11 mo
854.921 1405.11 li
852.844 1405.11 851.16 1403.43 851.16 1401.35 cv
851.16 1401.35 li
851.16 1399.27 852.844 1397.59 854.921 1397.59 cv
990.493 1397.59 li
992.57 1397.59 994.254 1399.27 994.254 1401.35 cv
994.254 1401.35 li
994.254 1403.43 992.57 1405.11 990.493 1405.11 cv
cp
f
990.493 1250.92 mo
854.921 1250.92 li
852.844 1250.92 851.16 1249.24 851.16 1247.16 cv
851.16 1247.16 li
851.16 1245.08 852.844 1243.4 854.921 1243.4 cv
990.493 1243.4 li
992.57 1243.4 994.254 1245.08 994.254 1247.16 cv
994.254 1247.16 li
994.254 1249.24 992.57 1250.92 990.493 1250.92 cv
cp
f
966.872 1222.27 mo
1022.01 1222.27 li
1024.06 1222.27 1025.09 1219.79 1023.63 1218.34 cv
964.873 1159.57 li
963.422 1158.12 960.942 1159.15 960.942 1161.2 cv
960.942 1216.34 li
960.942 1219.61 963.597 1222.27 966.872 1222.27 cv
cp
f
986.119 1128.99 mo
851.003 1128.99 li
848.11 1128.99 845.766 1131.33 845.766 1134.22 cv
845.766 1407.67 li
845.766 1410.56 848.11 1412.9 851.003 1412.9 cv
1050.25 1412.9 li
1053.14 1412.9 1055.49 1410.56 1055.49 1407.67 cv
1055.49 1198.35 li
1055.49 1196.6 1054.79 1194.92 1053.55 1193.67 cv
990.797 1130.92 li
989.557 1129.68 987.874 1128.99 986.119 1128.99 cv
cp
.95 .95 .95 rgb
f
994.79 1195.61 mo
1049.92 1195.61 li
1051.98 1195.61 1053 1193.13 1051.55 1191.68 cv
992.792 1132.92 li
991.34 1131.47 988.86 1132.5 988.86 1134.55 cv
988.86 1189.68 li
988.86 1192.96 991.515 1195.61 994.79 1195.61 cv
cp
.9 .9 .9 rgb
f
1058.91 1336.07 mo
813.608 1336.07 li
810.777 1336.07 808.483 1333.77 808.483 1330.94 cv
808.483 1248.53 li
808.483 1245.7 810.777 1243.4 813.608 1243.4 cv
1058.91 1243.4 li
1061.74 1243.4 1064.03 1245.7 1064.03 1248.53 cv
1064.03 1330.94 li
1064.03 1333.77 1061.74 1336.07 1058.91 1336.07 cv
cp
.294118 .8 .72549 rgb
f
1058.91 1336.07 mo
813.608 1336.07 li
810.777 1336.07 808.483 1333.77 808.483 1330.94 cv
808.483 1248.53 li
808.483 1245.7 810.777 1243.4 813.608 1243.4 cv
1058.91 1243.4 li
1061.74 1243.4 1064.03 1245.7 1064.03 1248.53 cv
1064.03 1330.94 li
1064.03 1333.77 1061.74 1336.07 1058.91 1336.07 cv
cp
1 1 1 rgb
@
931.427 1316.51 mo
928.365 1317.61 922.319 1319.42 915.174 1319.42 cv
907.165 1319.42 900.569 1317.37 895.387 1312.43 cv
890.833 1308.03 888.006 1300.96 888.006 1292.72 cv
888.085 1276.94 898.921 1265.39 916.666 1265.39 cv
922.79 1265.39 927.58 1266.73 929.857 1267.83 cv
928.208 1273.4 li
925.381 1272.15 921.848 1271.13 916.508 1271.13 cv
903.631 1271.13 895.23 1279.13 895.23 1292.4 cv
895.23 1305.83 903.318 1313.76 915.645 1313.76 cv
920.12 1313.76 923.183 1313.13 924.754 1312.35 cv
924.754 1296.57 li
913.996 1296.57 li
913.996 1291.07 li
931.427 1291.07 li
931.427 1316.51 li
cp
f
948.704 1265.94 mo
948.704 1318.87 li
941.873 1318.87 li
941.873 1265.94 li
948.704 1265.94 li
cp
f
960.639 1265.94 mo
989.142 1265.94 li
989.142 1271.67 li
967.471 1271.67 li
967.471 1289.26 li
987.493 1289.26 li
987.493 1294.92 li
967.471 1294.92 li
967.471 1318.87 li
960.639 1318.87 li
960.639 1265.94 li
cp
f
351.083 1155.64 mo
215.966 1155.64 li
213.074 1155.64 210.73 1157.99 210.73 1160.88 cv
210.73 1434.32 li
210.73 1437.21 213.074 1439.56 215.966 1439.56 cv
415.212 1439.56 li
418.104 1439.56 420.449 1437.21 420.449 1434.32 cv
420.449 1225.01 li
420.449 1223.25 419.752 1221.57 418.511 1220.33 cv
355.761 1157.58 li
354.52 1156.34 352.838 1155.64 351.083 1155.64 cv
cp
.87 .87 .87 rgb
f
383.375 1289.47 mo
247.803 1289.47 li
245.726 1289.47 244.043 1287.79 244.043 1285.71 cv
244.043 1285.71 li
244.043 1283.63 245.726 1281.95 247.803 1281.95 cv
383.375 1281.95 li
385.452 1281.95 387.136 1283.63 387.136 1285.71 cv
387.136 1285.71 li
387.136 1287.79 385.452 1289.47 383.375 1289.47 cv
cp
.929412 .929412 .929412 rgb
f
383.375 1328.02 mo
247.803 1328.02 li
245.726 1328.02 244.043 1326.33 244.043 1324.25 cv
244.043 1324.25 li
244.043 1322.18 245.726 1320.5 247.803 1320.5 cv
383.375 1320.5 li
385.452 1320.5 387.136 1322.18 387.136 1324.25 cv
387.136 1324.25 li
387.136 1326.33 385.452 1328.02 383.375 1328.02 cv
cp
f
383.375 1366.56 mo
247.803 1366.56 li
245.726 1366.56 244.043 1364.88 244.043 1362.8 cv
244.043 1362.8 li
244.043 1360.73 245.726 1359.04 247.803 1359.04 cv
383.375 1359.04 li
385.452 1359.04 387.136 1360.73 387.136 1362.8 cv
387.136 1362.8 li
387.136 1364.88 385.452 1366.56 383.375 1366.56 cv
cp
f
383.375 1405.11 mo
247.803 1405.11 li
245.726 1405.11 244.043 1403.43 244.043 1401.35 cv
244.043 1401.35 li
244.043 1399.27 245.726 1397.59 247.803 1397.59 cv
383.375 1397.59 li
385.452 1397.59 387.136 1399.27 387.136 1401.35 cv
387.136 1401.35 li
387.136 1403.43 385.452 1405.11 383.375 1405.11 cv
cp
f
383.375 1250.92 mo
247.803 1250.92 li
245.726 1250.92 244.043 1249.24 244.043 1247.16 cv
244.043 1247.16 li
244.043 1245.08 245.726 1243.4 247.803 1243.4 cv
383.375 1243.4 li
385.452 1243.4 387.136 1245.08 387.136 1247.16 cv
387.136 1247.16 li
387.136 1249.24 385.452 1250.92 383.375 1250.92 cv
cp
f
359.754 1222.27 mo
414.888 1222.27 li
416.94 1222.27 417.968 1219.79 416.517 1218.34 cv
357.755 1159.57 li
356.304 1158.12 353.823 1159.15 353.823 1161.2 cv
353.823 1216.34 li
353.823 1219.61 356.479 1222.27 359.754 1222.27 cv
cp
f
379.001 1128.99 mo
243.884 1128.99 li
240.992 1128.99 238.648 1131.33 238.648 1134.22 cv
238.648 1407.67 li
238.648 1410.56 240.992 1412.9 243.884 1412.9 cv
443.13 1412.9 li
446.023 1412.9 448.367 1410.56 448.367 1407.67 cv
448.367 1198.35 li
448.367 1196.6 447.67 1194.92 446.429 1193.67 cv
383.679 1130.92 li
382.439 1129.68 380.756 1128.99 379.001 1128.99 cv
cp
.95 .95 .95 rgb
f
387.672 1195.61 mo
442.807 1195.61 li
444.859 1195.61 445.886 1193.13 444.435 1191.68 cv
385.673 1132.92 li
384.223 1131.47 381.742 1132.5 381.742 1134.55 cv
381.742 1189.68 li
381.742 1192.96 384.397 1195.61 387.672 1195.61 cv
cp
.9 .9 .9 rgb
f
451.788 1336.07 mo
206.49 1336.07 li
203.659 1336.07 201.364 1333.77 201.364 1330.94 cv
201.364 1248.53 li
201.364 1245.7 203.659 1243.4 206.49 1243.4 cv
451.788 1243.4 li
454.619 1243.4 456.914 1245.7 456.914 1248.53 cv
456.914 1330.94 li
456.914 1333.77 454.619 1336.07 451.788 1336.07 cv
cp
.2 .745098 1 rgb
f
451.788 1336.07 mo
206.49 1336.07 li
203.659 1336.07 201.364 1333.77 201.364 1330.94 cv
201.364 1248.53 li
201.364 1245.7 203.659 1243.4 206.49 1243.4 cv
451.788 1243.4 li
454.619 1243.4 456.914 1245.7 456.914 1248.53 cv
456.914 1330.94 li
456.914 1333.77 454.619 1336.07 451.788 1336.07 cv
cp
1 1 1 rgb
@
283.555 1312.33 mo
312.921 1269.38 li
312.921 1269.14 li
286.067 1269.14 li
286.067 1263.41 li
321.794 1263.41 li
321.794 1267.57 li
292.585 1310.37 li
292.585 1310.6 li
322.186 1310.6 li
322.186 1316.33 li
283.555 1316.33 li
283.555 1312.33 li
cp
f
337.421 1263.41 mo
337.421 1316.33 li
330.589 1316.33 li
330.589 1263.41 li
337.421 1263.41 li
cp
f
356.188 1289.56 mo
357.679 1289.95 359.564 1290.11 361.841 1290.11 cv
370.086 1290.11 375.11 1286.1 375.11 1278.8 cv
375.11 1271.81 370.164 1268.44 362.626 1268.44 cv
359.642 1268.44 357.365 1268.67 356.188 1268.99 cv
356.188 1289.56 li
cp
349.356 1264.04 mo
352.654 1263.49 356.973 1263.02 362.469 1263.02 cv
369.222 1263.02 374.168 1264.59 377.309 1267.42 cv
380.214 1269.93 381.942 1273.78 381.942 1278.49 cv
381.942 1283.28 380.528 1287.04 377.859 1289.79 cv
374.247 1293.64 368.358 1295.6 361.684 1295.6 cv
359.642 1295.6 357.758 1295.53 356.188 1295.13 cv
356.188 1316.33 li
349.356 1316.33 li
349.356 1264.04 li
cp
f
2172.44 675.964 mo
2037.32 675.964 li
2034.43 675.964 2032.08 678.309 2032.08 681.201 cv
2032.08 954.643 li
2032.08 957.536 2034.43 959.88 2037.32 959.88 cv
2236.57 959.88 li
2239.46 959.88 2241.8 957.536 2241.8 954.643 cv
2241.8 745.331 li
2241.8 743.576 2241.11 741.893 2239.86 740.652 cv
2177.11 677.902 li
2175.87 676.662 2174.19 675.964 2172.44 675.964 cv
cp
.87 .87 .87 rgb
f
2204.73 809.791 mo
2069.16 809.791 li
2067.08 809.791 2065.4 808.108 2065.4 806.031 cv
2065.4 806.031 li
2065.4 803.954 2067.08 802.27 2069.16 802.27 cv
2204.73 802.27 li
2206.81 802.27 2208.49 803.954 2208.49 806.031 cv
2208.49 806.031 li
2208.49 808.108 2206.81 809.791 2204.73 809.791 cv
cp
.929412 .929412 .929412 rgb
f
2204.73 848.338 mo
2069.16 848.338 li
2067.08 848.338 2065.4 846.655 2065.4 844.578 cv
2065.4 844.578 li
2065.4 842.5 2067.08 840.817 2069.16 840.817 cv
2204.73 840.817 li
2206.81 840.817 2208.49 842.5 2208.49 844.578 cv
2208.49 844.578 li
2208.49 846.655 2206.81 848.338 2204.73 848.338 cv
cp
f
2204.73 886.885 mo
2069.16 886.885 li
2067.08 886.885 2065.4 885.202 2065.4 883.124 cv
2065.4 883.124 li
2065.4 881.047 2067.08 879.364 2069.16 879.364 cv
2204.73 879.364 li
2206.81 879.364 2208.49 881.047 2208.49 883.124 cv
2208.49 883.124 li
2208.49 885.202 2206.81 886.885 2204.73 886.885 cv
cp
f
2204.73 925.432 mo
2069.16 925.432 li
2067.08 925.432 2065.4 923.748 2065.4 921.671 cv
2065.4 921.671 li
2065.4 919.594 2067.08 917.911 2069.16 917.911 cv
2204.73 917.911 li
2206.81 917.911 2208.49 919.594 2208.49 921.671 cv
2208.49 921.671 li
2208.49 923.748 2206.81 925.432 2204.73 925.432 cv
cp
f
2204.73 771.245 mo
2069.16 771.245 li
2067.08 771.245 2065.4 769.561 2065.4 767.484 cv
2065.4 767.484 li
2065.4 765.407 2067.08 763.723 2069.16 763.723 cv
2204.73 763.723 li
2206.81 763.723 2208.49 765.407 2208.49 767.484 cv
2208.49 767.484 li
2208.49 769.561 2206.81 771.245 2204.73 771.245 cv
cp
f
2181.11 742.59 mo
2236.24 742.59 li
2238.29 742.59 2239.32 740.109 2237.87 738.658 cv
2179.11 679.896 li
2177.66 678.445 2175.18 679.473 2175.18 681.525 cv
2175.18 736.659 li
2175.18 739.935 2177.83 742.59 2181.11 742.59 cv
cp
f
2200.35 649.309 mo
2065.24 649.309 li
2062.35 649.309 2060 651.654 2060 654.546 cv
2060 927.988 li
2060 930.88 2062.35 933.225 2065.24 933.225 cv
2264.48 933.225 li
2267.38 933.225 2269.72 930.88 2269.72 927.988 cv
2269.72 718.675 li
2269.72 716.92 2269.02 715.238 2267.78 713.997 cv
2205.03 651.247 li
2203.79 650.006 2202.11 649.309 2200.35 649.309 cv
cp
.95 .95 .95 rgb
f
2209.03 715.935 mo
2264.16 715.935 li
2266.21 715.935 2267.24 713.454 2265.79 712.003 cv
2207.03 653.241 li
2205.58 651.79 2203.1 652.817 2203.1 654.87 cv
2203.1 710.004 li
2203.1 713.279 2205.75 715.935 2209.03 715.935 cv
cp
.9 .9 .9 rgb
f
2273.14 856.388 mo
2027.84 856.388 li
2025.01 856.388 2022.72 854.093 2022.72 851.262 cv
2022.72 768.849 li
2022.72 766.018 2025.01 763.723 2027.84 763.723 cv
2273.14 763.723 li
2275.97 763.723 2278.27 766.018 2278.27 768.849 cv
2278.27 851.262 li
2278.27 854.093 2275.97 856.388 2273.14 856.388 cv
cp
1 .733333 0 rgb
f
2273.14 856.388 mo
2027.84 856.388 li
2025.01 856.388 2022.72 854.093 2022.72 851.262 cv
2022.72 768.849 li
2022.72 766.018 2025.01 763.723 2027.84 763.723 cv
2273.14 763.723 li
2275.97 763.723 2278.27 766.018 2278.27 768.849 cv
2278.27 851.262 li
2278.27 854.093 2275.97 856.388 2273.14 856.388 cv
cp
1 1 1 rgb
@
2106.29 789.543 mo
2090.19 789.543 li
2090.19 783.733 li
2129.37 783.733 li
2129.37 789.543 li
2113.19 789.543 li
2113.19 836.655 li
2106.29 836.655 li
2106.29 789.543 li
cp
f
2165.96 836.655 mo
2159.21 824.956 li
2156.46 820.48 2154.73 817.575 2153.08 814.513 cv
2152.93 814.513 li
2151.44 817.575 2149.94 820.402 2147.19 825.034 cv
2140.83 836.655 li
2132.98 836.655 li
2149.16 809.88 li
2133.61 783.733 li
2141.54 783.733 li
2148.53 796.139 li
2150.49 799.594 2151.98 802.264 2153.4 805.09 cv
2153.63 805.09 li
2155.13 801.95 2156.46 799.515 2158.42 796.139 cv
2165.65 783.733 li
2173.5 783.733 li
2157.4 809.487 li
2173.89 836.655 li
2165.96 836.655 li
cp
f
2192.5 789.543 mo
2176.41 789.543 li
2176.41 783.733 li
2215.59 783.733 li
2215.59 789.543 li
2199.41 789.543 li
2199.41 836.655 li
2192.5 836.655 li
2192.5 789.543 li
cp
f
1565.32 675.964 mo
1430.2 675.964 li
1427.31 675.964 1424.97 678.309 1424.97 681.201 cv
1424.97 954.643 li
1424.97 957.536 1427.31 959.88 1430.2 959.88 cv
1629.45 959.88 li
1632.34 959.88 1634.69 957.536 1634.69 954.643 cv
1634.69 745.331 li
1634.69 743.576 1633.99 741.893 1632.75 740.652 cv
1570 677.902 li
1568.76 676.662 1567.07 675.964 1565.32 675.964 cv
cp
.87 .87 .87 rgb
f
1597.61 809.791 mo
1462.04 809.791 li
1459.96 809.791 1458.28 808.108 1458.28 806.031 cv
1458.28 806.031 li
1458.28 803.954 1459.96 802.27 1462.04 802.27 cv
1597.61 802.27 li
1599.69 802.27 1601.37 803.954 1601.37 806.031 cv
1601.37 806.031 li
1601.37 808.108 1599.69 809.791 1597.61 809.791 cv
cp
.929412 .929412 .929412 rgb
f
1597.61 848.338 mo
1462.04 848.338 li
1459.96 848.338 1458.28 846.655 1458.28 844.578 cv
1458.28 844.578 li
1458.28 842.5 1459.96 840.817 1462.04 840.817 cv
1597.61 840.817 li
1599.69 840.817 1601.37 842.5 1601.37 844.578 cv
1601.37 844.578 li
1601.37 846.655 1599.69 848.338 1597.61 848.338 cv
cp
f
1597.61 886.885 mo
1462.04 886.885 li
1459.96 886.885 1458.28 885.202 1458.28 883.124 cv
1458.28 883.124 li
1458.28 881.047 1459.96 879.364 1462.04 879.364 cv
1597.61 879.364 li
1599.69 879.364 1601.37 881.047 1601.37 883.124 cv
1601.37 883.124 li
1601.37 885.202 1599.69 886.885 1597.61 886.885 cv
cp
f
1597.61 925.432 mo
1462.04 925.432 li
1459.96 925.432 1458.28 923.748 1458.28 921.671 cv
1458.28 921.671 li
1458.28 919.594 1459.96 917.911 1462.04 917.911 cv
1597.61 917.911 li
1599.69 917.911 1601.37 919.594 1601.37 921.671 cv
1601.37 921.671 li
1601.37 923.748 1599.69 925.432 1597.61 925.432 cv
cp
f
1597.61 771.245 mo
1462.04 771.245 li
1459.96 771.245 1458.28 769.561 1458.28 767.484 cv
1458.28 767.484 li
1458.28 765.407 1459.96 763.723 1462.04 763.723 cv
1597.61 763.723 li
1599.69 763.723 1601.37 765.407 1601.37 767.484 cv
1601.37 767.484 li
1601.37 769.561 1599.69 771.245 1597.61 771.245 cv
cp
f
1573.99 742.59 mo
1629.12 742.59 li
1631.18 742.59 1632.2 740.109 1630.75 738.658 cv
1571.99 679.896 li
1570.54 678.445 1568.06 679.473 1568.06 681.525 cv
1568.06 736.659 li
1568.06 739.935 1570.71 742.59 1573.99 742.59 cv
cp
f
1593.24 649.309 mo
1458.12 649.309 li
1455.23 649.309 1452.88 651.654 1452.88 654.546 cv
1452.88 927.988 li
1452.88 930.88 1455.23 933.225 1458.12 933.225 cv
1657.37 933.225 li
1660.26 933.225 1662.6 930.88 1662.6 927.988 cv
1662.6 718.675 li
1662.6 716.92 1661.91 715.238 1660.67 713.997 cv
1597.92 651.247 li
1596.67 650.006 1594.99 649.309 1593.24 649.309 cv
cp
.95 .95 .95 rgb
f
1601.91 715.935 mo
1657.04 715.935 li
1659.1 715.935 1660.12 713.454 1658.67 712.003 cv
1599.91 653.241 li
1598.46 651.79 1595.98 652.817 1595.98 654.87 cv
1595.98 710.004 li
1595.98 713.279 1598.63 715.935 1601.91 715.935 cv
cp
.9 .9 .9 rgb
f
1666.02 856.388 mo
1420.73 856.388 li
1417.9 856.388 1415.6 854.093 1415.6 851.262 cv
1415.6 768.849 li
1415.6 766.018 1417.9 763.723 1420.73 763.723 cv
1666.02 763.723 li
1668.86 763.723 1671.15 766.018 1671.15 768.849 cv
1671.15 851.262 li
1671.15 854.093 1668.86 856.388 1666.02 856.388 cv
cp
1 .509804 .2 rgb
f
1666.02 856.388 mo
1420.73 856.388 li
1417.9 856.388 1415.6 854.093 1415.6 851.262 cv
1415.6 768.849 li
1415.6 766.018 1417.9 763.723 1420.73 763.723 cv
1666.02 763.723 li
1668.86 763.723 1671.15 766.018 1671.15 768.849 cv
1671.15 851.262 li
1671.15 854.093 1668.86 856.388 1666.02 856.388 cv
cp
1 1 1 rgb
@
1515.58 813.414 mo
1515.19 806.033 1514.72 797.16 1514.8 790.563 cv
1514.56 790.563 li
1512.76 796.767 1510.56 803.363 1507.89 810.664 cv
1498.54 836.341 li
1493.36 836.341 li
1484.8 811.136 li
1482.29 803.677 1480.17 796.845 1478.68 790.563 cv
1478.52 790.563 li
1478.36 797.16 1477.97 806.033 1477.5 813.963 cv
1476.09 836.655 li
1469.57 836.655 li
1473.26 783.733 li
1481.98 783.733 li
1491.01 809.33 li
1493.2 815.848 1495.01 821.658 1496.35 827.154 cv
1496.58 827.154 li
1497.92 821.815 1499.8 816.004 1502.16 809.33 cv
1511.58 783.733 li
1520.29 783.733 li
1523.59 836.655 li
1516.92 836.655 li
1515.58 813.414 li
cp
f
1538.28 810.508 mo
1538.28 821.815 1544.4 831.944 1555.16 831.944 cv
1565.99 831.944 1572.12 821.972 1572.12 809.958 cv
1572.12 799.436 1566.62 788.444 1555.24 788.444 cv
1543.93 788.444 1538.28 798.887 1538.28 810.508 cv
cp
1579.34 809.644 mo
1579.34 827.861 1568.27 837.518 1554.77 837.518 cv
1540.79 837.518 1530.98 826.683 1530.98 810.664 cv
1530.98 793.862 1541.42 782.869 1555.55 782.869 cv
1570 782.869 1579.34 793.94 1579.34 809.644 cv
cp
f
1599.84 836.655 mo
1582.56 783.733 li
1589.94 783.733 li
1598.19 809.801 li
1600.47 816.946 1602.43 823.385 1603.84 829.588 cv
1604 829.588 li
1605.49 823.464 1607.69 816.79 1610.05 809.88 cv
1619 783.733 li
1626.3 783.733 li
1607.38 836.655 li
1599.84 836.655 li
cp
f
958.201 675.964 mo
823.084 675.964 li
820.192 675.964 817.848 678.309 817.848 681.201 cv
817.848 954.643 li
817.848 957.536 820.192 959.88 823.084 959.88 cv
1022.33 959.88 li
1025.22 959.88 1027.57 957.536 1027.57 954.643 cv
1027.57 745.331 li
1027.57 743.576 1026.87 741.893 1025.63 740.652 cv
962.879 677.902 li
961.638 676.662 959.956 675.964 958.201 675.964 cv
cp
.87 .87 .87 rgb
f
990.493 809.791 mo
854.921 809.791 li
852.844 809.791 851.16 808.108 851.16 806.031 cv
851.16 806.031 li
851.16 803.954 852.844 802.27 854.921 802.27 cv
990.493 802.27 li
992.57 802.27 994.254 803.954 994.254 806.031 cv
994.254 806.031 li
994.254 808.108 992.57 809.791 990.493 809.791 cv
cp
.929412 .929412 .929412 rgb
f
990.493 848.338 mo
854.921 848.338 li
852.844 848.338 851.16 846.655 851.16 844.578 cv
851.16 844.578 li
851.16 842.5 852.844 840.817 854.921 840.817 cv
990.493 840.817 li
992.57 840.817 994.254 842.5 994.254 844.578 cv
994.254 844.578 li
994.254 846.655 992.57 848.338 990.493 848.338 cv
cp
f
990.493 886.885 mo
854.921 886.885 li
852.844 886.885 851.16 885.202 851.16 883.124 cv
851.16 883.124 li
851.16 881.047 852.844 879.364 854.921 879.364 cv
990.493 879.364 li
992.57 879.364 994.254 881.047 994.254 883.124 cv
994.254 883.124 li
994.254 885.202 992.57 886.885 990.493 886.885 cv
cp
f
990.493 925.432 mo
854.921 925.432 li
852.844 925.432 851.16 923.748 851.16 921.671 cv
851.16 921.671 li
851.16 919.594 852.844 917.911 854.921 917.911 cv
990.493 917.911 li
992.57 917.911 994.254 919.594 994.254 921.671 cv
994.254 921.671 li
994.254 923.748 992.57 925.432 990.493 925.432 cv
cp
f
990.493 771.245 mo
854.921 771.245 li
852.844 771.245 851.16 769.561 851.16 767.484 cv
851.16 767.484 li
851.16 765.407 852.844 763.723 854.921 763.723 cv
990.493 763.723 li
992.57 763.723 994.254 765.407 994.254 767.484 cv
994.254 767.484 li
994.254 769.561 992.57 771.245 990.493 771.245 cv
cp
f
966.872 742.59 mo
1022.01 742.59 li
1024.06 742.59 1025.09 740.109 1023.63 738.658 cv
964.873 679.896 li
963.422 678.445 960.942 679.473 960.942 681.525 cv
960.942 736.659 li
960.942 739.935 963.596 742.59 966.872 742.59 cv
cp
f
986.119 649.309 mo
851.003 649.309 li
848.11 649.309 845.766 651.654 845.766 654.546 cv
845.766 927.988 li
845.766 930.88 848.11 933.225 851.003 933.225 cv
1050.25 933.225 li
1053.14 933.225 1055.49 930.88 1055.49 927.988 cv
1055.49 718.675 li
1055.49 716.92 1054.79 715.238 1053.55 713.997 cv
990.797 651.247 li
989.557 650.006 987.874 649.309 986.119 649.309 cv
cp
.95 .95 .95 rgb
f
994.79 715.935 mo
1049.92 715.935 li
1051.98 715.935 1053 713.454 1051.55 712.003 cv
992.792 653.241 li
991.34 651.79 988.86 652.817 988.86 654.87 cv
988.86 710.004 li
988.86 713.279 991.515 715.935 994.79 715.935 cv
cp
.9 .9 .9 rgb
f
1058.91 856.388 mo
813.608 856.388 li
810.777 856.388 808.483 854.093 808.483 851.262 cv
808.483 768.849 li
808.483 766.018 810.777 763.723 813.608 763.723 cv
1058.91 763.723 li
1061.74 763.723 1064.03 766.018 1064.03 768.849 cv
1064.03 851.262 li
1064.03 854.093 1061.74 856.388 1058.91 856.388 cv
cp
.909804 .301961 .301961 rgb
f
1058.91 856.388 mo
813.608 856.388 li
810.777 856.388 808.483 854.093 808.483 851.262 cv
808.483 768.849 li
808.483 766.018 810.777 763.723 813.608 763.723 cv
1058.91 763.723 li
1061.74 763.723 1064.03 766.018 1064.03 768.849 cv
1064.03 851.262 li
1064.03 854.093 1061.74 856.388 1058.91 856.388 cv
cp
1 1 1 rgb
@
873.201 833.443 mo
874.928 833.757 877.441 833.836 880.111 833.836 cv
894.715 833.836 902.646 825.67 902.646 811.379 cv
902.725 798.895 895.658 790.964 881.21 790.964 cv
877.677 790.964 875.007 791.278 873.201 791.671 cv
873.201 833.443 li
cp
866.37 786.646 mo
870.531 786.018 875.478 785.546 880.896 785.546 cv
890.711 785.546 897.699 787.824 902.332 792.142 cv
907.043 796.461 909.791 802.585 909.791 811.144 cv
909.791 819.781 907.122 826.848 902.175 831.716 cv
897.228 836.663 889.062 839.332 878.776 839.332 cv
873.908 839.332 869.825 839.097 866.37 838.705 cv
866.37 786.646 li
cp
f
922.827 812.714 mo
922.827 824.021 928.951 834.15 939.709 834.15 cv
950.544 834.15 956.669 824.178 956.669 812.164 cv
956.669 801.643 951.172 790.65 939.787 790.65 cv
928.48 790.65 922.827 801.093 922.827 812.714 cv
cp
963.892 811.851 mo
963.892 830.067 952.821 839.725 939.316 839.725 cv
925.339 839.725 915.525 828.89 915.525 812.871 cv
915.525 796.068 925.967 785.076 940.101 785.076 cv
954.548 785.076 963.892 796.146 963.892 811.851 cv
cp
f
1009.75 837.134 mo
1007.24 838.39 1002.21 839.646 995.774 839.646 cv
980.855 839.646 969.627 830.224 969.627 812.871 cv
969.627 796.304 980.855 785.076 997.266 785.076 cv
1003.86 785.076 1008.02 786.489 1009.83 787.431 cv
1008.18 793.006 li
1005.59 791.749 1001.9 790.807 997.502 790.807 cv
985.095 790.807 976.851 798.738 976.851 812.636 cv
976.851 825.592 984.31 833.914 997.187 833.914 cv
1001.35 833.914 1005.59 833.051 1008.34 831.716 cv
1009.75 837.134 li
cp
f
351.083 675.964 mo
215.966 675.964 li
213.074 675.964 210.73 678.309 210.73 681.201 cv
210.73 954.643 li
210.73 957.536 213.074 959.88 215.966 959.88 cv
415.212 959.88 li
418.104 959.88 420.449 957.536 420.449 954.643 cv
420.449 745.331 li
420.449 743.576 419.752 741.893 418.511 740.652 cv
355.761 677.902 li
354.52 676.662 352.838 675.964 351.083 675.964 cv
cp
.87 .87 .87 rgb
f
383.376 809.791 mo
247.803 809.791 li
245.726 809.791 244.043 808.108 244.043 806.031 cv
244.043 806.031 li
244.043 803.954 245.726 802.27 247.803 802.27 cv
383.376 802.27 li
385.452 802.27 387.136 803.954 387.136 806.031 cv
387.136 806.031 li
387.136 808.108 385.452 809.791 383.376 809.791 cv
cp
.929412 .929412 .929412 rgb
f
383.376 848.338 mo
247.803 848.338 li
245.726 848.338 244.043 846.655 244.043 844.578 cv
244.043 844.578 li
244.043 842.5 245.726 840.817 247.803 840.817 cv
383.376 840.817 li
385.452 840.817 387.136 842.5 387.136 844.578 cv
387.136 844.578 li
387.136 846.655 385.452 848.338 383.376 848.338 cv
cp
f
383.376 886.885 mo
247.803 886.885 li
245.726 886.885 244.043 885.202 244.043 883.124 cv
244.043 883.124 li
244.043 881.047 245.726 879.364 247.803 879.364 cv
383.376 879.364 li
385.452 879.364 387.136 881.047 387.136 883.124 cv
387.136 883.124 li
387.136 885.202 385.452 886.885 383.376 886.885 cv
cp
f
383.376 925.432 mo
247.803 925.432 li
245.726 925.432 244.043 923.748 244.043 921.671 cv
244.043 921.671 li
244.043 919.594 245.726 917.911 247.803 917.911 cv
383.376 917.911 li
385.452 917.911 387.136 919.594 387.136 921.671 cv
387.136 921.671 li
387.136 923.748 385.452 925.432 383.376 925.432 cv
cp
f
383.376 771.245 mo
247.803 771.245 li
245.726 771.245 244.043 769.561 244.043 767.484 cv
244.043 767.484 li
244.043 765.407 245.726 763.723 247.803 763.723 cv
383.376 763.723 li
385.452 763.723 387.136 765.407 387.136 767.484 cv
387.136 767.484 li
387.136 769.561 385.452 771.245 383.376 771.245 cv
cp
f
359.754 742.59 mo
414.888 742.59 li
416.941 742.59 417.968 740.109 416.517 738.658 cv
357.755 679.896 li
356.304 678.445 353.823 679.473 353.823 681.525 cv
353.823 736.659 li
353.823 739.935 356.479 742.59 359.754 742.59 cv
cp
f
379.001 649.309 mo
243.885 649.309 li
240.992 649.309 238.648 651.654 238.648 654.546 cv
238.648 927.988 li
238.648 930.88 240.992 933.225 243.885 933.225 cv
443.13 933.225 li
446.023 933.225 448.367 930.88 448.367 927.988 cv
448.367 718.675 li
448.367 716.92 447.67 715.238 446.429 713.997 cv
383.679 651.247 li
382.439 650.006 380.756 649.309 379.001 649.309 cv
cp
.95 .95 .95 rgb
f
387.672 715.935 mo
442.807 715.935 li
444.859 715.935 445.886 713.454 444.435 712.003 cv
385.673 653.241 li
384.223 651.79 381.742 652.817 381.742 654.87 cv
381.742 710.004 li
381.742 713.279 384.397 715.935 387.672 715.935 cv
cp
.9 .9 .9 rgb
f
451.788 856.388 mo
206.49 856.388 li
203.659 856.388 201.364 854.093 201.364 851.262 cv
201.364 768.849 li
201.364 766.018 203.659 763.723 206.49 763.723 cv
451.788 763.723 li
454.619 763.723 456.914 766.018 456.914 768.849 cv
456.914 851.262 li
456.914 854.093 454.619 856.388 451.788 856.388 cv
cp
.8 .294118 .572549 rgb
f
451.788 856.388 mo
206.49 856.388 li
203.659 856.388 201.364 854.093 201.364 851.262 cv
201.364 768.849 li
201.364 766.018 203.659 763.723 206.49 763.723 cv
451.788 763.723 li
454.619 763.723 456.914 766.018 456.914 768.849 cv
456.914 851.262 li
456.914 854.093 454.619 856.388 451.788 856.388 cv
cp
1 1 1 rgb
@
277.053 812.086 mo
278.545 812.479 280.43 812.636 282.706 812.636 cv
290.951 812.636 295.977 808.631 295.977 801.329 cv
295.977 794.341 291.029 790.964 283.492 790.964 cv
280.507 790.964 278.231 791.2 277.053 791.514 cv
277.053 812.086 li
cp
270.221 786.567 mo
273.52 786.018 277.839 785.546 283.335 785.546 cv
290.087 785.546 295.034 787.117 298.175 789.944 cv
301.08 792.456 302.807 796.304 302.807 801.015 cv
302.807 805.805 301.394 809.574 298.724 812.322 cv
295.112 816.169 289.224 818.132 282.55 818.132 cv
280.507 818.132 278.623 818.054 277.053 817.661 cv
277.053 838.861 li
270.221 838.861 li
270.221 786.567 li
cp
f
311.054 830.538 mo
314.116 832.423 318.592 833.993 323.303 833.993 cv
330.292 833.993 334.375 830.303 334.375 824.963 cv
334.375 820.017 331.547 817.19 324.402 814.442 cv
315.765 811.379 310.426 806.904 310.426 799.445 cv
310.426 791.2 317.256 785.076 327.543 785.076 cv
332.962 785.076 336.886 786.332 339.243 787.666 cv
337.358 793.242 li
335.63 792.299 332.097 790.729 327.307 790.729 cv
320.084 790.729 317.336 795.047 317.336 798.659 cv
317.336 803.606 320.555 806.04 327.857 808.867 cv
336.808 812.322 341.362 816.64 341.362 824.414 cv
341.362 832.58 335.317 839.646 322.832 839.646 cv
317.728 839.646 312.154 838.155 309.327 836.27 cv
311.054 830.538 li
cp
f
357.539 833.443 mo
359.267 833.757 361.779 833.836 364.449 833.836 cv
379.053 833.836 386.984 825.67 386.984 811.379 cv
387.063 798.895 379.996 790.964 365.548 790.964 cv
362.015 790.964 359.345 791.278 357.539 791.671 cv
357.539 833.443 li
cp
350.708 786.646 mo
354.87 786.018 359.817 785.546 365.234 785.546 cv
375.049 785.546 382.037 787.824 386.67 792.142 cv
391.381 796.461 394.129 802.585 394.129 811.144 cv
394.129 819.781 391.46 826.848 386.513 831.716 cv
381.567 836.663 373.4 839.332 363.114 839.332 cv
358.246 839.332 354.163 839.097 350.708 838.705 cv
350.708 786.646 li
cp
f
2172.44 196.287 mo
2037.32 196.287 li
2034.43 196.287 2032.08 198.631 2032.08 201.523 cv
2032.08 474.966 li
2032.08 477.858 2034.43 480.203 2037.32 480.203 cv
2236.57 480.203 li
2239.46 480.203 2241.8 477.858 2241.8 474.966 cv
2241.8 265.653 li
2241.8 263.898 2241.11 262.215 2239.86 260.975 cv
2177.11 198.225 li
2175.87 196.984 2174.19 196.287 2172.44 196.287 cv
cp
.87 .87 .87 rgb
f
2204.73 330.114 mo
2069.16 330.114 li
2067.08 330.114 2065.4 328.43 2065.4 326.353 cv
2065.4 326.353 li
2065.4 324.276 2067.08 322.592 2069.16 322.592 cv
2204.73 322.592 li
2206.81 322.592 2208.49 324.276 2208.49 326.353 cv
2208.49 326.353 li
2208.49 328.43 2206.81 330.114 2204.73 330.114 cv
cp
.929412 .929412 .929412 rgb
f
2204.73 368.661 mo
2069.16 368.661 li
2067.08 368.661 2065.4 366.977 2065.4 364.9 cv
2065.4 364.9 li
2065.4 362.823 2067.08 361.139 2069.16 361.139 cv
2204.73 361.139 li
2206.81 361.139 2208.49 362.823 2208.49 364.9 cv
2208.49 364.9 li
2208.49 366.977 2206.81 368.661 2204.73 368.661 cv
cp
f
2204.73 407.207 mo
2069.16 407.207 li
2067.08 407.207 2065.4 405.524 2065.4 403.447 cv
2065.4 403.447 li
2065.4 401.37 2067.08 399.686 2069.16 399.686 cv
2204.73 399.686 li
2206.81 399.686 2208.49 401.37 2208.49 403.447 cv
2208.49 403.447 li
2208.49 405.524 2206.81 407.207 2204.73 407.207 cv
cp
f
2204.73 445.754 mo
2069.16 445.754 li
2067.08 445.754 2065.4 444.07 2065.4 441.994 cv
2065.4 441.994 li
2065.4 439.916 2067.08 438.233 2069.16 438.233 cv
2204.73 438.233 li
2206.81 438.233 2208.49 439.916 2208.49 441.994 cv
2208.49 441.994 li
2208.49 444.07 2206.81 445.754 2204.73 445.754 cv
cp
f
2204.73 291.567 mo
2069.16 291.567 li
2067.08 291.567 2065.4 289.883 2065.4 287.806 cv
2065.4 287.806 li
2065.4 285.729 2067.08 284.045 2069.16 284.045 cv
2204.73 284.045 li
2206.81 284.045 2208.49 285.729 2208.49 287.806 cv
2208.49 287.806 li
2208.49 289.883 2206.81 291.567 2204.73 291.567 cv
cp
f
2181.11 262.912 mo
2236.24 262.912 li
2238.29 262.912 2239.32 260.431 2237.87 258.98 cv
2179.11 200.218 li
2177.66 198.768 2175.18 199.795 2175.18 201.847 cv
2175.18 256.981 li
2175.18 260.257 2177.83 262.912 2181.11 262.912 cv
cp
f
2200.35 169.631 mo
2065.24 169.631 li
2062.35 169.631 2060 171.976 2060 174.868 cv
2060 448.311 li
2060 451.203 2062.35 453.547 2065.24 453.547 cv
2264.48 453.547 li
2267.38 453.547 2269.72 451.203 2269.72 448.311 cv
2269.72 238.998 li
2269.72 237.243 2269.02 235.56 2267.78 234.319 cv
2205.03 171.569 li
2203.79 170.329 2202.11 169.631 2200.35 169.631 cv
cp
.95 .95 .95 rgb
f
2209.03 236.257 mo
2264.16 236.257 li
2266.21 236.257 2267.24 233.776 2265.79 232.325 cv
2207.03 173.563 li
2205.58 172.112 2203.1 173.14 2203.1 175.192 cv
2203.1 230.326 li
2203.1 233.602 2205.75 236.257 2209.03 236.257 cv
cp
.9 .9 .9 rgb
f
2273.14 376.71 mo
2027.84 376.71 li
2025.01 376.71 2022.72 374.415 2022.72 371.584 cv
2022.72 289.171 li
2022.72 286.34 2025.01 284.045 2027.84 284.045 cv
2273.14 284.045 li
2275.97 284.045 2278.27 286.34 2278.27 289.171 cv
2278.27 371.584 li
2278.27 374.415 2275.97 376.71 2273.14 376.71 cv
cp
.270588 .47451 .8 rgb
f
2273.14 376.71 mo
2027.84 376.71 li
2025.01 376.71 2022.72 374.415 2022.72 371.584 cv
2022.72 289.171 li
2022.72 286.34 2025.01 284.045 2027.84 284.045 cv
2273.14 284.045 li
2275.97 284.045 2278.27 286.34 2278.27 289.171 cv
2278.27 371.584 li
2278.27 374.415 2275.97 376.71 2273.14 376.71 cv
cp
1 1 1 rgb
@
2104.49 332.409 mo
2105.98 332.801 2107.86 332.958 2110.14 332.958 cv
2118.39 332.958 2123.41 328.954 2123.41 321.651 cv
2123.41 314.663 2118.46 311.287 2110.93 311.287 cv
2107.94 311.287 2105.67 311.522 2104.49 311.836 cv
2104.49 332.409 li
cp
2097.66 306.89 mo
2100.95 306.34 2105.27 305.869 2110.77 305.869 cv
2117.52 305.869 2122.47 307.439 2125.61 310.266 cv
2128.52 312.779 2130.24 316.626 2130.24 321.337 cv
2130.24 326.127 2128.83 329.896 2126.16 332.644 cv
2122.55 336.491 2116.66 338.455 2109.98 338.455 cv
2107.94 338.455 2106.06 338.376 2104.49 337.983 cv
2104.49 359.184 li
2097.66 359.184 li
2097.66 306.89 li
cp
f
2146.26 332.409 mo
2147.75 332.801 2149.64 332.958 2151.92 332.958 cv
2160.16 332.958 2165.19 328.954 2165.19 321.651 cv
2165.19 314.663 2160.24 311.287 2152.7 311.287 cv
2149.72 311.287 2147.44 311.522 2146.26 311.836 cv
2146.26 332.409 li
cp
2139.43 306.89 mo
2142.73 306.34 2147.05 305.869 2152.54 305.869 cv
2159.3 305.869 2164.24 307.439 2167.38 310.266 cv
2170.29 312.779 2172.02 316.626 2172.02 321.337 cv
2172.02 326.127 2170.6 329.896 2167.93 332.644 cv
2164.32 336.491 2158.43 338.455 2151.76 338.455 cv
2149.72 338.455 2147.83 338.376 2146.26 337.983 cv
2146.26 359.184 li
2139.43 359.184 li
2139.43 306.89 li
cp
f
2191.26 312.072 mo
2175.16 312.072 li
2175.16 306.262 li
2214.34 306.262 li
2214.34 312.072 li
2198.17 312.072 li
2198.17 359.184 li
2191.26 359.184 li
2191.26 312.072 li
cp
f
1565.32 196.287 mo
1430.2 196.287 li
1427.31 196.287 1424.97 198.631 1424.97 201.523 cv
1424.97 474.966 li
1424.97 477.858 1427.31 480.203 1430.2 480.203 cv
1629.45 480.203 li
1632.34 480.203 1634.69 477.858 1634.69 474.966 cv
1634.69 265.653 li
1634.69 263.898 1633.99 262.215 1632.75 260.975 cv
1570 198.225 li
1568.76 196.984 1567.07 196.287 1565.32 196.287 cv
cp
.87 .87 .87 rgb
f
1597.61 330.114 mo
1462.04 330.114 li
1459.96 330.114 1458.28 328.43 1458.28 326.353 cv
1458.28 326.353 li
1458.28 324.276 1459.96 322.592 1462.04 322.592 cv
1597.61 322.592 li
1599.69 322.592 1601.37 324.276 1601.37 326.353 cv
1601.37 326.353 li
1601.37 328.43 1599.69 330.114 1597.61 330.114 cv
cp
.929412 .929412 .929412 rgb
f
1597.61 368.661 mo
1462.04 368.661 li
1459.96 368.661 1458.28 366.977 1458.28 364.9 cv
1458.28 364.9 li
1458.28 362.823 1459.96 361.139 1462.04 361.139 cv
1597.61 361.139 li
1599.69 361.139 1601.37 362.823 1601.37 364.9 cv
1601.37 364.9 li
1601.37 366.977 1599.69 368.661 1597.61 368.661 cv
cp
f
1597.61 407.207 mo
1462.04 407.207 li
1459.96 407.207 1458.28 405.524 1458.28 403.447 cv
1458.28 403.447 li
1458.28 401.37 1459.96 399.686 1462.04 399.686 cv
1597.61 399.686 li
1599.69 399.686 1601.37 401.37 1601.37 403.447 cv
1601.37 403.447 li
1601.37 405.524 1599.69 407.207 1597.61 407.207 cv
cp
f
1597.61 445.754 mo
1462.04 445.754 li
1459.96 445.754 1458.28 444.07 1458.28 441.994 cv
1458.28 441.994 li
1458.28 439.916 1459.96 438.233 1462.04 438.233 cv
1597.61 438.233 li
1599.69 438.233 1601.37 439.916 1601.37 441.994 cv
1601.37 441.994 li
1601.37 444.07 1599.69 445.754 1597.61 445.754 cv
cp
f
1597.61 291.567 mo
1462.04 291.567 li
1459.96 291.567 1458.28 289.883 1458.28 287.806 cv
1458.28 287.806 li
1458.28 285.729 1459.96 284.046 1462.04 284.046 cv
1597.61 284.046 li
1599.69 284.046 1601.37 285.729 1601.37 287.806 cv
1601.37 287.806 li
1601.37 289.883 1599.69 291.567 1597.61 291.567 cv
cp
f
1573.99 262.912 mo
1629.12 262.912 li
1631.18 262.912 1632.2 260.431 1630.75 258.98 cv
1571.99 200.218 li
1570.54 198.768 1568.06 199.795 1568.06 201.847 cv
1568.06 256.981 li
1568.06 260.257 1570.71 262.912 1573.99 262.912 cv
cp
f
1593.24 169.631 mo
1458.12 169.631 li
1455.23 169.631 1452.88 171.976 1452.88 174.868 cv
1452.88 448.311 li
1452.88 451.203 1455.23 453.547 1458.12 453.547 cv
1657.37 453.547 li
1660.26 453.547 1662.6 451.203 1662.6 448.311 cv
1662.6 238.998 li
1662.6 237.243 1661.91 235.56 1660.67 234.319 cv
1597.92 171.569 li
1596.67 170.329 1594.99 169.631 1593.24 169.631 cv
cp
.95 .95 .95 rgb
f
1601.91 236.257 mo
1657.04 236.257 li
1659.09 236.257 1660.12 233.776 1658.67 232.325 cv
1599.91 173.563 li
1598.46 172.112 1595.98 173.14 1595.98 175.192 cv
1595.98 230.326 li
1595.98 233.602 1598.63 236.257 1601.91 236.257 cv
cp
.9 .9 .9 rgb
f
1666.02 376.71 mo
1420.73 376.71 li
1417.9 376.71 1415.6 374.415 1415.6 371.584 cv
1415.6 289.171 li
1415.6 286.34 1417.9 284.046 1420.73 284.046 cv
1666.02 284.046 li
1668.86 284.046 1671.15 286.34 1671.15 289.171 cv
1671.15 371.584 li
1671.15 374.415 1668.86 376.71 1666.02 376.71 cv
cp
1 .34902 .34902 rgb
f
1666.02 376.71 mo
1420.73 376.71 li
1417.9 376.71 1415.6 374.415 1415.6 371.584 cv
1415.6 289.171 li
1415.6 286.34 1417.9 284.046 1420.73 284.046 cv
1666.02 284.046 li
1668.86 284.046 1671.15 286.34 1671.15 289.171 cv
1671.15 371.584 li
1671.15 374.415 1668.86 376.71 1666.02 376.71 cv
cp
1 1 1 rgb
@
1503.76 305.748 mo
1510.59 305.748 li
1510.59 341.161 li
1510.59 355.215 1503.69 359.534 1494.58 359.534 cv
1492.06 359.534 1489 358.984 1487.28 358.278 cv
1488.3 352.703 li
1489.71 353.252 1491.75 353.724 1494.03 353.724 cv
1500.15 353.724 1503.76 350.976 1503.76 340.611 cv
1503.76 305.748 li
cp
f
1528.81 331.895 mo
1530.3 332.288 1532.19 332.444 1534.47 332.444 cv
1542.71 332.444 1547.74 328.44 1547.74 321.138 cv
1547.74 314.149 1542.79 310.773 1535.25 310.773 cv
1532.27 310.773 1529.99 311.009 1528.81 311.323 cv
1528.81 331.895 li
cp
1521.98 306.376 mo
1525.28 305.827 1529.6 305.355 1535.09 305.355 cv
1541.85 305.355 1546.79 306.926 1549.93 309.752 cv
1552.84 312.265 1554.57 316.112 1554.57 320.824 cv
1554.57 325.614 1553.15 329.382 1550.48 332.131 cv
1546.87 335.978 1540.98 337.941 1534.31 337.941 cv
1532.27 337.941 1530.38 337.863 1528.81 337.47 cv
1528.81 358.67 li
1521.98 358.67 li
1521.98 306.376 li
cp
f
1604.04 356.314 mo
1600.97 357.414 1594.93 359.22 1587.78 359.22 cv
1579.77 359.22 1573.18 357.178 1568 352.232 cv
1563.44 347.834 1560.61 340.768 1560.61 332.523 cv
1560.69 316.741 1571.53 305.198 1589.27 305.198 cv
1595.4 305.198 1600.19 306.533 1602.47 307.632 cv
1600.82 313.207 li
1597.99 311.951 1594.46 310.93 1589.12 310.93 cv
1576.24 310.93 1567.84 318.939 1567.84 332.209 cv
1567.84 345.636 1575.93 353.566 1588.25 353.566 cv
1592.73 353.566 1595.79 352.938 1597.36 352.153 cv
1597.36 336.371 li
1586.61 336.371 li
1586.61 330.874 li
1604.04 330.874 li
1604.04 356.314 li
cp
f
958.201 196.287 mo
823.084 196.287 li
820.192 196.287 817.848 198.631 817.848 201.523 cv
817.848 474.966 li
817.848 477.858 820.192 480.203 823.084 480.203 cv
1022.33 480.203 li
1025.22 480.203 1027.57 477.858 1027.57 474.966 cv
1027.57 265.653 li
1027.57 263.898 1026.87 262.215 1025.63 260.975 cv
962.879 198.225 li
961.638 196.984 959.956 196.287 958.201 196.287 cv
cp
.87 .87 .87 rgb
f
990.493 330.114 mo
854.921 330.114 li
852.844 330.114 851.16 328.43 851.16 326.353 cv
851.16 326.353 li
851.16 324.276 852.844 322.592 854.921 322.592 cv
990.493 322.592 li
992.57 322.592 994.254 324.276 994.254 326.353 cv
994.254 326.353 li
994.254 328.43 992.57 330.114 990.493 330.114 cv
cp
.929412 .929412 .929412 rgb
f
990.493 368.661 mo
854.921 368.661 li
852.844 368.661 851.16 366.977 851.16 364.9 cv
851.16 364.9 li
851.16 362.823 852.844 361.139 854.921 361.139 cv
990.493 361.139 li
992.57 361.139 994.254 362.823 994.254 364.9 cv
994.254 364.9 li
994.254 366.977 992.57 368.661 990.493 368.661 cv
cp
f
990.493 407.207 mo
854.921 407.207 li
852.844 407.207 851.16 405.524 851.16 403.447 cv
851.16 403.447 li
851.16 401.37 852.844 399.686 854.921 399.686 cv
990.493 399.686 li
992.57 399.686 994.254 401.37 994.254 403.447 cv
994.254 403.447 li
994.254 405.524 992.57 407.207 990.493 407.207 cv
cp
f
990.493 445.754 mo
854.921 445.754 li
852.844 445.754 851.16 444.07 851.16 441.994 cv
851.16 441.994 li
851.16 439.916 852.844 438.233 854.921 438.233 cv
990.493 438.233 li
992.57 438.233 994.254 439.916 994.254 441.994 cv
994.254 441.994 li
994.254 444.07 992.57 445.754 990.493 445.754 cv
cp
f
990.493 291.567 mo
854.921 291.567 li
852.844 291.567 851.16 289.883 851.16 287.806 cv
851.16 287.806 li
851.16 285.729 852.844 284.046 854.921 284.046 cv
990.493 284.046 li
992.57 284.046 994.254 285.729 994.254 287.806 cv
994.254 287.806 li
994.254 289.883 992.57 291.567 990.493 291.567 cv
cp
f
966.872 262.912 mo
1022.01 262.912 li
1024.06 262.912 1025.09 260.431 1023.63 258.98 cv
964.873 200.218 li
963.422 198.768 960.942 199.795 960.942 201.847 cv
960.942 256.981 li
960.942 260.257 963.597 262.912 966.872 262.912 cv
cp
f
986.119 169.631 mo
851.003 169.631 li
848.11 169.631 845.766 171.976 845.766 174.868 cv
845.766 448.311 li
845.766 451.203 848.11 453.547 851.003 453.547 cv
1050.25 453.547 li
1053.14 453.547 1055.49 451.203 1055.49 448.311 cv
1055.49 238.998 li
1055.49 237.243 1054.79 235.56 1053.55 234.319 cv
990.797 171.569 li
989.557 170.329 987.874 169.631 986.119 169.631 cv
cp
.95 .95 .95 rgb
f
994.79 236.257 mo
1049.92 236.257 li
1051.98 236.257 1053 233.776 1051.55 232.325 cv
992.792 173.563 li
991.34 172.112 988.86 173.14 988.86 175.192 cv
988.86 230.326 li
988.86 233.602 991.515 236.257 994.79 236.257 cv
cp
.9 .9 .9 rgb
f
1058.91 376.71 mo
813.608 376.71 li
810.777 376.71 808.483 374.415 808.483 371.584 cv
808.483 289.171 li
808.483 286.34 810.777 284.046 813.608 284.046 cv
1058.91 284.046 li
1061.74 284.046 1064.03 286.34 1064.03 289.171 cv
1064.03 371.584 li
1064.03 374.415 1061.74 376.71 1058.91 376.71 cv
cp
.109804 .701961 1 rgb
f
1058.91 376.71 mo
813.608 376.71 li
810.777 376.71 808.483 374.415 808.483 371.584 cv
808.483 289.171 li
808.483 286.34 810.777 284.046 813.608 284.046 cv
1058.91 284.046 li
1061.74 284.046 1064.03 286.34 1064.03 289.171 cv
1064.03 371.584 li
1064.03 374.415 1061.74 376.71 1058.91 376.71 cv
cp
1 1 1 rgb
@
880.145 331.895 mo
881.636 332.288 883.522 332.445 885.798 332.445 cv
894.043 332.445 899.068 328.44 899.068 321.138 cv
899.068 314.15 894.121 310.774 886.584 310.774 cv
883.6 310.774 881.323 311.009 880.145 311.323 cv
880.145 331.895 li
cp
873.314 306.376 mo
876.611 305.827 880.93 305.355 886.426 305.355 cv
893.179 305.355 898.126 306.926 901.266 309.753 cv
904.172 312.266 905.9 316.113 905.9 320.824 cv
905.9 325.614 904.486 329.383 901.817 332.131 cv
898.205 335.978 892.316 337.941 885.641 337.941 cv
883.6 337.941 881.715 337.863 880.145 337.47 cv
880.145 358.67 li
873.314 358.67 li
873.314 306.376 li
cp
f
915.088 358.67 mo
915.088 305.749 li
922.547 305.749 li
939.508 332.523 li
943.434 338.727 946.496 344.301 949.008 349.719 cv
949.166 349.641 li
948.537 342.574 948.38 336.136 948.38 327.891 cv
948.38 305.749 li
954.819 305.749 li
954.819 358.67 li
947.909 358.67 li
931.106 331.817 li
927.416 325.928 923.882 319.882 921.213 314.15 cv
920.977 314.228 li
921.37 320.902 921.526 327.263 921.526 336.057 cv
921.526 358.67 li
915.088 358.67 li
cp
f
1007.04 356.315 mo
1003.97 357.414 997.928 359.22 990.782 359.22 cv
982.774 359.22 976.178 357.179 970.996 352.232 cv
966.442 347.835 963.615 340.768 963.615 332.523 cv
963.693 316.741 974.529 305.199 992.275 305.199 cv
998.399 305.199 1003.19 306.533 1005.47 307.633 cv
1003.82 313.207 li
1000.99 311.952 997.457 310.931 992.117 310.931 cv
979.24 310.931 970.839 318.939 970.839 332.209 cv
970.839 345.636 978.927 353.566 991.254 353.566 cv
995.73 353.566 998.792 352.938 1000.36 352.153 cv
1000.36 336.371 li
989.605 336.371 li
989.605 330.874 li
1007.04 330.874 li
1007.04 356.315 li
cp
f
351.083 196.287 mo
215.966 196.287 li
213.074 196.287 210.73 198.631 210.73 201.523 cv
210.73 474.966 li
210.73 477.858 213.074 480.203 215.966 480.203 cv
415.212 480.203 li
418.104 480.203 420.449 477.858 420.449 474.966 cv
420.449 265.653 li
420.449 263.898 419.752 262.215 418.511 260.975 cv
355.761 198.225 li
354.52 196.984 352.838 196.287 351.083 196.287 cv
cp
.87 .87 .87 rgb
f
383.376 330.114 mo
247.803 330.114 li
245.726 330.114 244.043 328.43 244.043 326.353 cv
244.043 326.353 li
244.043 324.276 245.726 322.592 247.803 322.592 cv
383.376 322.592 li
385.452 322.592 387.136 324.276 387.136 326.353 cv
387.136 326.353 li
387.136 328.43 385.452 330.114 383.376 330.114 cv
cp
.929412 .929412 .929412 rgb
f
383.376 368.661 mo
247.803 368.661 li
245.726 368.661 244.043 366.977 244.043 364.9 cv
244.043 364.9 li
244.043 362.823 245.726 361.139 247.803 361.139 cv
383.376 361.139 li
385.452 361.139 387.136 362.823 387.136 364.9 cv
387.136 364.9 li
387.136 366.977 385.452 368.661 383.376 368.661 cv
cp
f
383.376 407.207 mo
247.803 407.207 li
245.726 407.207 244.043 405.524 244.043 403.447 cv
244.043 403.447 li
244.043 401.37 245.726 399.686 247.803 399.686 cv
383.376 399.686 li
385.452 399.686 387.136 401.37 387.136 403.447 cv
387.136 403.447 li
387.136 405.524 385.452 407.207 383.376 407.207 cv
cp
f
383.376 445.754 mo
247.803 445.754 li
245.726 445.754 244.043 444.07 244.043 441.994 cv
244.043 441.994 li
244.043 439.916 245.726 438.233 247.803 438.233 cv
383.376 438.233 li
385.452 438.233 387.136 439.916 387.136 441.994 cv
387.136 441.994 li
387.136 444.07 385.452 445.754 383.376 445.754 cv
cp
f
383.376 291.567 mo
247.803 291.567 li
245.726 291.567 244.043 289.883 244.043 287.806 cv
244.043 287.806 li
244.043 285.729 245.726 284.046 247.803 284.046 cv
383.376 284.046 li
385.452 284.046 387.136 285.729 387.136 287.806 cv
387.136 287.806 li
387.136 289.883 385.452 291.567 383.376 291.567 cv
cp
f
359.754 262.912 mo
414.888 262.912 li
416.941 262.912 417.968 260.431 416.517 258.98 cv
357.755 200.218 li
356.304 198.768 353.823 199.795 353.823 201.847 cv
353.823 256.981 li
353.823 260.257 356.479 262.912 359.754 262.912 cv
cp
f
379.001 169.631 mo
243.885 169.631 li
240.992 169.631 238.648 171.976 238.648 174.868 cv
238.648 448.311 li
238.648 451.203 240.992 453.547 243.885 453.547 cv
443.13 453.547 li
446.023 453.547 448.367 451.203 448.367 448.311 cv
448.367 238.998 li
448.367 237.243 447.67 235.56 446.429 234.319 cv
383.679 171.569 li
382.439 170.329 380.756 169.631 379.001 169.631 cv
cp
.95 .95 .95 rgb
f
387.672 236.257 mo
442.807 236.257 li
444.859 236.257 445.886 233.776 444.435 232.325 cv
385.673 173.563 li
384.223 172.112 381.742 173.14 381.742 175.192 cv
381.742 230.326 li
381.742 233.602 384.397 236.257 387.672 236.257 cv
cp
.9 .9 .9 rgb
f
451.788 376.71 mo
206.49 376.71 li
203.659 376.71 201.364 374.415 201.364 371.584 cv
201.364 289.171 li
201.364 286.34 203.659 284.046 206.49 284.046 cv
451.788 284.046 li
454.619 284.046 456.914 286.34 456.914 289.171 cv
456.914 371.584 li
456.914 374.415 454.619 376.71 451.788 376.71 cv
cp
.0784314 .8 .309804 rgb
f
451.788 376.71 mo
206.49 376.71 li
203.659 376.71 201.364 374.415 201.364 371.584 cv
201.364 289.171 li
201.364 286.34 203.659 284.046 206.49 284.046 cv
451.788 284.046 li
454.619 284.046 456.914 286.34 456.914 289.171 cv
456.914 371.584 li
456.914 374.415 454.619 376.71 451.788 376.71 cv
cp
1 1 1 rgb
@
325.5 336.685 mo
320.318 321.452 li
319.14 317.998 318.355 314.856 317.57 311.794 cv
317.413 311.794 li
316.627 314.935 315.764 318.154 314.743 321.374 cv
309.561 336.685 li
325.5 336.685 li
cp
308.147 342.024 mo
302.651 358.67 li
295.584 358.67 li
313.565 305.749 li
321.81 305.749 li
339.869 358.67 li
332.567 358.67 li
326.913 342.024 li
308.147 342.024 li
cp
f
354.476 305.749 mo
354.476 358.67 li
347.645 358.67 li
347.645 305.749 li
354.476 305.749 li
cp
f
2172.44 1635.32 mo
2037.32 1635.32 li
2034.43 1635.32 2032.08 1637.66 2032.08 1640.56 cv
2032.08 1914 li
2032.08 1916.89 2034.43 1919.24 2037.32 1919.24 cv
2236.57 1919.24 li
2239.46 1919.24 2241.8 1916.89 2241.8 1914 cv
2241.8 1704.69 li
2241.8 1702.93 2241.11 1701.25 2239.86 1700.01 cv
2177.11 1637.26 li
2175.87 1636.02 2174.19 1635.32 2172.44 1635.32 cv
cp
.87 .87 .87 rgb
f
2204.73 1769.15 mo
2069.16 1769.15 li
2067.08 1769.15 2065.4 1767.46 2065.4 1765.39 cv
2065.4 1765.39 li
2065.4 1763.31 2067.08 1761.63 2069.16 1761.63 cv
2204.73 1761.63 li
2206.81 1761.63 2208.49 1763.31 2208.49 1765.39 cv
2208.49 1765.39 li
2208.49 1767.46 2206.81 1769.15 2204.73 1769.15 cv
cp
.929412 .929412 .929412 rgb
f
2204.73 1807.69 mo
2069.16 1807.69 li
2067.08 1807.69 2065.4 1806.01 2065.4 1803.93 cv
2065.4 1803.93 li
2065.4 1801.86 2067.08 1800.17 2069.16 1800.17 cv
2204.73 1800.17 li
2206.81 1800.17 2208.49 1801.86 2208.49 1803.93 cv
2208.49 1803.93 li
2208.49 1806.01 2206.81 1807.69 2204.73 1807.69 cv
cp
f
2204.73 1846.24 mo
2069.16 1846.24 li
2067.08 1846.24 2065.4 1844.56 2065.4 1842.48 cv
2065.4 1842.48 li
2065.4 1840.4 2067.08 1838.72 2069.16 1838.72 cv
2204.73 1838.72 li
2206.81 1838.72 2208.49 1840.4 2208.49 1842.48 cv
2208.49 1842.48 li
2208.49 1844.56 2206.81 1846.24 2204.73 1846.24 cv
cp
f
2204.73 1884.79 mo
2069.16 1884.79 li
2067.08 1884.79 2065.4 1883.1 2065.4 1881.03 cv
2065.4 1881.03 li
2065.4 1878.95 2067.08 1877.27 2069.16 1877.27 cv
2204.73 1877.27 li
2206.81 1877.27 2208.49 1878.95 2208.49 1881.03 cv
2208.49 1881.03 li
2208.49 1883.1 2206.81 1884.79 2204.73 1884.79 cv
cp
f
2204.73 1730.6 mo
2069.16 1730.6 li
2067.08 1730.6 2065.4 1728.92 2065.4 1726.84 cv
2065.4 1726.84 li
2065.4 1724.76 2067.08 1723.08 2069.16 1723.08 cv
2204.73 1723.08 li
2206.81 1723.08 2208.49 1724.76 2208.49 1726.84 cv
2208.49 1726.84 li
2208.49 1728.92 2206.81 1730.6 2204.73 1730.6 cv
cp
f
2181.11 1701.95 mo
2236.24 1701.95 li
2238.29 1701.95 2239.32 1699.46 2237.87 1698.01 cv
2179.11 1639.25 li
2177.66 1637.8 2175.18 1638.83 2175.18 1640.88 cv
2175.18 1696.01 li
2175.18 1699.29 2177.83 1701.95 2181.11 1701.95 cv
cp
f
2200.35 1608.66 mo
2065.24 1608.66 li
2062.35 1608.66 2060 1611.01 2060 1613.9 cv
2060 1887.34 li
2060 1890.24 2062.35 1892.58 2065.24 1892.58 cv
2264.48 1892.58 li
2267.38 1892.58 2269.72 1890.24 2269.72 1887.34 cv
2269.72 1678.03 li
2269.72 1676.28 2269.02 1674.59 2267.78 1673.35 cv
2205.03 1610.6 li
2203.79 1609.36 2202.11 1608.66 2200.35 1608.66 cv
cp
.95 .95 .95 rgb
f
2209.03 1675.29 mo
2264.16 1675.29 li
2266.21 1675.29 2267.24 1672.81 2265.79 1671.36 cv
2207.03 1612.6 li
2205.58 1611.15 2203.1 1612.17 2203.1 1614.22 cv
2203.1 1669.36 li
2203.1 1672.63 2205.75 1675.29 2209.03 1675.29 cv
cp
.9 .9 .9 rgb
f
2273.14 1815.74 mo
2027.84 1815.74 li
2025.01 1815.74 2022.72 1813.45 2022.72 1810.62 cv
2022.72 1728.2 li
2022.72 1725.37 2025.01 1723.08 2027.84 1723.08 cv
2273.14 1723.08 li
2275.97 1723.08 2278.27 1725.37 2278.27 1728.2 cv
2278.27 1810.62 li
2278.27 1813.45 2275.97 1815.74 2273.14 1815.74 cv
cp
0 .8 .588235 rgb
f
2122.66 1771.12 mo
2101.83 1771.12 li
2101.83 1790.44 li
2125.05 1790.44 li
2125.05 1796.25 li
2094.91 1796.25 li
2094.91 1742.66 li
2123.85 1742.66 li
2123.85 1748.46 li
2101.83 1748.46 li
2101.83 1765.4 li
2122.66 1765.4 li
2122.66 1771.12 li
cp
1 1 1 rgb
f
2140.95 1769.13 mo
2142.46 1769.53 2144.37 1769.69 2146.68 1769.69 cv
2155.02 1769.69 2160.11 1765.63 2160.11 1758.24 cv
2160.11 1751.16 2155.1 1747.74 2147.47 1747.74 cv
2144.45 1747.74 2142.14 1747.98 2140.95 1748.3 cv
2140.95 1769.13 li
cp
2134.03 1743.29 mo
2137.37 1742.73 2141.75 1742.26 2147.31 1742.26 cv
2154.15 1742.26 2159.16 1743.85 2162.34 1746.71 cv
2165.28 1749.25 2167.03 1753.15 2167.03 1757.92 cv
2167.03 1762.77 2165.6 1766.59 2162.9 1769.37 cv
2159.24 1773.27 2153.28 1775.26 2146.52 1775.26 cv
2144.45 1775.26 2142.54 1775.18 2140.95 1774.78 cv
2140.95 1796.25 li
2134.03 1796.25 li
2134.03 1743.29 li
cp
f
2175.38 1787.82 mo
2178.48 1789.73 2183.02 1791.32 2187.79 1791.32 cv
2194.86 1791.32 2199 1787.58 2199 1782.17 cv
2199 1777.16 2196.14 1774.3 2188.9 1771.52 cv
2180.15 1768.42 2174.75 1763.88 2174.75 1756.33 cv
2174.75 1747.98 2181.66 1741.78 2192.08 1741.78 cv
2197.57 1741.78 2201.54 1743.05 2203.93 1744.4 cv
2202.02 1750.05 li
2200.27 1749.1 2196.69 1747.5 2191.84 1747.5 cv
2184.53 1747.5 2181.74 1751.88 2181.74 1755.54 cv
2181.74 1760.55 2185 1763.01 2192.4 1765.87 cv
2201.46 1769.37 2206.08 1773.75 2206.08 1781.62 cv
2206.08 1789.89 2199.95 1797.04 2187.31 1797.04 cv
2182.14 1797.04 2176.5 1795.53 2173.63 1793.62 cv
2175.38 1787.82 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 24.0.3%%For: (\600\755\755\740 \617\753\774\756\755\761\740\752) ()%%Title: (2325.eps)%%CreationDate: 26.01.2021 18:37%%Canvassize: 16383%AI9_DataStream%Gb"-6%?k)<E@(AfqEK'qKHd4[Ac(&&Q.E8Rk\dcI)j[=^lre7/'+>_2A^$59"!m9arqal\:1h3:!(\;.H=LH?GQcDIqpt_ES!B82%-\(]NqmYIqq<[dDhqu3I^OCY/a\;[,PC1l%RsM9IFkuuV-i`<$DdIkbraG23XYb=iEL5-O0qd=pHK<gAms=<;L-E>"q99_ZhL,:f%GAgj&qWb,:\"CE`pXRT.+9(chc0[/kr8)noiqED"p%dchs7Q*bo+s([a3@DOrDiael1O5CT&.3Yil0NYrU'ZfI*/.4pQ^`CiV4;O%n`aD/@?fZ`qYG!>2*8&`r0-%9ir4<c,MoOdHQMmuBR/:;*I$mAX/F^EroQH.3c9H;T@:rlp]!88q(k+MJ%ETB\K,JRIrT"7G,3C*%^&:aI*I"J8HfFf"[A1pPKC+0_p:iSsn.0E8%%PR[89\[d:RjP6L"f_c8+?-!J,%j@l$&oqhi4)lheN2"hi3cjDo:H75Q<YNHhLNH%Zh<'S?bUdZip537hq/)1gn)WZf7&#Bq!+JXI.R0cR`=+*;>0&%5J-$2J+Y)n?ZAoO>K@e4pa>;^2^(AW,lDjHm),IbF1s68Q'_=>%Y9.b@XP`d4[Pn#"p>aUD3WDlpPMh;4IJ(RGT>10t'm[+IC2\7WgJ?C8GI-!cIn9-M`a9^LEkb8\g&\1MIQ'lk[l2c\Fb816]sIAc%2<_p"YQ!YVX+1*Dm=0ESij2_T`3IYFIJqpPs0o81ERVMb`?+$+o5=8aFhhq0q>AdT^O,SKCR`c_daC5RjkJ*fI;V!L:\45S$Sq9e%#5EZgn@((-rVk@![N+1RrXI`2cYr"*^\XF<^A."1Is?\/Q#qRaIJN0QhnK&m]\-(YalBNOS!CY7?)p\ih0Q\-2:(#[=1lq@f5Q#]%IX[drkDG1*H2lS6hlknMrr).A5Q;udHU"VQ>*m!Kp\M5>Z5i[`l@42I]6X7biid7RT)\,[?bPub8GU_i?_3SXEVIZ6g3'%&q<[)-%(O-m+fsgi[Fp#265C`QWrGMYZhq7F:^=4t.qknr8erG4X#3WYp)uaGuqWlJBZ![Ihh:lk^r2VdVo_.FFcTZ^QO0<I$l`6@Z^O9a5%p9WL\rSrC:00d)Il0iZ<^FT9X?)dP,-iIn;BXUHi/^i'&IXeD*eD\/5Q[on/S'd^c.DsHEYBTa#op7o?PIG-;p$UA4IVC&&2?*RG%UJ1r[J@uBk>s>R^"nsj6bC-dOLT(1Pp2;VXZi(p;<p+f.k$MGCrq8ui?)RYmQiHaA0Aa?dG>%f,]_[,^_)AEjpq&N!Rkek=p\9>+%Hl)\Ar!0hhDWK@"J,_+gfU2Y2HTSG2,pn&trLZ72oW(3+U#5k.Mgp-Oq<P5ui4L>-Mt<]`$L3=lH?N=Op71AHp*1IDp;D)F;opa'%^IYgM#3K'pNkg$BVmQV&n`&BVY?ubXlF29<lK_O/iZ8'm-!'TKg\Z3PI.bgpJ,As,kB\=Z$g/nspS"M$Mptsl)l`?Ic5+.27bi+:%j4`2bP.Vtkq#?PIr&"_lq:-G]iLf#BeaKndEk)H'ZBd/0?n&6$53$XNN)?j#Cp27rrQk6]Hd!#s&BVD;OaV4^h'Z"nj$S4d+Was;%rqYm;^O,M45JM[C_`gRSm2N<SPgdWZr=Oc:5T0F]\a=dZhgOVA56'uW.0tE6#PsY)r:XK)I/WW.s8)CQIeBhGAk_ajX#HZ!o`Ilu%9[MbuL3Vd,r3^C!]$d4^/_n];]maJfp?ce5H2[CdWF<&uV9:p'q')K>^X^f6o@GqD(<2[Ss)qbaI;1h(=\J\RP<Ya)R_e^[o]oks%Hh#d);bV[iqpW<,oB+".VE+Y48[mqs2]j9m^:O@2jr\L?o&d`[F;2']gX2(-XQ0;)31_3fkt!8b<6S5XBr7/eV>KnH*pr&7dn!-7%\`Jrd?MW:!s)pD&p62mon9!"CK2XtfkII3aVerF1WHE6QraVkkINk?FqVH=WZ1$"6Oe/Hugu[Wshtmp[p%7nKr9<b9iT^@+g!b89%:ZJE=[AWk#T(5g+3hAQ!Ish7br;QMukNhqk5+_N3m<O+dT',;$q=47Pq#'[Pn_sMSVlI3jq=OZWEJ<(;0Up;#9#gt,R6[BN'CW]I%nSe;TrS;pHs1%kcq"*7Gm.`!TR]V`*9UiZ!?8WMB?mSalTA+.r2[3C(#i/UW)J^&a<O-tZB/I'-2[5_j8Dq[+CmF]u9i!\Fd6;Q-%q2pk'nME9=(j['@G<](kSIB^Phf['H5NO/C`[S6dmeK%PgtDQPqdEUY:\OQoQV@,$MnT%'/C9@kVQn&q@uU_'Ols_4:J\F-N,=HW%:GXmI`_O_0lBsBYK/&c7TT_MUcTJs'j[W,A7o&g8amQp_l+Yuq:+VphOXp?>`Zn"4%r3`o?o*rmI[Hlg38WR*UOQa]3GhRs+"u[K%[b?H6J#F%7o!nC/jnDj1a++!"Q<!q:WleC)_>Um9p0%*7G)niup\&4eD>*EQa+nYU[SPk[g8@)Uq[@qNIFc:lqq/+Xrjd<!I'=E"%0*a!4.kEn#qc*GLI_'q35P&mJ8)&j%:g;c#e<s?Aj587qr>fb/r2o[o4g]S5qdAT3DL\9pm6('k&,U.*U"^?!J"-DOp!NY2T7,DU%RJjh.42/2I)KYR!r3_6(N'(p3*n<GkN7#\Qq`+BHb8\&HHSA.9HFE<Ug.NMITA<,I:Kb+,@L'5>C`GI-:O=!RLJ?neqlGW=_`lnd%U#!pRMg]F!S8$]o+&BckS^['^llD$t3'WGd^%B^dXd">7BB6]sH$c72Cng+Q\?WS_p*P[1Q"5L1akkOB]sW36L!/n5fW/l_P)I$E%A7FigrqUnF7'"cfrSt'SQ!+W`l!5%I+*Y-pi5bhI]>+56XI)'_TVZ$jQ"7(A]7TKFXP+&BKlXcK[iOu:f%']^_O=Q\'npUQ:RAWU%=P.1O'abu$2&P*+Wj/pH=nt6GRWLZ0Cd]np<6T6=43K,"Ce[*^fK<oK\XKC">OBGWdl?u&]slN!U&W'-Abr\aWp\'p8p*5]>]hQ9%qLnPg%?1%1V2(TV\pe]u)-q*t,FNL8[e^gj,TcFPM"o-ubtn+=Y4b3,@e%&LqsNm_Q%!sr`U=;+n*gj+m)J_CHVSa_N7[fY]5,nR%3q!Q.nUK?Q_nJY<r1L[phR3CM&UIlP:VQ[ir@tbUTk)79P8*i%a:R*&*c,V;B(C&4Yj;&N^>9ZQiTY`FkBf>KjnV*dGC%!ToA)Ud%S8Qs_+7K#If2q]p^@Us0oBn8U(peI8O71odHhSD!W]Q2c/N:7DTA6s2&C\5JR-!WqIfH#,Y-0,CLK_WgdP+qK69$)KG*cgEPb-"8%F[OsF8Cd>N#gcQb+u^jH'nRFsY[-`CP5Y\Hg\6lWj^[;\>j4D[PTM2b[TIBNYhoC__>6^-HF+B\ou7[]8QX&9W[_DekH:Hl.OOpH%W0odF^="6Sm/%7la]h5>s-,i&f`*,[9nRJWa40YN6M\)Ame<%@N="=V9Shl?"<X5k5C<*?R9h_Aok3YpI9)s$B?<i?-X4QN<4"J(%[Xqrt4mdCaaL.hoK_;.K+00/CQ.9+PE.usHZd4W519ND>#+b)MOmDCCY;o/\Xus=SFOkYPLDq8fM<tl[@f'%M^oQDI=i\q@a0b[2%5*@ENNGSNu[2)t*=rp>Zd>.SD[iOtOf$d-koC:X"9'st%Pdnihb.QD#o=QcL`R6SanGU=_V&>3?ZlUhr/Pd2srPfZ:BkbG=\?[3Z%(8uXh35AdLdZJ2saB[r+UsC"/eY0<61[Y-lRf%4_:(PhBPA0j>p+*:Y#!f(00[2"rB`NMGJ`agjlljkh&laf/ZRT?e^taL;1!Jpu%+'Ub65T[_7A:3%ELFjU;/6bYil=Mt:E,I`OIr)$j7JD%:N;_O*jb'19qe`UW=`'#LPL8k-ZgY_)^?8QET8^IAR:jOqEuK0Tl!VS,%><!.*nfP<k.Lc&im1J,inL&^9Tq1#0\-+;7Khiu3-,nc.j'nB`))7,Wc-:U*'7rBWk>?Qsjrj1jIErnHhra._%=!`bPl:qI"[@R5%_@XEMeX<b6\)-;L1N-jf/TK?`c4XJII)&foWZ1NY+A^5mGj<.CKcC8F!_3^_.!!dK,qr61+W&7C!"Ld`+m4Ak^bb;gG]`te:H(8k%B%mes_Eo1:AqBPc*`>@G,:&%TL[i/SXj..Lc`k7Bkp9*=$S.a8iOc@I0uV>P+%d)WM@\B,N"N.2&No*l*aA-hO@.)6-U&-?HmjLj%K#B@hkRb;&CZN="a$)HP_u;d5rqq*[9'PK\#YH0nK(todJ0<u7]*B^!gU7_di'ubI)mSH=;h?U?QlhMfO!fRnI)q^7-gC9.NU3s1%?#O1-gr!q5YCY#Y_oQ'C.QP$dH0CB\".j4;'X5V&fch@[FM@a$Hfn1Jo6A%+hWZhCHa`9ZCsA<[HT\W7rnO@QgI/C8@<#F7ED\YG%C&7WHHk4"&0]9[_%e06](N-o@'l6]$P6]_5#5W9"]sX@+pTR3Oc1b%=5@Ti5+#i(GEHU`C4G/>o_8AEfncl6WDqkq,klXWIs-)p?%)?#$RqDDLK`SP,D#Q9mJoNT1b3T8D^F0jNR:]7dX+TjAGI%nrG4!qY;n=.:IRS:>C1*1`u::`BE=shpWnQ.M1.jjtQ=TD7;I?,]h%mu8,bR5`-Qh&*MfoZY=X#Q6?;oQWKns'o<Q?S9`d&&Tb'T%nS_j:^g(06Zn2/,[Hq5I/.eXRH6@SBUGeli`15U$dr9Zs'/S4)1=(%<e&'crlu`Q*h`D:cEhG+<<(6%BdMB?U47Ohh5JB_lm:O-_1"D%IQ=F]gY_CC]:$69>A:.^qMTP"%7T,jH+:c</RPtN_gV*nNNC*C%]Pd9rs+HkJT8.994]9`h/)p(jrlO?L9o2*SG7(!Ygc</im=i1G_/1FSFej?7P$lu#:es]l2O\F:pPJrK$^?*76]2:/Pj.@1U1IJ]%?1j/&drX`o2m,8/0m4k?qM4A8#9UpaQcIK,T6l#.r:B+oPAN5aB)dsBDQ^]M"V71!X;CVpFr^AK][E!2;ng\Gn[WXD?D".jGSgWg%FSs8LC"1M/V,_^uqY7Up)7/to/T7On\F`[DoX7!QEVo@q\&Vi^oZ8M&hnFU;gpf^71GjNi><NtlO,@AXHi4ha*4jeu;/i0_$EeW`%1&m6m"Pc-sbMQl(q)1=WNGg9'@RKs7qoR*.6_OV7-15-sGbj^&ZeXopkC.n%g^(K=Sho0rjCXd2418'^hkdhQEJ).%K[$K9A&>\H%a=V+H4"B$CT%aZ<1Lk.Ore'$^H]OKLrE`67J$(6)Cd20hSVpL?=M?YY`ZP61n+\?!e2r"#7p/A0G^a\:>b#s*4'(F5CYLXhn]QV^%NZP`lh/<3:TCbW<=+;iLmLNp,_]HitoG]i>0#;I/f\mC-*#O&MS!Z\%YOk-rY(=g(X!d`U*d9e;/-IPYFBT%G>RF^?2nfW^XTGR)%Xak<5T;bCF6AlI@\_MN"__$`!B;#>F_S0k!5NG+U:WVGN\<K3NqTHp/oD_/Lq#-QIcB6J^T00.LgnV'6=#YB;QH"r-C?9,8ng.U`%EsgM]>Qnm),t,X$1[X>ci8R3ggqOT\XbRFWT%KF2HaVe[ONWjeXQT%t454qMLQh=6\Y/rsCAB*'VONW!](`#@[6eX6jGK`f]>p-d%.mT/,G<J^+crs71)Tq;J7[X"Gg4#*(.)lDO%^FVBAh+_3bX>"GBhO0QU68eAh8l_$36gf6[VO2fo]^^pMKa0d<KX>'#Jo;#VIu46%<5dFba>fg4oQV#ur)FZKl#a&`R>u9tYoi=k1(3MDo/)/hEOFTV:q>YX@VgFdFk9<Z]!<-d_k?I18>N,?h!1084aD0fs253)@Q!eP%KD7UWW;*i^]u9c_GA5TZ_!t^1VI`a+Qq]#$*?3lqRMiU.fVjDIBD0qJ7Og9Y5AK7rN4b.4+#3*\XX>6\rEBJUcYJ$^=.=u[QK.mH%U&qs:c)4Y=D3+WM9`&=ep;\lSO($`a_mDX_Bn$Q?rYVO20hhIS5j$,>glJQ+,:i]5$NJS1Btm:M4or4t"!n?YKlqs1eeOWjYeIH<%[i^cOlaU^gch8JHmooZJ[<B$>UYb.?mYnU^+5n+;s7cP.s*V^+,JX-Es1ki<]D_N^NVK]#U>'&3rkj4IDElU3hq1/5OZ;Ii(F[a]%s$F2EIAZEOqWlT:5"`I+s2P';`Nsbq5JDRQR'7Cqrc%aUeqF(BrS+fR!s[$ul;N7&I!YhPjo;R,,W+5Q^ELtSs'c*0=8V:oq]ET3%#p/n)^J]XYh([)f^f-S@RgWQA_t:;"%[\XeXK!`Fq\L)Lg>)chS5GCUmumaGC&#0Trj;oP$\GM$$j)_8$%+cHEk-UT@<LG'3?!^!%%Udg-Ie%bcdoo5F8SNIdX(g/&m/oiNA@J&Km7_^^PBQBJmn,Y-1s=2#Md:/SNSOBt/9aUT;\pt":U>+p\59GDKSGsS6;D\<$23`Z%]p-6+UCIp]mR]Gur2W;#AV`$u9d0nP^uEI>)EN'G)Ij_1[N[N`ZbT`qGLMf=gQcW!Vk0s^]*2QFd2!h<fn7k$]>e,7V-2\Mg_p.Q%])p><?Kt4d[`E`!WCrJqf3sotmA<H0dCVn,SC`Re)%afMZ4:YmLsgB[PHmA'hbD1X[Hr?^9]n45Bs4K,*<IM6IbOigaW\@OFP&*"%6">u5nR;`a8k6,oTO+DJ)_M<'#U$kr!s.nXD>oQ@B<*();X`$P2DQ:sWS$in+$+?o6#"Htlq?LS4T_R0;*FaQ,^>D`FUCm+YS?fU%JiZ>+7kHjKljXnqdbVb)%p[RiQ71FPY=@Zd@29?P$m=IcA,c7Oi$iMoE$@!]"L?#V49(FcBD!se0\3cjCT;D5Cic#?/Dg>fmUf2=%1U[MS`q3_WiS',9O:jXPg(l)SFkTO@@r_qPRX%J$-f,mk2OD_Lg>Oj4`Ak^14c@bK?B*+Z6YbXYAeu5R^0sW!Z2L8Y<pU'NRs-E^%i>^DEm28DDA;YAoYV6/#-2nW!hsDTb&T(p`F_(t=\<L%-.k(<M_???@)kVY>BZ!LZkWV;nW]&kA`o'^>(uq]XO@9lbXChY94^Nl2%/IUQO=m%EGe.r26jS-PO?JheJgG5I'CsJ#R\r+`Y+<$U&Rbd61J0c:Hg=,X0rpjkd1dAJc`0G$JG6KM?hI0QB&Q76/n#)R!d4B#D%aVl9A32mL+6"$)I4snrSkc+?]VWe00V?,S0SWp#Q]9@aO`l186jAbMXG"Q:$j"ZPb%e-d1g,jpL[/%+H@cEuar:OGEotW7.rCjb9%*5mKr/04U]4qKZZ*sST$q6`Jpq#cb[%"s3kA%R9I:aH,T&`7q/LXB"kMo=VM%[;KL7SQ:sdQ[+mT6tMlK+Oc6DmhTO=14%J!?#`-%Dj^)&!bJb\/a7#fKQ>=F&:=/pf#,;+FC9]:2sSCD[e@7tj(`O+JXD"/5m$a2,B0F=rSTd\S44Nrhgfn>6(7LP*)kuB!QccQD2eeD%-BUp>e'=-GL2=\WV<pj8$=:(YX8$Q;g?W_jA4nT9Y(t7:[K,=hCicJpoE"bt^YgtD?b$Fp&FE0"!HY..S_"))JFGGl9g-Q'0F"s^%+2bT,`4;%A^Kh5B_#E$qN)bkA:t6B!Q.r&3gW_]3M0MQ%0W$T/V=MGXUc:c8#n0E:]O"OB_28jtA<Y<Jg'0sI>qG"fgD2_ATP5nt%c7uaB?urV*0*@-.]*M-]3-3cEK8IVMeY[9'U/tNY`IkI1."$GQ-5$f)R5b6L.o_3[SJ*L3>c5"NS@ab06GgSr`Pa*>?gLlAF)4?$%'rUQ^dqg&/rA\oF$broYkbc2\_/)T[*(Im$1n2O?M]!GA3[elJTr-[hCqMDg]u'p\/GdJ@\;Le4%Nd*Q)"g\S1`p6)cdZt'?u\bN%1nlRp"_+OdfJ?Q_IDru!NXZ)ClH3=nJ<^9^,m+HDK$89^#m;lZ,ak`BNHNUf,5-c$Iq'#*UY*=ACQ!CJ;M:C>`G8D3UMN[cD7N6t%VIiGmBn3\3*^'7Q`?g/M@d-Y'9iQEo2B$CVrQl&m:Qp0hq]VOe@ON6%`:3$'EHpZ>'Y>i:@;K[=Zm$_/XLsKrT$hq**B\1-ikS2g%27^O;gjYHt7$Y"Y>!&@j:VF;8:hRr<[R.+?:b1qBp24c+4fL#4l9!O4E_H_d"8j3u%QECpT_e_%*/B/C\0c'4*]BQ+L@B*i>DFdC%&<WDS68_nT"H#qa_s8aO)ke=tm`G0-aGp@@#)$P3mFM8Zl&m>GYaD,TD<\o;#jhjI*!A(A5aVr&Z:"#Mgb2_>UB3j=\LfjlPcPl8%KLU+:->O>:EGWmHLp9YI8A<_$'k;#hb5p#0`=+'=DRtHf*aE(81cI@Dbd+NsBl"4tP-V/UOID-0[V!a2o3nSX[TTG0:aAi*)']\5%-"Br>ks>ABl1!;*UaL[Nn7;7K,_lkEi-cgqDO?4GQ5FbsN,\N*V;7"/GmalqkcYhX*Q8;41V_a"R@cQlc!#8_U7$uq@F?%>EJC\!%<s`SQ%+&&*rWk5hU\knj!>>tDim!i6#eZJ*Ao;Vc.+8\V2CV7k.8?3MdS?5SN:q"fEGMb49*@Q^>C(/#q5#NjDS,WUg'NQ[S&hZ0%L-_IN"p3I46+YhC)50B2MdZu$abY8L+EWg5S/CV=36t\N5b6I[=1mmbo3PA<]NL*u#h9>&d7se#%$AJB2#X\Kpr6i#ab_r>Y`68s%CDr88G3mR[3Z=+s"-Mn(:[Lq#9Pd!4B)K0q`^.M3[W<g$<!QtIElP`3Bl$9_@E(Eum%dkgn%u0EX6hV@N2rqs>R8=`4Z:ndS8JJ`%agj$4V*\LS_t>^3(D"-p[#]d3@d>:Up^88"Jh/OXJd?8tXm_Epl3cheRndp473dHDU*,l(!Ssk!g6l@e,.%M&]98Yt'71JV")gQ^%3+[g^dI_(>@l-22J/U\USqFn21DdsOd*tDVkP*JO)QL1j^jLg(\&D?>;JC!;0*bjHBaHYdS9O:TmN&Ak\58:ap#*$B/%e.9(0fm:%>a\kPa-*0$J<#u+(tMhJ5lo:>A/P[F%Y6lF'H7!4F>5mu$p,SE6-ORh+EV*<,Eu3iFlVd<6g'@t)sA&F08n7!2d$>AN92aV$tkaZ%UiG>DkOGjSa,eTpOrQVC&J`$9$B<HA&,V^&-$b4#!mb(;?:.?=esP8."kK_V.]0n\HK%H$Q)Hl@nmg)5YjV\m3]IJHEJ@M<X?DH`%()8;Q(9WPZb2M4XT7`gmh%),oV#]R#3K\(*NS)^`N*Ws1):5n4+'X="0uFi]3s$?5jt-<Yj7M81m6OD?+H/iD11KWMR$71%1gF.7%J9N\X>K&#XITVTVVJ6ae)F7R[G/"OT*n$]<$lU&^,;Q6]0fUIHJfWdlH)E!WAcKa+WC:JZ1>8P1$g(TGkDY:/L1b.K&,QR.eE%P"%"h*=D+c*l+GE^:9KGrl-GXABY$oGWTm>8[9f:bRNcF3Pr"-e[&m0aQo2,7g#WRD6>)mj=aGK#<*.6&G@3D6ZD5a4SGr>GleY3mmX%P+P]1RiD?P?6"?cG&.^po9^q&9IUNa']VDSOA-k?i=?E5L1PTe1<6QHqUA'MJ*n&V/9h=Z+Dm-"CqL2=Ks(a9*d=u-bBaS@\T7l2%@hr=,a19Gl!M"h>Pp,u7$oFPL?s)2":;ojmQ9[%N,8ad<P#HK1ZP1MrA##)],CL(J'cq?m\>&J[Gk\#Lda=B50:/L%JK5;R*J[4I%j38p@ar[<C9>Z"E.rI89<"9T<[V5$(@\H$uj7j$+#<gIN.V#f(NH"FZRBj=WgWi70NLQT),7bUg-Himu1IFl='K(Xcmq1IFke[rc%LG[aj^mUV&,L&=+lJ_/1:a%__OXh/B!?I48gf-j#e70UY5#<3B@@i@BD8BIb\%rg<Yoq#Qg$c>[Q!Ua_$jaWWf14cbc<(q9b:q6U%H?)!`[#hM]cpJ(?(7]iQM.PWEU9^&qJfcZ%-RM[rC@=9b;/r<,Xpn6QU[[/LdD`m^%oMTaic,hW.XLHeY1U:5)hgp.gdc\&-5mZR%-/i/L^N.HXjLYlP!QWC&21..2d3c&5.Zrg&ZQ@ue8IeqGf/oT'#]Djfdl7qS"pjd+_ir,8GU9mG\Z;p=p-@6BNCrke\am[U*1g81%G\q-W/+tIr8)U1QL]S)[pYY0A@dmIgO4HbO1I\Ok3]oMMUs0oc!IU#7OQ#eb.ug-$H[bh*[XZOYD\=igH&3/W_#d=0I2Yb]8XI4c%pDU18QaI,+MIW00Y$]6U8-:(^`$CY,#P$Lk0Bm6"(GZ]rW_a(h$e?tj9>27A"FRMF[?KQ8kSjRRe'qZBBH3D&6\9buR;$ZO!Iki?%M-CDj-+8,d)dO`)=_`VE>r7:Y3$o3[JfVr(5f#3Bl*ZU<2`M-.ZB/Zk*1#QQ_8DC*QH/#.LM/-j?*E8E's(;8M!K$[CHf-'jrmT^%.C!Xu?Z''59pV1Z+a`]!Bk[F)ckQhmg(FMh9//oX:+Vh;ZVKRZ(l2=GZ#BjBOc=DP7qZq7ZH&>(`]7QUmVKIu"EKnlaso0ap!/Nl%E&%,?@FeusZm"mMC"e]<Xq\,J:iHRLTpFk<R;mk;?Q!(cmrQ#JU1+.4l]jufh.VIi+o&L#.<mlH>'P:rhW[*+k<W;r7ht=_)$Uje%f.'[<3==W$W])tId=FQ6AH[<98SABn*+c!1Lt9tR$N9KG:^i:J`JiE#,:N[[)M[,fNuG?8m.e(X3n``:0@XOrkQcGDGA3K(AQ*)t%]WeTUq$*%C05%ite;RHG7p:f6l=06:2p-[%&/AWdIkjR60G+d;0/'lGpF*+,"AZL)i7ud+@,,K^l1>iKcEs2qGnf)58@7Hq+>\^L%kJ.70/Xee%#g,MI;!/OK/&&p.U+8TcdYi$!^p_i<>Ds%G?EiV^+5k/C(?*9]DKX&!84j"e)5)nM$Let!*a5.n&Ht]]:(FEuh]sWI%RdaJLhIr'\Bie@N9PfV#_EYQ-4Gm&!RR`GM[okBp[>8_V;LohUHA!>(6Rj=B/^KEY(UtO%=c;h%<#)X^h5r**Pfl!H:tqd\Pnc-u%oP$'3SY]jn08E.'ap8c=\3Ge.Llmku-5a2f5b[)(5(n(g'A#42RQbnBn:krRE=@Qk$J\h0<Af,6DT3^rM&nE68M>_29p.YR<?O3K%I2Fo=m[P'1%VQn+-Jq</Fsrkc[cQHkWdZ[$0T;k1>Vk#L&<S1NeLJh$_)DK]TUGN[O1OM^\nK3+c^Ht]*l3OL"=aL0UM?`4NZ(o=%d19DkLiUm#f+;p3QR.H"<IdV`6R9_iKhaJo'ga,VKOiHDa)FgfLO8QM5aRl\`-<1G"AZQ"!sTqOVFR9^Nc&0>>#i:NHC?1>+d3$-%>oHJ#=q\lK'k3jqG9-YQ*VNa^6]dJZCXVePf.70l-j\4a]n<!2/(-j=7qK5KmA2MBZj@HghmMWP1i2=d,k_YejBG!Q!0M1<j)sb!%->5q4!NC?d]Q]i6"O%)5!?6f2l?/YF/g)@j\D4oQZQS'+>7m5/"FL"iCsV[RMS+S_nCg:rN@*g8o4A2s(U2j]5!d(.)+_qW;%5%8%">r]GmZ7Y@c'/R2aC&6#)eM6H"*)cW0`o&,->VgK:W&e:KM\@-A?[r'9er$oC#"]2mW$'3Jl,$34b@oKANZj5D:1E,YS?>OSVJC9%d$_,(+.NWfR)-/1Y)=<@&A\q;D?S:um4+Wf89#b(OiC[kUC]IA6LK6*6XD5Ren#Q)CcK&kCd>WT;0O#0oG'P0SFmMrlVK#G]OZ%0%+V['oR8rbu:+BilYI6mP%4O*cWYcGE435YlkV]_1E&Y;WC<H;[-PZ$j=:?@tdM5f[hIB'$QI&OF#7M[EQpg:AVHh2S!s*^],r=-D%GoHE7?-S"GM!`$Y`M5-6F'KL\iH[)3/D>9FQ'WELS\F@6V5S8C[-k!]]R?#I8$p#X10kIVJFWf3W)-[J/Rdj^.8oF*h6m<Q55C;+%7hrPK7f7NT9+I.iA-ae`O=P9O@&o!-$_^q+o7o#PHasU22Y]NqY:7:!"k8'SJFL\eP:L=idfO4`;3uJ#Nbo$TOBbn&"$%&fL74-(%!t0%7!JmL57U24="(*6ObV2^-K9BRM?^\JjpECf^L`\';lOp><Y,fdNcrEu>64V+`&dgQ@A)8*@ZJ<IhSB.1-Rm)4+-+b[c)+-;l%"Tdo>p63b;^o-25=;b*DnWb8]8GZUh%Z;m%Uo6/,f_n'sV<,]0'9HT;ieST.-TmDC^Ts5]7o9u;0>]QBm-030<T>B?fHI)t*"pRX%_G$i2OYK&HB-(=*q2^#LF.KLlr>7<a:apZ.kKXa=r\/,0KY!SMaqbiWoNo,oT]I>s#Gp@:+>V<r4Yqr_]>UK*%Ye$p8nnpSaJ8As%mNYtJI$$P%Q3H.jpn;^eFO(<DV]tedG0r3&>LlH%L.aI:4hF7EaK:AK\RA8MO,hfY3NR77f!FD@b!fesqGqiY7-d.3gHX][,g;2<%O',jM2j:HY@Qi@Ti0K(CNPH0K^9WtfpYbsF9aeN6mYD:M`!C5o?jHM#f%h*sB-R$XIYYNUW=s;T*o^Ph;WP2T0`ri9>6Y3K-QkY\%-NS#bpEM6LQgQk1dR3SH_L2V1@k%!4i;M#YZGi.S1B?hsqiU;=(l1_``%blSbELE93^ZN\G(_&ZMs>8$V&]1EU]DIB=q$0;#j/8=%Mn`n$pQeUC$\YZ3?i)s9T"@AKiB<&IAY'C"gmO&1UMRcS\DRiW[rmUe=hC%ohEGa%Cmu\8fg]LF6fRg$VqK-(Ahub(=\Z=jDJmh;%^Vh'tHB6k&(*7Vh*AVGb`(u&?F&rDe<4'V<TQ5%YJN*nJ(cJSeVBY')=2nkg"*5.!JkRAD>7>9nB?bhd5q)3[GKNhq9'*,4,fck$%N$H&9HG5Nd\4kR,aUQ8sD6GZ5L%>$_L;>>g3J@F*@U,'D%M/=!@4`PfP%obZEd^9*+7:i$WodnO>fhVCT:m!NLj;7ceKHGs&_l:H%"pDN_8Vg3m(t8g'Su#)+_LZ?ohh2n,$n2'i+GbM\Jap:4/d:d+;c2(_LEo#lgPDsV%)us<Emu3GGVKc'AKXd.JHl>$i/_=sACWB8%EuY2Y/OhJo%jJF4#"<DX=-BgB&>2*@=#(K<2O)P;MUKD00*\ff[QZhc0`F0TJ]h8Y2AM!uGsZQpP3NrDhX#MO0[Z$BI7_`,EpE>Y%8]W#*&X;I1*#&Z@&8(DH;ZY.c2^83+M)g"*9g&r\K]7i4WajY,2`n;'cDBbM6R2La@q`o"0!QJQ*oPRPF`e#TQuET\)T_,OD_e;S%"5LbZ"`Z5!=ItQ@RhG:BW>n2Ik@s'-]Sq2jN9mk&nXV0/:6>Zf.!7Ol!c$Z;B*O_.6D7m]7AH3/-4:f6VUDgta+UfhO!f$n/j]im%21h&n"E0]^$hn13k(^fSP;n+=@GpKc\iSm]=9\p)UHo0hmt#jY>E,<'Rrl0$*N,V"S.]2\Jhe4lP^u,2H-oP4%Y"2?_@BmGa(Td@%M8i:2ZQ]XM-nN.V#4+O`WOS(@X4k,fV4m:5B>WbYaL9l<_:^=q0_a4I?[>\%Q>H;s%.*TkdSW8kp/`*!_Y6UX"-#bnLtmT@5_gN8%"hnmfWm2OnLjc/'dM,ru_HG80qPn"Ao[__@d+p/nGi.:"AXLm"7:sWhmY@[KSKds\fFWN4OXDg;\scjk+6\.3:]!\6ePACq&oP#L%rNk7nq!H]%?GH=7m8*3>T=oXJbnn-?qt1=:HW=4F"BXjo9Q*I.AFP:OPlLfa<2Um<Oq]7.*1i3ZIqb_Ccp,Oo#Z)[=8EkR,At5$)%GhEJ">!(leGWioJFKtG+N**q6>jg=@bn_"m&RF'9QbsU7*3l=mCWW>I>m4"75"\9g8qq"a^g:J<g_M>e+S7q!(_/PB3R"Sca[DN/%6e[mt,="dp;<%6@^dIuFW6C\RKs`HV.O(%U1dIa6$6)]n92g4mS#;^,n0@O=r&YP5+\"f)jT^A4%5!7oBep$H21LDR-_P9%/6rg$%U9:2C4V6ha"sNdmA_INH6,ARi%!SnK#TF)O'XMF>:*L!shmpkoa^Dp;e4gHiAL7JI8/U;tL4FlR(#.6`g,Qb+&@nqp!BFCl`pSRM%:'/G1Z70$*<#ou=+H!9aQQF8Pe@uNJ6#])*C:$jC+#Hdb*X_2+6@d[BN(=:^E>Ns-P808cB*b953NGh_+tFL8aq1NAh)])X`\:Rg%dpi`lC?VL+X=tmj$%euq-g,[CFQ.bZ4=hNS_bkf8N'A"'$W8Vg4,^B_HQ!8XRBYJVl,.qhdpO!\^--8]iA9<Fp4sEeJb21*U<oSg%61>%EX3uVp3CLFD0$-.7VjI>L\bb:lJg)4&dI_i$G#I[SVBI@"$U"XjJX$.1?S^NMkmd-_,C2;I-m1q"rNm<M'j40F&(\BGElM:9%K#U5:4SB0s)2?9Rik?7!AIkAHmX-.mCn3r*'Sis?W([/O?m4(2RC&UI[Uc.l_mA7#&TF=*kg\TC,0IpLAUCRd'Gk8P*""iV1`6cp%PQO/Y-t-!)iYSXf%gG>-:K<"#"K9kt%<ad,p$aO!'k[I7W'pdF*D]?@;rpa#YXY<uZH0,0`YT"92)KPID#CnZJlKuP`bFkf_dh&.%*D&k@AtHDNT6D^jd\3UmmA!9PXD<(Sm"MZSBPWtKB+n'QL'?r)N6R"HK,5,L=>chGaFm%^7.O<XXpX2nW.$;UK"1mW6<c'q%RP&%%\sh2(,&XVeN'Mk2j(?Z#B_&:K0\T>_(Cq\hj&KVA"6=.RF_s-m`=3h*OjmK1o%>'m]L*.EMd,g_5PRmKdY*6\P;[@m<,Rq9Ej]:0%2+=o_.Ni?n`/&p7#r7D0=Z.\9QBah*(YVm<R:_Pti=&oL4*R,Cc&;d[h5cKfGV#9nW1!k8+Vr*(Kl-9Nnj9K>CD`][\*ZZU>U4.K%bbBYh7Wm0,W$'"^=iT855%uDPP#R@eZSd.o,Ag)IB9]E(?Ak/8,4n",l2q8(.sjMr2b!s?&s/n;9Z'4O3c$XEO+jE,Y*?j``?M,I%)2hRtOE/I,;kWiOmY-6A_i/$-Ddl0USt2?rA8ILO.e9)<VO8,O-eA/F?6.6X_oUX<<=G-,.NsA:L?'C9%V0#Z4Ods*DRf_.q-)]7%9`:[q=P`.mKK*RAV,IC21]M.V;c2J]=Xbd2LJCbHF(?>:SO74h8nNiKNK8bb2<NL6"gH0AV)iE?C^6>JhYjCjo+Mc.mcp2A>@>]K%oqGBsQ_f<&P/?GB^CQRr+&\eF*^/hDVWNN=C+1S8"hH:,%?O%Q^Q@baGUuH&9`#+e/o%PV$\A&<h%.Ck&/M3dmJ7IdmNB[A1bV6l%%]+rr;[.t/FR"c<@<2b4T^6*/?<r;r5nk[_JK^Ja"7fnpl'J2SOsC-WbBX`R'_M*33R%8/a<ek[LI1'X42ANi_<t"Fo]317@3&[3%7</e1F3qb@Z9c!8$J2]N#T44,1lA$3U.+i+8Z>2t!^fadiGEt?QO=bU4C&A%lGhXG#SbW!0=Np+bCIRc>o)@,\_eVpKA#Zm"oM4F%LXMJT##OHX##0ASQWFS<'a&6[;:]8)dF20`l(*W-mR[QD6=VHR<Yj?hKbtW.8W/k$$+j*;H85X:ojrFmhjn/kAaNq0nh?iB])j'R%lrjh6Aj:blUi9C]B6>TOJOnCqEJ(;#DP']76m<5CJ.N2;6E)*2.Xg12=c;s(Jk8@1kuD4VU*hTaffAV),/61DoGe@EE."?!O85HO%Z&sQ@K^XAcb:mp`]0qUWf;B0IFBp%s\Vn_Aj,5R3"9q;\9.,"E&fsDEPh`5.+BJ#YcG%36`km?QnPB/O6^T#WT=f"3:bjVY%##o:%Tn"St/3ZPhO\2+hFTEU/I3N=S%[#-%GOZYrS;6fiJf4-c<U%SD\SKb`Md0S-fXtV0V=B2Q1qD58B5CF0TbEq;,DNR6MNiKCF;[?a%%K[hqO;VX`N1p^qC:Kcd=cS.%$:JK2af6E;jkM.%Z,9uj8s.Z#GF%<\/RA)-V#n-ihGaU!=<nVG5$<$QU]a^*>bj'WMk$$Mr.(Rq%;at"sMfW4!^q@8\=PP1^&VqnZ4`[WD)2>9!/?^er?EsS5o+t6!$h&$(Lt$T]6U<3FZe(Z3'ucqq/G[;c0M09c.D7PK*HKCP6+1a/%26U:UWZ\$_bptTXVRoO22VmOo]95G5<6@!&#UMA^nr-F$,A37tFQ*ce`PVBb]4#bS#Rq]Pfk?s(bXrl;;a^[qFlW^*QsspuQ"<r1%<n3c1+RDaCW'Y;9pV4.VEk!?m!h0=:7$1M4_@H\URQs,W"bcAnJQR&V1sP$[1^J(UMQJe$.JV=M5oPT&.e\^F$$"K@GR3mJnNb&Z%'fZOMR$XLdK1a87rl]I$HFcI`:JhP\:)^N\,XD:&;FS-bKmkk+^KbR\"JCEPOIfQ#H-%RmUh6q%<%b$^QQh2H6M7;;JGQ1'\O=t_%B::\uL;JL.PmuScKMP_\%Ui-scQ8h_JLm@fWl-SP##KnQ]g@=[!l_h;4!X45leSAG,k3#D$7V:cds\MH"_Eru7I2N]1*WKt$>6@c%OYWB51tD2*%jnEN2Ad^".#GjZ59S<!P^Hg]@AoFY<66Oahl^3dib8O?BrN)D1mHgE&Pk;"?Ic_e-)8m0fda)9Y*+b%G,]"XN/b,J%U2")I-HuqM6D8f_J0Aj%-@^;/DgJ?8(#P#Uj1lHjTQO.ri7sj6`FCocOH??*P%7*kr)Lom7PSl_ogmm>JcNK.Rf_C0IHC>2ea+H6%PO)m@GD4mcX9C5F`U=p7\4-k!Wl#KERpZLIiX\0Q]Q_SWL@YpJEj&g3e\.30J5>3W8]B3]U-gug[u5=:+>AW&/sZsl:"p/oA\-7i%EIm<R4CM2i&KX?U"NgG$Cr48&(Z$%%(X^#,J_?fG#i8E(.gA;E2PdJ*H9#^LT+P([+rEhj!U:Vm4$aNYg*\&s\=MP#n1ac\LcZgl%*m8=G3IbKL\'sT\L5b`O%Hg6D!/Z<V7-4Q&B!=FQ)i/3RC?=qUDPDo*ND5MK0r`@_K.n;(+XZ,uKnD)FH'Au)_a+4@XgQ;DR_b0*%M(#-Y%t_/Hj5U0aW]4`Z8Q*bt.Hd1>>S=D%EH^5pi!i,ln;R4Hksu[JT0fgX/MV,_C4ZR6L<_>0%MCOEAQKda&^&Dke>:)Pd!1e4%qf&s*0*D_?IR*iPLe*#*OV]p#U_46>!L\H,gJUA$(BHfi5c=[A=e<,.0KpCU/4<\60^d.#'!_0"N[U*Wbd-3_K^UbcN6q=Y>b3l=%4FW"V76D[+Z\i4;`>;:U;3P5i6'R.R4Fi:9Ee-0.>Mer$8tS\Nidi$`a[\J=lbOEj!Uk&%JD7<O!D[R3Y*UEmVJkW;"pkFI3?AJ0%WdiKuULP/((dr2eX;f'j&A9[]4!&F&$eQE20s'dG<gP9AX)pXDXTV;TbfWB5R0@mr`s;cI[`o0&$5>JA<<'tDhL8%LepZMBd<@;[%&SIsS.GU7lT]b0j[0'g^U5>#?W"b)7e'hHS@`!HQ&MHSY@2D!S;j>S@I$"_$d,QGHIAgPClgO$eXHWpAF[cePTL^O@2^A$9#b+Y"%d471>@GB`CG$PRK]'4YH$jEcr&KBl8SK7<".==^_SsNnpfas6XLVm[o!?,8ZaCBC>c&difmsugjE;Qr-8B:IHWZMLEVOrR!eC"Nu%=dY\;\gLP2@"iV^&\?ssF1?cfn/I.[+BhZ.3l%dVjs?53laX"q)Q&U8)68@f"O*PBT]`Yi4d,8NVssh^6WH)UVSY\KglOA?[MA$E%'CahX>.?4[5H6cT'f/c\`Ls-aq4qsl(-N'b)/ZC\7)FR!40r[f,,Kt&4[QHA.Z4Lb$GbUY)0#k<UNS?99*=,s37;O#;7N?Hp>HCg%q$+^7H)T66+6a,%8<QK]CO+LVqo[:'&#a.rIJ8LVd2tBp7o41)lDm^1q;V(::ESGBq1hc'rY&.KJ+;so2dbit+!:$B='r[fnb&s/%5.+$g?$G-(oOkX_s*rgO!1`q)K?S`SAf)$0e]S\X/f&)O&'^<X+VAdgjhd2aA,lTdS^;Ec'URK3G]$0'?H:?F8r<b5'6GjCk?6q:%c@lR>fA46QYa?7Y45o<G24't^%\&CF\CEjh`HNd@-e)C]dI'b*(="uC,'PF?G[2QVemiJVg!c"=&Lb<IL86B%c3ml0P+bf+)_Dj0%OGEBYR,#N08;Fk6@(BnoZ!]*S&'0TXb,rXF>0faM2,JZ&.CVXQcK,+l>Dm79Y)m\)kFt"60)VXWG:9->k549Y-l32RK",fj>fO6g%]&;Yd5GR=hK#r_9,+![Ca[N$TrUUVk@E^m\CQ)MOfMe7ULtj?DaUO?Tn,4.GQaF.QkdWS[Yos/g(Y<E8?=W"R7(+Ml"c\Gi`WCcC%TQ+Cs#p8,ZN#NY,)]6%G@e@[ZAN!c'7`C(A?T]]mS)kL0-k/jTCq<pV]9OXZc$`jtEQ:++%qC/Zjjk.fDNl>**%pNk.&[4WG6Feo%)%7>XXC@][Kfc0dBE<fKWg?YVODou%-3=J)/.Xd=!XEpp+kde<(M/b.3C`Z3fQTBI!X'=se%C:J`=S=f$NYHs[_)_#6=kbGIE'$m%>qsBM^Vq+GTc*('\8`>kBCK-d@)4r2ls!N&65Tk!/b_B%ZCOjG&(a/Nqj+jcUY$4VG,L4gZ#?$Z7`7BlTff]!mhc2A1I#lNJZ-/]%d=AsM]YcTFd'mU:0U@)Q^0R<_'#:t[a$:G`i*5Wjn7A/ADadoR"4Vof/YI$XX@))]BB38P$_.b<HqRJ9c`9A(1nJ]*Q[:Okp(i_u%bkpo5;rm)MEJ8\M<50E/[peb/i9bR2d2DBg1b>MS]7gar54(VI`Eb<U8rXu]qPdu\K(38T7SYK)iL$]m6+U>UHX#5i\)\N=>fXCo%?3pf0%!)g#;4(.1EncmV@0>W"3BkJ$jL0>W?\$o5NW;^-0Q)G2!!*$T`,0Qk=!6:mFr/a:KNigg"B)dmnIUkN8D836>:,N"\`%D!%00hlhU"^2*.a8E?gD'u&BNr!V_),e<>8GEU*6>S04EAHn`ocq(B3a3V766!8$dc2QKRIGm&C.H).o]_tl`9Mp.>q$Fhcnp([eN#h%P.[>;!K.bM[Z"lB78ABA[Ar6VN+Z@"49h<-4O9rFFu3F%;<S+.#.(-HZq=`ZB&@b5b4^8N/3K"doYpelF2%d^7F_L'G6DC`+:*_b%dS=U[El\R+2IIU.`0S5!TqubW0dc5\].177qI^r'i];aFGA,]bqK$I8-i@.K6ECR9/LtlK#,XFHKV`*4SA8o;71MC;Y\R*uX]],E%+G*<*WIQASg?'`fj4*'X/h"0T331tN2eXdnM;`UdbZ]D_"TFRhO700_4<`9"U^kc!!3G8`7BqX+lLrgC>V0^LYT!aLD*%k['k"EY%N]RtQDQI$[ZEa-/<%VKs]-(aOc//XYE<`Fs-3MLIE,$Oh(p.bE>5TF[iJ^[hKLZRj[0VaXrsjk=L2s!CXq5>6o0&#k#i?f\".p@g%UL&N#6KKEBVdn1"nIDTCTP8tE!Z7C_1+bhO\60'671S<LH/m=RDcC\1V.JAt;)]sVOpE%qP#;QFZ4P>p9Nn)6U38=8BrV'k<ZR;<%\<:+;-U:jGR?a4"+>$G9>MFD0pl7fHB/nVX"NhKnZrnHb^nSf0d]S[F9+a*E&1unZ-9=$pD(1p81CPjeA6AohAD=7Jp^Jn2dI2<c%@F-4`ONSso"+tc&+OD0Ws(,I\cl0Y3%mp?(f]Da_I(-Se[ao6dfgAIT2Y\hfs'o<<B+Ms3YFoNZT/O[mH1hg76K$-1'Q[p:=mSfN%6j;d*1*!PpCs^j-NW0DI$fkE+$QF*Z:f6'RS6Z1)]#'q*XR$cCDAH5*F^r[.:UrRUW!HSd>mAe0O"'mV1qSuiGm-#d,`FY,/1T4Y%G6Q3,Hp=CM"t`)PQ`PJQNs1gsXR$V=/.*_T<"VVcrE%L;Gu4D8$"#T(!AB@O*h7AJb;u,`_.=E-`-#S5U,X2D8jLQ@1kN,9GC&7D%,78*eUiWcm3M9s:VO>X$">,P^.JRDnQMgq&'aC[jb8r3h:#u^e(?M+2(("e[W)[DFBN[BO>J!4f"^3&\JfInDR"Z`'j3#f+0%[>5%[PkAn![8#n(lU$LW[oCuSKMQE=j/17O[ufCLutce4-e'CDMi4+=^bj;$`<:Lcu9"7$TC_H=,=/$'*G6Z!+h9._g58?a[5D8`YiDK%=_oKW%14pp5R+GJ.*?#W/1T`g9/_-l-ARaqd5"Ab'j8S$kb)Q2g$AaB^l_&"=U7<bT\8D]3MFM\%7?CpTZCT&Q/F2H2Gsn@L,ibb%"t^s.OUO!Xg(:Q[&E7G0P/<>X"C;B7=bQbt!s:b'^F'$4#sYl.%kQXKMjJ)^H7WOjbW`U;QkA!h;$b4&7H++f0S\dVUo"'66B6cN%!Eg)OZ&ie;)%KKq#0S)u:Va6bf?8lfT^iCK2SPf7@lMY`@iI=]\i+Hmq\j86Zg\5^gsucj<fJ`oL5epX9;XUb/928edS2@(Z)N!+%G2pU%0`(#92\p89e?Rtk)bVYZXTSM:'ZE?>2`@r)YNK]V=JS%J*F&el?Yof_9+#V"$lb[.5W/j`X:RW;WCnrXVG&+6kmSM(XDfKL%#W<G#'pT'W=Mgbl^qnhuCS2#+e6ukW_t7mX'bpY_OO>"(<a`2?>Ynr+E(p9<e6)]"3RI36VomJ(j8q3)&Z;D+$Yh6M%)q<G2&:0T%KqB>B(=T(P7A.Zcbqn!p6B,P-N#A5t)G@_@H?'u^QE]rP?(O>lEIMIH#A>[V7kq7KNTE1bJ3B[IVB"62JJu_u-6f#cC+LfEo.t26%7k2p0@:Ml;Z<k>dK#5Za/(drjY551HC+S/*/8s7PZ#oq!0R&,.AOoK&a`1hTj&+IP=5mtdFaD&e"en?Re0u6PJ2_":AY@&;pQW7]%SNp[dMu$;kN9*p3>p*Ws*``oD!+XuqiHl$H=?<<Y5iIg0GRh^5cB,;Hq.p:Flq3ig&:h$A%O;9fhfuEq',!nun7&<YYAC^N&;XV@%7Z3hj;qD(%('NUp3EBt70<UsW;1RKB"Xo])Zf:rPgo'S^N`SKNHt9+h##[!Zh/n^I\q:a.--ni]M^=.=&dr%]*FFg>MsjJm:EZnb%'nO!F#DM^?O?,c\5r=XGKb0^`#7(]j=?=UH9G%]QhC!Qd'1=At(u^_^,*l/&0=!s`Eh;ci1INcWlD&0K=FQ#0(^RAl33_a=LfF_X%NK"LM.*9UN+dR*^5Ra.p@WBFfBEB?CFZ%gH"!JG@+WSc@67f_`^lK$<Yn65+.Lm'6.:H63#pYa(Cu10ab;*b@T*$;R"9oI`(pP1f%Z>A-E)qp;R,F/K+)*;9F1;a],/qFVXp)ZplAL/%`mN28A)'i6CO*7o2M<.U9G'&hu'KA*cS6-=?>mQtQaG^g,Ca((L]L%GYNQHj)%&k`:Lm6HLSJW3u20X22A_S1/[=CLg)*\ajT<`<1m@:DNul5q^b+:p1O?t)]8U%Sd@<^`F2!/fl`=BXiQYop:%isZXFNWs`[!/ac^%"G2Q^7D"31T7LJ%-``RC'T:g(gopl/(4"3Ed9S\-/<c\0%]t,8lB&]>'?fk*kS$]BM2Lm1XHa[Q71Ob1&N)i4cS2UrREg[N0Iqc=%I'CQp9^GN05/Y<:V:2_lS64!t)ukp3MhHBSE5m_<<S:9$'+9]d:Q?)]$>oVq:2JY_#TP1WV]pq*^r.GsI4_Yog+]dV8820,'?dL[%d94LrK4`"$h&.T+M+u&'$(+hR;rLoq`*snn?#YOT7D??#h`=F^pe'4i!>CrkGC[>XM.LBp80F`J_kF"k(5IaC*_n,J'20s6<8Ra(%<YW:Tl#@dnn6<;U0KkX<^2[V9KTOs.M1p%_HElMKlK,3uKbI*'<3a5q`OVDA*&t2GE*GB``%k(O<H'TnQbsug"".-&;6OqJEA`K6%""0D86L^)dUp)p?aOj6b6\GoV(kE=C^gp1Z!u@VEp2U<N$R+Z+7FH^2KB+_AM=$B[8%CsC"mp7kf;V+S@M)'\130'FSfhLq@8=OB%qV&O@:AH(.\jj9JLLj7dq=Y+43#pr.O^HK:[U$[XWREiXPEV(C#e_go@H74k)g7Db)g;(t)kaA76Y0EG#oRo24n(X)!6"sHlX*G\%YX*8"=M&Qb,rd1:4S[5/&9`B9GQ>V+_ZLYqEM&8NEe]4;?IBd3YW+/MAq:.J%rq"T%!HkOS%sUrSf\nJYQ,+T+PmD2QM@,\C`li/%:Nb^5_YjmGE/&oI%9sr&YkS\d#nU4KW/2.6_LR>u3X[Wt;)UD1&Vpc"=?<F&\jCr7Xs=,M/=%6ZD?Bl^6mI3qr[T[rqC3H`'b+sj%64<G;Se\n&J\R?nJ6^*Q0a)45!W<@)T;H43Og#,,X4#`,IRPqHNU"$W!4s/[?,=612\<s-Nr"X[XLcpgQ%NuR19N<<fqXc8V1O(`%*rQ5!Zm3<E/i%a=ScE,C-\0Wc][uTF?GO5ep'^[a-aZrUF?pBsfIP.Z^fuilH9'"Ll?0S+FJROPnU0\G/=]dL:s`)"kl0@n*5?Vc%'9!UG/(1t-$0fJ]fh;G:l<%)"J60Td!%L`1).0(o#/4k\>b'bYV^':f]IU;C=g[8RY/%&kUcsFC0)9]M[OZ/h[VtXRi:qafG24DK%Fp3[0!DP63iUi2':gKCi^]^SdN%qN(GD%5R40/>/#'C)HRDeZ"0tF&b5[A)>3*bdG"XT7k=O%J8"d6$oY[I^nN?ag0H3/6.2Fd3U%TWV*BMdQTh/N>m!IYMru]n@M65e?N@%NXW$S?cmIcB,2.)Xsg/kphBQ5e*C\j_\DOOKMf!#Y8#.(k;ra<t\W@I"HI:b/G<D866u^%YSifq\pg;u4P]j]6FtU)#2sNUF=!&XFbb((DlntXi(B=RdG%HYY4RZ<JI+kKi]?SiJok:)fmcJ5`UhMK%n,#d&4TeLS6rYecA8Xg%AgjLprHhif=1;879,FO>Vk2pH"JTZkecO3`[=#Kl1S?8S9AmeiFJU2^k#MJndYkqtoa/ufX+q2K9(p/;$:*39l[okDl^90qP.L_r%d$6!hD-Z&11=*T_Jh(L@K'DF&nQ[^q'dl+F-444K%Qmh/J$liW>k&#4m@<]O;3h5]1&tTW9gmbleZ^[6bW)B.+u@><UFG)nQ"J!3%Hkg2\7<?=dV9ae%((TK,PZ.6::<F$h'L?@_=4%:0X.2AF7S$c]H'l:%iX*h/IQEdEGb*1n%Ch)R8iK[D=)b<]`k_'L1tUt9/APLn%0p1'&QE(*R3KWQo!E13d1fTibL2e6ji]^1DLR3f$M!OPaE5licC)R\Ej>.V_L)C9",MH_"!*k:<BaO^g0td#*=Tj0h@Zd;0>LAB1%nhe-d3u#XYD=CSX9s/r!h$Sr],%rrZ.klcoCE'jMQpfsA\@"h."lZn5qHO*/[<l$EN7l>V&)k#RI#dn7=f(EK;:L9tE^jkV5@F]:%*3b^)eS/p6f'7NYB=M!^g=OtjXm#_=4H0>V"Xms*f3k^7*YHp0XObN@nS:M"iqo,'$E5m$Pm:,9]ATKqEE[oG>-C1p;=KCWARMl'%PY5nE<i!,G(]96<$JK0A_m:O)VR<[;<fnp8MrY;lg?@s-)k47760)a9h=\D^AjuAO;n!d=K).EB3eq98&IENH:T1A1P[I,p#A%c/%\2>sC;>gR[iA2`0BQ/"r,V*usV!R7mB%K%<J?6fm7fodPYr8f6Mo7eYrtk?$fmkVue@"R2@teV!<Xgb6l+Q'%=KK\?Rt+sRhL-c5%=HUp&*4HRo.l'TQ2\.$3,Tjr%%NJLp-c5t/JmjWYk!3?\m_oYI<d]tO":-O6np%SC@1<`n@'EC%CHk1jU*u)"VaI[@#O;a#f&cnd%1B8pL!mIt8iDB4Lm7::6W(gn)<YD[Y"+W6@.5S.:^e/foepH9[XDCrImp@3A@RI%D/eD,`oH#t8Y[1)TUK#K,?U1hNIij-d1B]5u%!pCMA#ZaD]fa?IW=;@.(oa6;9.Mpi#N(\R<2iVuqEd=L\KsU'""(>L'*4Wjn?.#b.&Qn"9/adhYMLj#73?me7AQ]L6[c(<>MRH6>%^5??XT:E`!=bTu>UEfKtnd<ls<0af6e\mH[WmZE`:WK.J'4[tl]m>P$SA84*I_0?gqDVM:lsNotgb$<@c3UFli^M`$E;/-=6<)e?%3alj<5>F@`!dRcL0e;'tkZ(N:965hojT$ifJ6q=n6SW]Hec#FT]h4&4X7I?X<OK>XD<OuSYH#rG08MH?>EJs"$3DuF2Y8IV?=Bj?%M@#t360/L8<Ogr>a"]>fEBk,[lUG4B*L43e=&ZI2#iJ]pmR)f%JQGG(Rbf^WE/ESiX-@0t8S?s]Wd02!*E(Zui=+LA&9qu'i)NsD%\8OlDAPN>d^Hc,%BUJT&Ga4"0VC[7!_:.0U"*dgs`NlXs=,@uLQQErC$?#%6Ti^3BkB*;h=,GbLm!a^r"bF*d5d/>,hte)[.Phq"%,7<X7&rN>_O6V:HFp5O9(n,'J7Bh-\=:3td*7;EJHipPreU_VP!+'64%<iYNWlT`?-QlHD%]1H!q]KP^`6EM]<J3NV*bX8.&/dZq%\ddF:.a\:0MXV&Q6>,4VJrIOm%,b+skZnVT<>(sVS:Oau``(t\<ZV;#H*I0-n1'3ucK,2AR[CBcb6D9A8S`Gp687us_@6b1"aF$e%X.sLh<Shh].\Po``GrT:^oJUC@Lg&>9(UIM#@8\W[b2OC'guZ4"n4"&iWM71.SlQS<-70J+BsgHAB2p2Rq7%^5d,(B)12$CFRW;#%S:69E<DC[h0'*Ff'd6NPZh@8LD3k60]b!rsX.'saX!oa5!dlm#nVk/MC>Z7rX:^0r'<nNr@0tQbd\7bh-.P]4(BH'h,D!GK0N=09%E>LTrc)YHjWV@;o2+Ls6DkS\Q@98:qL"-sCWsm"I3G-psfo)d]YcEHV41Gk6FqsqN["j0;j]_6%nYpe%V-;feX8#;O]"hSTJP+3*%G83NCO9Y2($/T)iGt9&3OF71:jZGnuF5U'<<l=$t9tk^fH@,p'`>b+9.=bK&Z9Qk!;`R.sMt,*.X%X/I693YLc42&1O]TA?m-&PF%]F&D3%76J)`FE[&H'K(5T[1][4<K+a"*p02Ef<6gngZ%[!o(Mke1DR7FPp/6T>W5di)M+hZ#9LA]XherGa2L\ntr1.JX@p=NLbW%%5o!$Qn1"\P?>e\$*[69`'C[KNHp[qI.]BQ8:oluhaHCaKaK*OVA%4CX=-<A'I&:jtV5V_NJmP:7Q?++oX"8^1rfMi5P3Met-g4PK%/EoK*JW14;J"(Ds?+gdi<JR+o]Yg_ADr4X"Io$TGKh+Ut\=g")TKI)<<G:[_m-^7AnD;%HI"knnE].aPeZQ:E%CeH!]mb[EC:#.+%<H/8,-5[85[+-%R"]&O,Yi5G(aC&j^+K]s]k7uDpC&h*Oi!BhURj$8nmh(d!=?PWF,1daPoo??cQPYNj"2bi:Z,lo(UTB'%'^bs(%Klc[L)e'QHoVdp5,HN(@]<L7d!*8W<Z'Cp]<q.2q<+gSY@as*u#^B>pSKiPkh\qYnBe!@q_\iD]5-DKKFY<diRP#`0/`J]rYZ6g/%K@\A3VZi(d<0]JJC?b)+I6pqfqN,,732e>(W?#P[WWKr<*qL:J[1oG<Cd_:aJ>6"lQU63&s3VRS.YroW"eI2=K,!d6Vcns=KO2Ko%(?!SQJZ0jmM6a$e'?$84WP!g\X^q=:O]:TE>%If8_GY#0rWu(0IYiA:;+6b,2I8E,!<mo`46-H_#9".#!^[W3(4eg-[rA9+jV^;u%22Q]hNh=H4J(Q%WT8HSQnC7h.(!.ej*FVq7NALpNW<,-rMBTTUT7Es"!+e^EO],-4\PZ:\=8/7O;\A^=M+5I'd"XeZ`=Sb?S.JV]%hi_"6W#A&\<9tk!;NZNq"Y.+B;XnisAp(I[4?Zc*q^(2\9PPo`9iH;lKSN)W4lb"6DPU6$c"FWi8d,[89&QL7=`D0P17!sg@4.:=%[PK=SK;@p%:WH!X?B0EQ84BC^(7q7@$IFa0eNcZZpD&;Q%$4*ZLpT'(.XO,tQc'=\HuF(4Tqd3oo%O.7"e5^q9*-%If1D!f)QGYW%a9]Nc1+G,Z4Ndpu7EJKAL.,[F!E'UO'c$K`=>^SGM?uNLjV\^H2#-qM&euOIn<jM*.e'1Q86:VG!MC'UW;$i6&dLhD=6(HnnPCqX%:c\[g[<0_RE$Q%F'Mq&e^ednm_ce_D;W*YlnqKJ"*>-lY)$uRRs6u>8kkLj!otWj^=L*u<'N@I2+i4<b(#K$,&g4.JNma(H#&::j%45LOIe[\-TW/ZDk)?:L\%Bl.>JF5h%3T*]LX%Y*)Tq<6_(0jg\@9[8]d]lU,(4q!Y`]dCTgiS*2XfSh@+J1u8c$9bGg&uH&EDMee%Q4A6K<iG6iolRM<FkWLdPPfdD4N3&ra#u_[!ZchWk`0lp^L?&iZ<;,?YiZ,V<!b?"lu[KHMdr;iY6);P3]4nY_Sh0ioi0=uFNTL=%pOH#l/?rN#::5(XPZ.J%'SJ9b.=BG,"EFiMAR>GX3+]*`\V<'qdTZe32#FEq!2hC0D=n7n'Zh&;CiiV.%S]*""`B4_T-M#SDCR'X%^c$&resHNm'K[@/!70#h#B4^>o&A#n"F<u7A>P/'/8pe+\Znlf6Ph$?$kW/Ta<kpuSe"fU+&[TCeATcuA"+YK!'CqAV?*%uaJK5H%buV#u9jr]B>mah8PW;)Y%9V*A"a4NX;b3UY,YG98?OY8+Ta8@CrHaqB/IN^M&5<`L7':&#RM%NSf./u4k,!so+9jS6KO3T$!p7B&%;]Er&-6\$F%<aK`!J`E6*f[(#D'W',YTj:6l#J2##;QGe,\5pQ`tU.B(]aYIMW,HK[*ii66Vl_[`,naS/-UjoFR(X=8V]h0c4HlB%X=]\hOObS$E3(:O`qM9>C!ZprF?&,h!0[lt/NKSm,.!HX&#[YtD'Z>Yp\,>CC!ZplFLY6uJ4kY"-_,0LO]GY>AL`1FPNEIUV8Lbi%c_.,P)pALul1!c"5UZeW(QI*#?f6C=&#9;n:5A3H]Mdh!"[6QAQGTb)e/=(&#_!SsO]pR?jYrah8uI<b"Bt'^IQE$\3k^OE)6@qk%D<k<#1Qib!W\hSb-`#/jlj9?53PFBEi06u4V7;++SK<RqPYuU=a3"dO;F$sgq2.+#.;?>/Lf08$GpAQJ1^.[S$rFMf/]$Wc,k1-`%!DgiFO5-nb8V%<R02R1_0!A++fVG$-mq8r"8Z)YD"u%L#&1V:6>Z0>`gZtG>8HX-ZUQXVk=9ob:UaS63&`+Ci'Ri?b;J4:>WY,Ar%oQ#g&,3b$lU'$QRKieD)1m[kRN>/p`_E&DMl&9jTJ;fNRpg[qf;?2.Wd4U4\[&aWH.FX$l]#Glsrl*:6"br7l(i<SU8;F*NS3]]$%pMo%,U_$'fOk:5@7M,.F)1f04gH3geJ[?MZPnt"-RrH4e^!HmKg)ZSm6XbupGuZ3t;Wb"K.(9@V<RR'UM\G\o$'"!QJeWLmX[ghc%.-&L%mi6fk(.`U5iJna!\<DfBMW^R^]'";V+L')a$pG#g7c_X,lqrGC#V#/fUE`$Bcd8Em+0qN),EL8")EJ.HTnGW]Ji8N4$If.m%Is>RXeZAD>NB7KB6gh5nltD*n0BLAVK2Al9SgtG,f&`#&\V-i'FDh?F.,cCOfoVutlR39.T`4O-jQN4h*+blkL=[P@:!+q_[Q#*,%>H:[DT`7pa[d!9ZZ1jD$S=V=/0N+PtZ?&+dF-!iHPa)D;>nom`:[sWCiZLO;=rpCT7[2oXI11]7G$fD`E+[C$Jo^LL7V4uD*/*DR%7&3LH"c$*&)<e$VEXe?E1/jF>`em">c+BT$Ss"eT]Du>];W+l,nhdcsUd8S\pC)-b[j&MB5UNKZAqRV/PPq"O\_5c_Jl]:Gme%B2%Q8^0K0;&H%Q1#-gZG?tu-!`tu2L`n'b#".n%M^ZkYn8m:-A;DE"pBGI:=3n:$Hne'fU'1uQ@iLe<)orrCQ?1lY^C+W+q2D)H.FUI%nZ;Ts@=GKuDr9YKC`3d`$a#'i-"D-10Q\6\`[I>Cd)Z?;:Dc^h`<.6flp.gD0EqRs.,Zn1`uO8pKmkaM+=46"RIH7NFX5H\27>qT%+83t^V3aiqGBsK['f#mJ2("Cfpm>b!jl$:d(`%fHCs-+B=q*<^XE7Yd-qm&9#k&eJmcc]/kUjS$7D9t5@;%892^J);YSY[\AL\p>%d3>g6&3hmQVG_IK'eW4&jU.j,e^_X,4)578-=Mq-#:O\>n,a"NJO49`_QlD63$:HFNVaI%WarmZ<:#1-c4(@;q^slQ[!g:pL!>=V%Y+e+HSV7lL-%#).//[BBd+O(7*iA`S%cU"$(ci-\<?sD5<HglKp;"OPG:<eX.ecMcgFjZ*`DVpKn6TGR$*#c?LgnL-eLSQ-5V0NV%5*!BPh>gKH&'sWU1IZF!J2khh33@;$ELL'/=j2F"C[_]LLZ(6qb\Y9(Zj-Z&j-[`t&F=A\[.,:u'TWoZ5H_f!A41sH3r>3bm*<h2%lO8OlQ%l*$"!0j#"JmpU+on?'O'0u'O)5Y/We#^^DE@>-?Rm)1^lA^K&?1r&1J96\%)IHH;B>D#q/,nq@Wmd.b*5;q>p#r,fGNbi%o_ZQ[rI$BWJVsm(GP?L#N?\$SYlYnrPI]c/f+TLG+H0Oa2?=D!-1Be^#8uDR\,uqYNDLUnlpj!b4+2o8[G;uj%#mAo><LMf_!t$!%p<Q.p%]Kl(+Qnu7&YQq_%a%a$J4oqo+.4-)""@>?`IQ?'E+&as1+:H=Hr?-ePS.4d9B%`9O41AJDGngrpu<LY'nSm9ba*LH13>pc%DLBtT?n3BE9)"!G;G-<"W)a&>\#A6H/rX51M#K\X,"oN\GEWT_K`"TpPbFX9ml343_'u:/OMInbJY_?m.01$1@*3N_&3IAeNG""!%O>'<CaJrV!L-D-&Ln%5uru@/(Qc$nmOp&`d@ZQig!II3&RiYfGPXl/hi^7PJ`_msV>.s-%K)Fg/L,f5@]*@0paP/%qp^#fh]IW&+%iB@8CQ_D56&3E.XDLVJa$;:#,q,8IB?`]G2E2.^`3+i?0&8I"p`LL8lr%^*#+_4UA(L)9*9MDRGAtN-cBK/8B^.Y#K]lMdI[sR;g%*\g)[!G%IAJ1n`+LPZ."g+.3m:F\t'3<uO:-3/b]?U1T`&dA]nh'*[p*uU?51msOG/d_<lN,!NGA:(5lOe51,2V#H#a$'tC<95Z1%8$e)%KnL1S,;_ji&9m)F;(f('#4]dff.21q.[C:5H[UrQ53+nj23D1a=4@>Ck"J?Op`(/53:RlAcGr\ECd05L7Ib7E3!M\ipJ6/-%V<bV-kQY4>)ie^LpYHn#o0euJK+#q+&/A;3gg40+A;7?ofe0OSf-3IrbfC=\d=_Xn[MPEE'lOR[^&J[%1eo)]`^4-o%4l!kW+frg%P<qNCM$jRZ`N^k-[)0\^JY1FTKB\k(R1X77.LDA'-#n0'F\=,7hPn:F.5[I5<,Dl0CT8&uP_B_poa!qo5BI'o0s\R;<*N,jGljgZ%$XcA8Ql\"4?p@/3mm@X_1[?)mH>qV)TJPZ5WhpuWV*XtmMFD^=FMm3jriD6;1Af.H#U[W+_HtA#UrYo4HnB,$l7FaoM^,L%/LpA/%&FX.3lB5]rBM?K5?9:e3>,Fu;LPnJ:I`T^LOj'nY.snIaRR/UiDVA&[E_ie8JcSu[:Kc#.gQIK6gJ;fFjuW)25Y+M%To`RArE5\c%!)utRo5YgShJk%c_1]ks/pbrJG:H^0b81k?85pq'>Y3!ZjqS/j,o/AT9uu'9H4"-$`,X6mX=fZ733J(JZ@c`;POAe0_AkcNE06:4%4^s0A>,Ck,A>k%&7Id0.4tV9p#kO4mp^q=.K96hj%'Cde!R^C^qar5*Id<4KOXZ[I'"4Ti>EY<U[5n/Rnn4XY!2E_BGiLsC+n+!r%?-UZ:=;GKA.7Cin*$S1;d`CjnOU2%\W)J:#PLOjgRo4pVW.CH'eT#]CdWGS$r`$9O\R+J6nTnkdQfG[83iG.aH@;M9[mU=NfGq\p%J9\^,(-Bdtc*9M^JNBKK3L#]$QFZ;G1&@-WY^8P_%1s9)G1!qR[;jX+4'Z'6>Kd]]lSAVYPe*Pt<4'T-/an4c#0D*W_g?+=!l:A]%nd[?\<4SF55#iic?,2cdJAQ`RFUAE.)D0]a'OW)V9P\Ei&!K<fJgD%7.KHg24r14kk,Zq<R088?+?(`5Ou7>$=ecEV//1_C3`Ie)%8dCEN%$Fb4(eNm'O[f&u9#;#P8ekXYPK=;4`=<E(W6m@#>/L&B<jD.qHDlbD;o=aFh^AK2""1rE<2.#7IUa^)U[O2<5?u]?;afeZ%+JU>VNsLVa-aOUt?]usooe)J>^mV!`m+,t]:rc+l%7%$?11P>'TfPa=??*_#.!TTll9^#&1Z#,GE$cQD&Tm#.#IYroKb-G;8ur*V%OYR6ef1Lr-Mce:2B+(ARaC_(dhFLr)<Qp\\bQ5[5nnB5d5ZoNeR"dFC4B`OiHTS8TR-o1`mm@k'.e)pe%17D])ut&sXU'Is+OMG7%j3Uh#i09#d=0RA-ihn7<%i_&t"Xet;(6-lB-m?U0k_I<f'9L;EH>&O/X<*U8K8QB/Oa-?t/O-=eg]\U\Od65Q<*u^okSH7k-(#]4%/7W$p`a8=!1E=9fR7;OG&@Yn,#p`SjH';A7!oJfR$Fg%?k&tTnfS+tZ3<Vhqd`i'T>U6=7@!Nh#eK5i3qTH#G1A@=%:\pZNmc%+>%(e:BXbhPQj)(^b>pRL'\`'Z4r#qma:&3_=HYQg-ji!l=B:a&qQ_@j"S]W4$\TmD;9W'XbI'+bF[.%Ea6]JlJh24XaHdFkQ[^,jTL%n?5o<Ah%(K6W[DD+1$6Y#VX;t.o#mANq7#kb"G`<'cr^%,7X:62S=&'"3IKi6)kNGR"V&#;41eqQ;F;9P46r5UEk<4\N4s:EWtdY%\`<u@VHC27LbNLS`\G,<g&!mCi`,NF6376t<Y+AG-sna.PLFQ^*uV1\n/*9U4GCdIHQ3bm;!ASQR:&%,U?BQ#;>2SuVdF#4UgcVh%n(U6+H?1DX0)&1F2!12Io5OKD3b%h!3U,H?,t9k";h]aX+H.%sqMm'.ie.pR$HnTW(uOB4%F%3'\aG#BIfbbX4<B6Y*)M<DIX&:,%.=qAgO,Y#Se=(p($Eam3&P9\Qnb!Afjb(mi7q@24T^4"!f-[_cO?gqmTNpgd3K?9*8^1a16bnioDM^%M$MS;2!>248.WPjZA0_4"%'dHZ=VPhqO/l4[mjCrY-o\BM)W$?H,o?ZV'TkrtrG9ecq1^c$YaC%1XT"Sh\3s>+3AtL=u6#;s8'KKdif[tX>Z3S"06$TVrX!0bK%=m9ZZ>NJ[uHQe#&kcCDVjQ*<$l(4.>%#3<3JN5]F4W_BR8!?ui8Z<bGJq,"[/<:[V__XGrFqc_:S)DW0$nurKV`NIk-64`,!MH_b%bb8r\U>+4LB/;X(@2U/mmmo]H(hY9X=qmsBkcb/d-VlUTNh`p@ZiAk*:<Ai67<gR_PMfH<Y`*QAj-8J3U"LD[+RscAb?NRNpG*tR%`L=EL>eFQqWk=g#:a?%0gO\j>Am`>'7\629ai2CLf?BhE?3#N&P'-&T$TWQ$)I@tT^c7&k")-8qIIKcIB-$l,:+Ae`@A@c8i]uXL%2;KZq6_JY6Pb8E!/G4Ne"Rb6OgG-'H2-k.@Di2H0b&`P6O$4&L'Z+=)'`ohHBa^ptOK!VpbS4od`-jeg<fjB5@ol-gG4Y.LoIaZ&%=OUJ,dqZtK+X\_nC5i]2NdOVPZ$ZQI6$seG4M[,AU*Ft0`eu`#"dohA1BDh('W?,d@*91RlZ0hAbZY.FB\29FkpZb38hogYDn('6%,:.'(^G\FcN&.m^X\u$s9eE#\@%W,L##kXWPKF=FQDTtcnphX=&`YP?p\.39Cg"WRah&SEZ%StV8f+#F;W4fKH<qnrhD!).MC>bY%E7j)i7C^VfN_fop^s'M[_)Xia#a,=1N8+MJ$-P$k?==?16E1s/B&E![bH_RHpV_JV:?hLUmTW/3_8eYS=J$1AFi3]:+&_eiS!VDF%>c;M;\u$(A;0'%9U3qY2<U-5EZ!^A#.7@HqU7,A)W%&Gj#oDB!cae=--fe0V!sF"[;!S>n6f#;bGm7\^]U/jjk/pRtjjl_a/1-a>%3CW2kfoq5$Us^SdUI-s*%Xgl^?\^7ZAIiTE!OBFWA(l0qQ3)u6%XF)e*tB"HC%kHt&8e>O@<@b88n9;fiAnL<$-A='LGrlIKc:p@%).W&b8+pmcM_2Fd.+$XYrKEt[?,,#R)!Tk1MRG%JaUOT<Zj(,l_%NnWQm/ZPgO72GcJWGI`(o.CdCbYlm6RFlJS\JBb:gnq)KUP&%3CQdqYF%`M5.n"jiX;^-^B8't'D%#!F,6Q*H6`NFRK0?!dC\!N-j3T9jZ!IM=NK8.]h+3"SfifiF8DVe&*n+Wq8$[$EjU,_QS$77%]H"DLJ5)-u;46D'"<c6j5[E,4a'clp7Ua;_nr]1?+f+:oBOW";lZ?BTB69,J`_E/54O=-^e>dmj6MWOr(bqnl+3G8Djs;^o".[c<%&d1f\`[2>9eC2*7D4THJTJB'Mg]PN[i2OWHd"h/f<Itj$o3%@75UlkuLjIN7Jc``?nbT5@'YM^"cHuH=i.lX-KI;KgikTmA(5)C@%cEJI;E8=EZR'3Vk,m;<bNFX'r6>:Z(AY!,BI'RIi%TBkP+<HJ&'$%':?<.#X;q8ZV63g)nNt@[&E'L+q9hmSBPNUmGH\*45,<"XO%_u5gB_*\JM$o]k\3W-R3Eb:@)EO`af@+PY$^PCuc@s9u"gui^UJPo5f*SqjrX3&8Dfmm!M"F[3i%?se!ZV+/L+&!_/[Ss%RbNi]f%mUqJ"+?;]qLPI3Ap#FhP,6db[]Ii4q<rqR)bt=#uPqb,jZ7.Ck@Jt@V(Ef.^"+-]u,ORk#"JnL\58j0BWcXY3mkr4qeTlrW'_\8U%Oj<MB.""\mR^u\.,TW47^e#A=Arimnlp?g;EP1)ME@YF!dSP?#'4dJ96?oH;7@'_/(W?nV+]&7>`<<7JYJe-r",eD5$JKupBHNF$%pl#?(mP6mOA/6(!ckbOY)6T:&'FfB6"JEM!\*t&RH&a8AN%F]-1SP"o&S<u+4Okt0Ya#Mt!j4KC]@/b,8\LIT#Eq&@6'nW-bUN55%EShfC%XHul>!\jf_IMjW&PAUYF6H;j&E&mLaI$NT#mhKJANjuj)B.QM.DefSYFM(1'>W6H!M19L%Y\P+6=[-hrWc)Xo1ZVH'*l4W%3N&p&LMg"V43"h_AjV5IV^-RZP4Ies:(N$q$6in@MAV5(jj%ggSgT4@28t\-2=QDc%nH84Mb"h8PY<`X?cdW(q=d;JV>l[N.dT:_%#S<d]5heGeN*aWU4\quc"-Tq_TS/$!"=g4;*_a;lE<W-C2gMRE,_16`hB84i?#`;(Bmn`2"qZ**.b3dgSNXd-$[`d7>f:E6!-?o?%dH^47mE.FmjbI<>&_d<F$;?@CorV%j"/5p_IU%8jb3!2:Eg#-,'KXaJ[jkTWl$'B+epbn@O/#RTpsW/?..qWSf$B1!h.^d#EU)&^%6jhr_87/'iQ+].N#q]`TOTIftmYYI[/t6VfB6_R,P*fZ\q$`7.7ES3Mg0l%t0Vl!.+6Y1aFY$dkOc,@T+^Q<CR^dpq`lrCV'TV=S%\TeS<#E0?Z"e`.?'X3EC6<GI^a=BXd81@"+icR:]qSV/M>YF?6joU0j:l5iVHX8gF$J6Aj"e4;:bj_k-HOgqWTStQBR5V,;e,N"#%)N/T$JH3Y?AB3fbNk@`V)2RQ$\/YPh';>>reY4XaGHg$i\Y9_86sgh=NDGEs8n2:@J9P/L:<,c8Xs%OmneM6gX3WPrR4OQ>)^@sA%hZG=SoJ2;=(?fhu"Xo_84$0sM[#MXph:Q*Kb3iu*MZr'pB+cBDo4U`.MIq>T8)($jcP&h:D,\eVWT:tQS6.GgOp]*^rZu_T^p=Mp%UOo4GEjuXBRmdh[$rlYXlu_[(Q826O%8A/N[\3!Vi"3[._h:^mR%DE[OJZLT.!?S'q1i49Hq:'E0d;HIdOKbR`-'YDg7LT+TnTo*%6N$nLp!1JPcn_mtO505&,uE*>ZNtn9"tJG\3K%%&s/$9rfu&QgrsT!LVddQt:oSY9Sf]cgW%/JF*<sE[OTj`00RCt-4Ukh)d=d@j%o1\ag*Z>Zp#f8FHanY*$fEld\k,O'>S>,p+g^_:M1B2Fb?$A+o;Hm(CRQ@^E8#k`(cb@k4*Ul+pk&'?\SgT^b_.Ip@A;\qP%rT>L%RRh7*q&XQrkr9]`5F40Z%KrYl#J_(Q@sF;!'TF/\*j`eCdZaT.o+\\&?JWTu2g?d]<AT,7B?#*pJFMWnK@!k"l8qC;d2A`+,2JX>%#(WR\IW&:'Xn:3[:)s#>6D?!B![sRqhEO<Z0m>c[8^Ni^\\.SF!ti0LU0ep]aEskaWZ3?TWZ)UT!77uoGbBZ/0`]$Q6j%/LL0Rb&%"RKWQ4<dafkRF=p*I5B:;=St.S.U3C%,4kbYe(YpbpP<g'#+3+GJG:mVfu"p0nViiqNnkblnq"T+)Q\JPT?`IbiiYC)upVT<bc;V%XW\43`(U_B+pKN@2u!uALPH8AFYEh;r8cW"E]ID=$9ETgW9,GEcRplOi$J7u\sB&r;)SG)[<)VoaZEFh.[aRPZY)nt1'ab=b_/Ds%3Nl8d0m7b<I&MjUhslIh.],hTG09m$JC!?cVm9p+NasSV6\[<E]m<P1qDYTN%MbOieb(WhEs@=>FL[X+QZGuCB":mqKeX'tU6j-!%L`uKu,!(M%H'7n+$&Xt4Xq&mH_c4LuH7rEC&`,m5Y8(5RpOj#WY7YNF$Km*Y+LVTfBb-N0%/%!bDVB`(5*X"2)]NKO,te>>7tU&h%LW;-5B.oCqj;7OlS)hOQ!0#Z0^_Xn/6YVVZXnjFcEgpqRMZc0p('B9hJS5nFQK5SL%#llhP6CTEAeoRUi>+:$VJ9.N;ug!m1k3!9%\*(icdiM(G/5fF<Yc;FO!S+;F(9a"_QE>onNY_t$:Ce?<H8D)_OCS+Ug65'l@I@>4Onm1Xr,hZF084Z#)\IbY0*;BB#j67"!0PtE%JjL^?nG\6^r[RG%WXq"L>"mV8"I)C=\o*)dI[Bu:N.+!EM9XiGFU2pqa/S>.ebe!.'RPS9#4=8S(1O'X[%OrAUK*_!>ncbrnbS?4%7`baFh$smY814_.ZEneJ9N(Xt)9"%F)6t509L4r0@UI&g!+EC,O7#B,MU9<jgYZ7BNgTe1p/!StBD+&"MG0)iKV@,nE5YSKJ-akk%Jj)aS\k@OP<[63]"qQSX7jApO`Gp^oE!J8n6BQ=;3Fj1?Ao,Q)m&cfjZ%1.5kFr<8MB-T\c*8N,qZFcHU4.]kpPQ?dZnj;MiRn4p%fY`qdF;i44RW%&Y!`X$1TFa0e9`nf:E277(]$-9Bbt<IR>QFBEQCCY53le6m_"@.rUFY!8R;FN*bg9=b.IsEd]>1<]KTrND8ci:-%K`;+M$+aYI@5!ejF_=Qu$VL*_ak]m`<3cPim.&AHfFib,J"Bm(WQI/oJPH**+imL$O&t2O<1@=$pl<eN'"e/j7]@cZT#43tBL$.k%h0Te4Y#7T4P-hoN*5IqA<EE25FeYQ&33:q1>tsjKbgqEj.Ti_#hX&B5>%nRqY!V28Ee`$&qVaROf(<E<7-#be0KG9ea\ZVi`DGll%X^8<u,7fbYbQtsR'bZi8%<7mI*p(W*PGU.@GmGijn)kn\:l<'l%&eHV!pS9JG`pngW&WHDY.03-S,immX12b>as9j:\?U'g@J)M(%1l08)@70\iBjWDOUnb$6;'ruf4-ZtIL9:E9a^(`:TI40Y,C(k4Kqt5pWn;MXUS@'J\&O+=^rS!0<Q<nq_qpk8a)tX6^/)Og^_]Mn%-P#+*LSIWhA38QU%q4.>(")GW5ThJKNBn#*Q?Aeujr457B)r0:8LB8q<VKb+ai1?pF75[;au0)t;MYgPH#[*J(d_8-aRIM!@2.kg%X6)u/;)2lM0+A7h87\jg>'-b/)F-hN#mH-J$:lC?SDI51c?-.d<Q.LtA\>#n<e:FJ"Gj@U6%T2*[9lPi&8?+sPhBU6YSJ$36Bo`C%g]eM0=fW:G>(rYE97YEBF'9Rh3HA4=CCF<i9^4KoL;S[Rd_>7ljN(F])oj7b5=>rRPb:q2DUeL,2H=('3RKHO4JhQ\=N[7n_XJJa%LcQU1,`i!Z14X@t>aVf%3M&%cQlql<3g:kF(Jc8G"VfLSq#lZ4=l9Qrk2L"ll51W6a=>EaRlG(4C02rYbdcj4,iufYNZ@!e]qe4d%`CpmQY)BZ#68\r"GR7?2Z$9'XJ"K4::95!D;3Q"EH'2Ea-;.Bs!#UN<a#,X9AB4++$HqS.LY?tm2+(9J$D/$SRM(i/88^+UV(&E9%GhjA7,gHg+/S6Q5X;nUm8I@bsdc>o:PFnI]*oqt4)LKX\;)ni)&;e!)?j>atZ9QD\'ple]8s2$&.[^Y/!qB_&jC]`fLh97MbQ:5(%("DPZ93Kc[4fQ>X/@D:A`n^G6)'rOq8h/XcnS(R`)G3'60/K,A62f(`X2E5%-!;]Qo+P.-OjYi7=RWfc't"Z.[ro&le-Si[B4QLi%RN4iHYZma"n'X0$aO*[MUFh95D[B:*"sN>T"d>+f8[,sq;roJ<Ckj8Q;dFDV`%gD:`'ASm73/SK>Y-!`F6/(r0+n.L;E"32;4l>e%@T5g-]C6r@=>.E7n;11<hEs3'de+?F/c_B:e[jD:CYi4ReM(m!U=Io"9?Bleo$l(+[CUFE(N!oSG\M74"\r*24!A+FZDK`^*@>r:%K@YIN2FiKTZ]qS:<7hYf9K6:7-/;^^?h\R9V*N#a8-1``f]?fZ(M66;+t(?UHGk&mN%\F%@0u43V3EcZD.h\\GcoJ"&drF%q%/fW%_PUBmj,k]]D#F(.'M`S46V?:t),/I0bp8dG$gUBo#fl#4^iDk7b$JfeVeUZoB9O/D\9t8*#(<r+Mr??])%uWR8WrXDW'`@J1NIha%0gF*I.="WEK`l@fFcV^>Ho[pOc.XTtVfFM`Z84=nK11A4eG7#m=c(;Zq@5g8*G4DDfKYS.P2&?dJ.0FtQ$'s,Ac-e\7hbMRBInpN%NX%SW8Q'Gi:IK('I`eJ*+F$K9kT$UG_7i`<nFr@_/o*YIl_YQ)_ZaC(`i,R"7afa02rS0#Um>0\@0N?T\Is"4.0@t`A4*?XS=@\7%/,Gsm.4"RMBa>(k5a$Feq$0V=Y;e:4^*W'FE`?]d]TGn3!_*9GLU&#8:kG4>,"7QXPao[+SuHDE%]:i)7j>DK4.3-;=lG-^fW@^%%.`*P^l:GN;PU<><3ftLb"eAJ'>sQOV0,YXHV?@Y@,qdRo5e\Q0;e4-Uic[ch'hL3DH%MAD3?Q>)a[[V>EgTutGQmc*".a[CF7<HM%(BT&R[$d_h7hdnUP!sCYcIu^d;mG^bR@6IbE'XkB,l*N7^I'n5?L<pH7JN3[J!.1ZWe!QEdms2H0n7"ang(1D%)8$1,Y6@J=JRJ\%9gk">i/AjeQWmLE?Vj]Y%9Ku"43[bIWphtVF:QP1<@Os6JSQiW.%&K.5=Hi!(Q$Ne+#M2->ZHEYpEX=k!Ei!*5'V5;H,TpVVWR4g%$]6lg_=dB,RQ;c?@:(:>g)$"sVhB5=NWGonUMBZtQ;A?jDZrkfKB!LMTqI*!`N)X42A91Qr.Ke`mE4eVjO4c#0%u$4VA%o>j*b(Z%O4bR)'%njaSe>h8/fPm(RV_1CnEC4pF=E"/Y:):G4JO<A<,R:N4qS\<-^,E;+Na3.1_2mF)Hg`pSDqd=:0snKE_1M@R5:YkLMg<I%-PJq"K8@R4!k4O,5Ud8GS2rh&Ytf$P)OYc<<hJM&FOoM!,cQX+_@e46kf"aZ/:<'`i1+=c1T"AIS5gi8LP#8HjP\Za4lBD`b[d%j%%ke8Xj$&!>7rC;?_Dt"/-UD[lG2\`0ABC;gH3>bc>k9G&QV7$?Or-$-BI'YaOVD=>.@iiXlH4<LpL@A:?ZZO0U`e\4LBStuihcLt%Q/b3EQAM9gLPQ.D(N!%;@+/[@n:F<pnjoGu%L!*<W^*)=:=8*87?h#%3L[V)[OR<ElqYhAn8=*ug?I`fc$5&.m?,:*](1MW@[[MO%Re.L"0"3/tWL+U3*D:VpU8oMbK\lb7?Kcs+*`ZI"9sI$V9>C/284:"&U-2X8Y3sNE4C,i79[_Df_h&jcVs#12AS:\;9!&^E7-m!g%7'sr\?YaAr-@PQgj>?nm/O=P,jbMrGN<6[Ob+-=!=f6&.a7M&G\/X?],c*U+QLGC<#nb]5Iu8;:khT%'EE'&j9\`(k$$2hVd13m'%%?j2/WPs3e8r$lu5\(=UXN!OtQ'k,Wq\".PG"pOqHS?\2%!PAn9g/[-.-AL+;<ZZGg#Pf4U3-s]Q,,*10e*3&6<Hcd':F]Gm!%o-%b2dcgc;TmJM-ZDA+o:07."ehSRh1&45m4OW_2[_@ZNJf'5ZA5]mPF$>e0SmmPMJ23ag5j4__S916+Nmp[CE9G^q\r4)S13U98W)i%26e5fA5"tp(M]9V.LFJ[.`Ii'aJhaYnQZjmC1-WR<Blb5f-Ki(1*/.m7,Xm^JW1$6jZook.D&Rj?X8_CSC!fA2TV;3AAU[o]QB.G%J6]OZ9>giU0Xt9H:'=>B$`Lgn+7^1C;@\Lp$"kV_PpK'K`MFJZXRC*l-`:(;Y"grO<+aYkl\A'm.6SVk3#S3Td4FB]:!,,"22QSJ%lsG<3erQhu<,4uC$sWEs&WKCJjC9BH$3k"qFYP[l[NPTHX#b3oTLPVgJpX%umb<od/dE:ur7E%7F^[-+6#s_MS)U!==SLp0<686N%o5n)T>,jRJQ@osn]L8c?ZopL%]flj[Woo2fY1tQ.Lk.;IJS+aViF5A"5s/<!-J:lSq\!&.#_Jj['0;Ke9Jm,p<.I(oWHG[pqdmj;%H&WaKcS[+TLmnNBgQ)E^_M0W8HETbiQiY,cpS:"C<mFQY'(fl5(1-PsKW_9t>r#ZsjJ*)t2b7hY`UN@OYon7X<HeLIELO?X%N1Qu%LLP.!*LL_>W]i&=5!-OsW_VQT_6+c6J5qWUG"!t/ZIm&6aQ]!1)0\TU3dQiZgE)4M:*_aG#?HZ5A.kZE5QbJZof<rhR]GV.JRc].%a"AE?UL=hp?*::`Csm6idl=\<.IFE0;8rlqNET4L_PY5=p^S\#3TV:gfMX`^%"P>E^bFCd&1(i'@.V^W,b_FON\4WIH/5:E=i]F9%F9cS!"DfgrYn[rQCo[KgU?i?/^IG%;_d=ea5T'J]Br'o!rH]&j&i-)Y3Qt[[f7Y)Rk0&^t-:e_;^`3,278tj:isHP$nm5K:qDr=Y%Z&u6SUn>2]9"rU'?mkM&"hA[=4q--b)N_nb`[4cIrD+%VKM;7OB-XY4PQ]7fE_rr"@Ni*YkV^snbACZo;mE\@6+l?pPni.5MgA`L%f5q<'Sq(uY2rZ6[)0VR9%qr%[1,m23(Y1I7p8UFc%/e7shrGU%F\sd(JZd*gXnf;X\YepT;'Wl$.j`t%=/lDaReC8>Dp+@ohRJL'%'Y%%K?Voa@U-h9*$K)ieCrWqrBWr+0(tV-,Y'2Z)1F8!:ZWH,:*!I9,QCgN*CI7IhKXS$u(,<,f35i%nbJ;]1k%=]l)qUP(#>OHu%*6M$s#XN#-eXHK?XC,N^FPpJU[&-Lf^]VuqCN\PMTQMdMJHaAgfFN(q24QNe";gEnC"BshM.2*?F&#lfU]EC;Ek)HA)pXsmVZg64%B$Eah"A,^LCQaK4@tn-5es\aR7d50V[-.m"eguo5d5H("MB7/]ZDJ9k"1>tNVK35o)eYCXf95/`ZDQ=odL7C:/oJM&[[CYX;?fN=%E1/$bb?ku4k;8ZJ7Tkq>!Abj$F2a3gk$Ns^F9Yll/]VKDCK(E<`gUp&Z6$j`Z)6?/mKA2#c;@'8mLA,h'>U&im-FkiR]I?+F1M+J%9V';`)^@qBMD^<[7cDlsPF+(uLdCH/>n&U$Ra/A.`W<W]AKdrg\=-<93FZmg<Ym@"AD$2&Tj9+Ug2a$&C3A,&9;PZ&CP+32J6!>!%6V9:2bj#U8*0A]RWNV&X-3<%\7\(e0N9&&0YSoqmOj;2`NI9ZVE7O<7n=&$%7an)<;R!1Cf$8n_AlY&lLElSFWhsG_Rj2)M;gb#i%W&c*"$_Zd\-6hJL;mp2eQqYCsP<0t67$iu-N*$fmi]n[;,cDi\_ZId.ifjsB<3s?KaLpNj?I"+16cB,*VNW!L,Oh\SFXY?sMPheL%NVV-]SN;u]5tJj]F>G^2ofZjtel.FWVG3\hUh;G?-,;?WL@RPAs$XMdb,(suSla&P9+BI/;5r5I))PQV99R0J2`%GtOMd#Z+K=UC%I(f\sROe!?]F(G]Y6U+*#WX93MoUp!e>Nef6DGk\$^X3]N&ldsA1225^2[E!9VTgY<&a/#F_M%YPJWfR/o;<fX:R%;:m6FTZc8Xb%JY^po#\o5oa@^d@kQZ?4[Z(AS]a,ta1f>>'5Fl55"FW=D$0#*=:M1B6!dgBoejTnnC`U`'hejc:F$^*F.2=s>k<JLc.!M+O^0TU0%@Ag(t3@rNk_FAKf5FBn[WKV'd:6Q69,DTHd^akn*/Y9<Tal[EHBkE>-78WSc,iupr2,.m1Tcm+.C%B>c[m?HXTZdHoSNN;$'5'?L%n-,1nEd\6L<[lK0g[#?:-D*@%BYg'2)T6KKkm6GH9ULhG,lqGCMMcT5?5PB@<CSji_"c?/nk?^o9ZSb_HI(NtoIJ`W/PV0n3"LG!%V9.@g3/pPHdPR?'V@\A1:!)l*KRZa7\)^--U5K^f?@b]bolNL^pl$)$lfL/aa5]OF)(\<m5+q"k-s_q3-Tl+@*kE)V[-!o31hij?%."b)QFn;c?Un*&4(6l1)p]s.5UfdFmN&5C&P.IG'l,89V--TZC)O%[HB81M<bHjU0$UWQ](8qh@]6[@U!7G0/Ic*`f&S?SadpG,2%@G]"V#(%:NRTh6!6nJ7A,%aoud;#@2E-.6/n:_fuJf,ME6;XGh)CGN;B'Z+nMh(\le`:JI<&6FAoHICfd3\rK3`oE1E7#M[1G-2E%]0./7(/9Q1N[4cXg9DAjWR)Dj8lq*V.q(jSKHPu&(%"!?1q$CbZt&qVa*K-bqDl+>P[LT"BYnW.(-C!>8bXX%g+Mo%b(VNMF9$f:%7RbclS,F!C7<_d6-.I_t%9iqo_($h$Z>CSSd%8nq>%eb?BZ^`"ABTpg-Da6C0#0k:L:JOZ+Vle\Z&a=16q?BC9)+l,.J0XQ"t)I"%"<:X[JqsmD)_aT8eX2[cBE^fQZ6^Y^'-EZ06o]2pGj$!oq$];@J[d!aEe6X`<1<t/3bUrh6UR&fe`<,,*RkT*0Jn(:$R,j9r\gf'%CW8])Agl&ib"Ud\mj?B'M13Zg/aZpL$>i*`Td^+r'8F>Vk#\@IR&($A`'imCMW6+"p5oBLW<Jn-Afu2K"V<e0$9d<@B],P_pDT'$%3K21*Dgm7'a0$or=O7i.2PHcmrf!0nOJ"$iK#-GS4;03#+*Anro+<3B_?*a<.&82W8^NAl8^P#KW>m&EHTF#`DH_XVIlDqOV;=sO%37&W\a2rT,6$#.2V\@8sBUYk^V[N]&m0(cA&2\fPWR*MRTNT@0p>@sSn7F/S1@$s@["MEj1lX2?J(X4I<;KE$2#k6<F4`)2oI9m?%`dt"k`rL:SQuk=g.8'H7EM+37^mQ/"5][&S4);W_AnFh=XS!4%8l@qW.gMNXO8?C4&Lo1UI0B_t!@eN"<=C_)VR51q$oBp5MToJ3%E"ksk\X:/tF(?a&<>>U1EAt`ZS2&A1`@d6Z`B\c^p2Vp>@\@F/$Ia1<5][c`W!`ct"O&hZ$FG>E;I?7cH`q"EMul`D7cH!&"e+J'%g%mg@TLgUi8RS2O`/GkZMLf@?&+c1kbs19Z&oaLH63[VR5a-k<mjfAkH74M*!s;8+fpigj+D?d#@ZTWhJ`]S8Qq)22-ejo2!u1r5%7L99e:*=4*S?WeF*9`t?Y155Q<&mb>3%bp/SrotQ&85r\o>6$TbB1KkJF4O_!s$RM2`CYe!DSWk;-ka]BZg83B`J8mQ"FZJ-4%sl%dT's=!756gALoqDcqV^1)ul<.?D:Cn2#K/[h<)(Ld%<lPoM($(e'F3JToK"E7_:38%R0Hf;31ku5^qjah#[SIaNse&6+n2rP]Bt&%ajA@ugfe_X=<Tp'.(N\W'dTiLYZ;M9bU'o[ZnUc$$)=epfb-SP&VI;AT=M8:U1]"(p)K(M,q2J[aoH;dk-OD!=o9ScHksY)e,lCM%_i._*9'[(,#U'e)AY5C:,aBWf76\&.lF$]gbQ>#C%Je4G:-o$QRBOpVHQ\qP_AM8Ij>33n=oC)91T)sHQ9LDVoK::>SWM0f3Pcl^%?p7LMJrmOYI-1/Jq32QbRAEo9Oi0*8X2_@FqTOd)XA-pcB?h_V>dPmZ<E"YQI:e>#8t;R#*-fU0JcL5]!^Vd8"8/'?.#H08WQu37%9(rJ]RG2;l=))ksp#iE,T38"Qg4]l_[ZFL.T1P+Yhe^qX&k[PL@\6f=3@DU+ZU>-l:#'A>_[5!W!p#1`1N8u>`5F1\b^JW+&I3u>%qb3.umNCUTZUFQh'DYe,*35jqB>0ZWWXAQi"B(h"-9lRN'96/pq,n1-b(<Y2;I.B-7XgZ?IRT/c9(Ga,I3.H^5-0:aCuf4=b18G)%_9X+1/X&N;cRb4;5CoG0WkP_hVRn<TXN#\N3sr6#i]^!HI#p0^2%>^):\jPobE)/d(%*knKS"VRn2%a4-4Lge=UZ1:mCC.AOYoLh%BKNH88bY/oT>e<;Pg0=!Za]cVb'b&C8;mrNR>iX9E"9MAGYHN3^jThn:H[AkXO>tJWMq]KR19:]Fc$ekFS_,):ZahsD9],2f=9.C%ns.'$b'g-a`YM5-55U<0[hJM(;l)Ij#2EiDp*[[Bb'dkRT(2P2pR.kZrIOhs&sjF&o6pSp:'S*'3e[50r(K:>8YZC_fe_N;9BSUU%,LR[?gh-%39/Gbl'\aKN`Z3oLP"6Sh%"9O;BhEpf;N]EH"U9Dk$2_@^n2&lu$;CR!9Wgsl<[d^1]Qq<`)>9I]Odqa@lne/<Ge!t*%R2.in_2S:c(-ur^WfXG[Ou&rikE:q"1LZnIkgVr<]*eoJVPDN$P*QYt;soQ)>n$O6YR$q&;=r9Dn<lq)GG/%lR?N/8:+b==_kM2)%H0.>tifpjp-%rBmcEk?Y9eaJV(SS^;Rr7N2E$e\NjD7PhkF+73_HI8;gc3XTqb28nR4t4Jd=>.LSr"L#o"b[lR9A,KFC_R$)4pX`%#f&5&U_)A#GG_!h4&bt#FDXd+!8b7H*UPZ=\Y<1Ai6F`*OXbn(Fs]2*?md>/1K/^cf\"iF_?.1;.G21WAL1)VB9Md9"P/tD.*Bhi%Ha<8Fr+o3mlBZ*DG"iSTL#$lZ3g5(]o4Fe>;,tPjc=?odO>Vj>'pEeA3YO0+8_)`Z(DORecC#NB*</7PS6;fgC\Gm!cT'c$/E\/f%ldq)90$s*Qj@g=lWR@V.#K'Zi*+t;jj>(V1E@-IM*8Zt?9^e6>p!"%\0':sd_Jh+umfgRr]#2':1VoLV7#N8icLd-Bl@[tf!`m\r%Ho&!K7W7G5_,M4qo6_Ec2d>NPTURGO8`2G[;D<`mM2E^l]?4un>"ueObRNYEB52K<)MW.3\fC@$fh<!+\ZQL5).AB7+'q/EZCVf`%g^lt2o9pTudGQl\IKTK1J86JW2/`p[XgpO$#QiRN#A3[8/$%A&5,4P_TotiNiI]LoS?LJmehUa(4.&R31t.$(1_E<=i/i+6:M5o(%P0,chQ8];iaV1M=%nXPi>A7CNDdrDS.*X$:6%RA!rhhZf`gP7K];TNWTJTU+G3087dS,E8*YC3'Gs!4U7#]O;^#IWO7PcF^2_^LK%I>%5_IV^^,3K(X$kZWiIHBcpN)9r(63CcCRbrdE,>6dVR9*@I@0q,ZB,G%./hPBa7)+.ghhq*XDSpa.!1YW*OC,If9=it^o?o3e`%0\1s!bdKbc"u.j$fjki*5!6madtcI8.&32dM`a=<6o.!9U_NsY]UW_fBU1[7[FB`[AqL<G)PWWGh#2&Db5r]-`Ghg;'gjgA7,Xh4%B]c*f?9Vsf1HhSQW.E;hUJ;@p+>f:.-XgRBTm>$q/Sou--Qgl)BGM"F'+^??RO>'IR^jUq]@]A^-4,Hac%'C14Rd&'J7d-[Ce^@b%]RC3gjjdoH1t-]7W$2513B0ft?5:g\T3%2;B0\7!V(o[lKP!j(&g4c_<HfnLZ[uhe(c)0Q=mIG(3iIBsk=^nHap_op1Cp\?TJNpB%LP$^7B4a`L"(rBXQ61,q-XV`eUHrPT4%^CDM9[Zl9!'j%R:aa$+jf`&]n)fhn<k_`L94%_1Uej3?DB;t<_X,6Zb`'/er0;NH(1M[%8bNpNbZm$[Drrg=N#+rkR4Iin6"R3d2\VFD%Q74`>7Deli*%7k$'N@+k=fEh>#<@lbdAW0>'\=["CkZ\Jn([H0MPK9fr</G'i$>%%oX24&HPc+,_3bPO`Jau9QqN+36!;EjnIiU@OdM&,F\r]+?"Tfb(O/A]#W#C@Pg%A!$68B0e-/U%Uh<4nTEp9[k,RfGAi*_caAL"?%&HJ13U>BM]1@rc%`:1$aOg"l!pk$5MWn+VNl,sc!--<:s?`'K?c=.!)3?d*a7P@]U&&Ub"?KNG<g.BlT#S*A*WQUNH.prR8/nY4=%J@J:.,#05NJ]f='N$h=CVl1n"SH50QED6K_R:scHdkM9>S@)bmoIGYWY)nsOe.+aeHt;1,WcFCSW.]SW1M3$r5\^fYAN?OX2'C),%:F-1)-H:'1;#uVedc5a@nFCf;e/u6H6s->"KP_P+/8$5`,+^T+]%IEtRFHC4\-or)oo026kfOUte/6cA^m-uVBOE@bN1tWU<piDo%Agar@"VYt$/',kd?"C8D^rf>_N"@fR'D<EW"0?NE=+F/58V!9J<LMY_b^BIk)86B/.T;!:Rg!H%EiZ.'TM4GWN$aY/*JX'?W(_(E%6$3mJa9+/IBP'I'7'/%O6tM[iJHA5Nc_t'-[o9+X.C<VT.[.5\IQrq:%"i"9#*@!a.\+^Rjlq*6<$mH0R_Vnr?LurQR*#iVi,8gs%1-:th_M4l_2j4VI>%K1i!m$f5R*+dVjm<IUjnl&&N-arRW_@_ldormY<UQE/$AMNW/:"Ca$_fDU%:0Xi(2-,((j6dJVbD]8R5^('%VOt,CC8NG$-ENY3)5c1(M$ukZQkND)74C%*+`\>Eg(E>,iP9sm:QDc<VT_P^e/"E,T>\g!&!f!*30?496tA2t$<UJ7b1s=j(6gT?%fL\^]Y5D+dK0Ull7'Mmjq&Mcm:*u8^-Z_gq=CirQ;cbS8W@VVEbUd?%TjUR0;Pk>Rm!`FnP<P6WAS#="P>mG3Ju)-RMAA9-Q80uI%MF_':>"Lke0Hs?9"D*Z]\3a*U(Au-`PVRHA(HEcjHRgrTOtu3On=i",PZaB\_L`?-8A^:FP*C7:j%P]*Us,8RYfUpGn<0J^+D$^,%eA+aUk&W2B4p"@0Eu&#FQsT"Z/K?@DP*Gbb*)]p1b&hrp$kSMb`M:WLV^@Q^RnK-l!Ko2[N2.)>ZBQ5ZQ?4?WXR-]P+NYhM;J$>@%l[n)Y0,johRT[cQ8]$3:ALXr..QP%1iNk'pkD?!.mRhp)8lDNW&?3_ROtsG-pGJ/!)55,P%Zlq.XiXiP+dk1Y32;bX(Xk4G`gY<+%-"T"LUeI[T)*9WFR;L-aP?!]"WL'@(K;;0F"0m=",\;NDorsOB3UBNgTTYOB_Dt^S8QgWnCKsEQ!jlEODF&9-X<Vm8.C4.:4RLGI%2-s'=+=ZpX;=NKW8Qf;N/hSD\m_1@kPb^ur/&bdf,\</(/VU"Ejt5hcP*B+dAtYQf9N'jG.7oqsaidMD11/cd(>)1#I'=1s$Wr]/%U=ZcV,^YtR0Z0,&WR@$q#%Cg<-(0`\ikM+!b&g)egRY_[3)tO,4@plgnfe63R?)FKX]LrHL?o7@fdhG;_TO@ZSKe?S;.e.J(<!F:%8JZL""(fW=kE&J2Jl-.KT4C8_(hF"Nf2&(?a/n\d@$J22T6+_+Z:#m8m8n7k`Nl1[%E)(.eu>NhS;j;fGYZ9h?f`]Bl\>KOi$e3X%K0Oi8<0K`7!(`L\KtXDb.C2$m;&V5]RI*;a)?<?s-*i:48XT_pAMB72q=V)+)C/m;FA#VC,q5#Y5Z0RSOtpOKOog=`nV%sf<K!fs%5pL%ekmC"MK/s(6,Oclg5_fP9R;F6TS9m^SPEaJPL/MUiIjLbP=i-;X1J4(=a!!H..C6jD93;:mbVg2;=%UQ9b6BO5Ta!547[:9@%PhC=)G_V'N]LY=dk5DEK^6"TTQ#XA0RA<MS)/(-AP=1"u5Z6`&*;q^XPZc/$$7'2Vkr$5KPW=1hl?#_!DB'>S'FPpm2_MD5(e^9&%1-lXd@k"aXRMIhl.<FW(7im8E9ZdLE@TQ[SHtr59YTjncn4aS?+QZ%jfI8FuUXc/c,i2J`hs6\]?an2`.i@Bh0@q9_7@CkD(C`-U%EmZ@G.h(O6p(9Y?(UXho6+JG@@0N=Ze/i9;A5,s/nAu,LDPed?2SmYQ')8T&PFL^"XItb+=cDC4'V3Gm,R9Ep.;"78dk`s$6sBa@%;qr-ABtt;cc$Q"daWqO_UJd;tkMt:59P3HbO/p@_TIDZd9I<'WJu1lC+D"d%i!)AT#W8/\KU5@i00%G63nSH=ST)]8Z+p?Ad#u43%10S]dq;rQ\9Mn`!*rmdYj+9k1!%F=48ZS6>R%Zhr,rq^J/g/:&;K?W>O\G1UnOG#PR5+fQmP,9p;)oXQ+dlm-;[":(,/t.DAF`',%\`K6?9IVYY/9GEC/r4DKj+hYL\?tnP7S[5$gd!*j6*J=_N*Hq+3J3I9AWnGl1<#e<a:2*ZWX?OIS>""meTt^Le'FD#$m[T6Q`Y9a%&Xe4f]#)C>c9VbLTeAN=MS8%I2rg"!E#k![d#]\oKssCaONHP,WohMljs-1U9GBP_;IT2"@$'V+>_?Xc+Obm;A^!F%"!Gi[+HYhh%>jZ&k+HrA81*/DD2JE^E!6>jX(UWP0nW2p3Kt+5Z@h)/R@RFc1'h;PK!R6IMXD).`53=8E,]4XrF)hs^P86VO-6]9@!dnf5n),6'%0^r]@0pbCeEdZfojH?1;d,Tq@q\a]R0q,c0JU'p3?AA+RH(:.H1D>h;Y<lk4"Wh<LW5(JA!?$)^E5s6bFE5`g$+du#3P^[>?Jand%_5<.CG(;V#%?4Mg+<@ehq@;\Ur"a+-"6PtQ2E])H3KC&65!t@*(#r640kFo%0N/S(9J,9qX9il_#U0h?8KbX:]&H8r+X/`#3.`+\%^+hA'GiAgDCdd`[DG5=dP%1G937Nh0,[hXIU2tHH)[AddJS\"dfW;3N3+!9Wk);/EcReMl^`&De.JZ:f%OcK\6]K+r0.HS61enle%MDWVk;V`K7B3l#pTJ>gCm-Y&'R"dH0$"ocJVX-4-Q;g1S1WB6l0OqC<Z'frn)+ui-IpahfUp[`BAR$PKF-U8up<)7QQlo]9Y<+L!%`Yr3qJh_.jJl3b/=V>tG%h)q&(uK[q@8%4E/tr?!ERQ]`!6-^RYMtHto#^+7'u^Fm?6#&:[K8*7P$,&oM_u3rd)Bhu^Ip1kB*U1(%Be&G?ACt?0'je5s$sQCs?jos6[@"t?*^O>&nBr\^).OFP<LA:f%bUeI/EXTe`A@[!9M'+j1+ZR"U@V(09&D[ja*5s(`"T7T6b*4J%c>4Ki$`hp"<.,+SXCAW<1!C]?@KrrS!%M*i*5Le]6'r=@LS>fe%Zj)9i;lu,?hJl?MENQ*6Kq`_`C^#B`[V1dbYZ8=-s_0H'pJ#M%=H<e=-H(V&!`i'97\8e%.43=DX!XJR'>[!tSI-em6.H`oZH5CLdY]G"+"PB"JP]%s8JJ&,=I>$m>.'bsO=2cN$6H(=_XQc?:>EL6%G#ZI4fGkYb0ibaH:sg.T9L@$k!1LEm7L.#QKP]cJOVpjJ]p8s-Q^Dft`,;KTkTAFf2cGQ;dmD*J&i\(&0\S2m.2WRL1Pr/1)ba?j%`R9jd-CBY.&/pXtr8V#m&tEBfh;tF#N$G3m>I!1dY^+3L$B06*lbk!%cqqZ>;=89E&Qcb9Ae6[#+=GNmBc!dP_ngjH-36a(/NP<f%GQU9;&WR"RE6[[\S.W[BS<@?l66L1(qZB)W'?;6-5S1E+3B82nZQPP;5g6*@T3(j+%0S&t%l^Wd"oL&U">>%c5"l)KnOtH\R,TgQ%`Mi-3MR_`V32;7gPm-_4_\Uo=VVpF1W8eW\0P)\)H-g;/F&J_He6uN`Jssso3m>GP(ZmFOX9Cs$'?-@o@5Do5cZKb4.:]S<K6<G<%bfP#OYMt:nc,D"^d"]Yd052=3)s6n[j!niS.6eQC@Br^&p8rq$WB7Z/(!\MKdY8X:*c^$d.)S2?SF-_qR&1j9aoO9QOU2-0n9c6D%$ob\+5o=M!RPL<cQ@]ja0SR"D^KC$C":_-XB[kt/PScBtKus)8'M8YQA)/N<0F+*!^'YW&rt,?#Pq,OXB69nXKr[Rt\;;\/?E'fI%iBfkQb+f#:R/C/^CRgO(,teH3+bbhQ^*T/`-CCLDMbpCi7B&aG[\Z?n\$R;i$53DH.c'BpK^tOgpBsq[Fc$!#@1!Z'.dLk\:Db+!%6<SiUF<1d($T6Nd*N;RY1S-9@]X$+[j*=)qf)B9M0EG7C@1&AU&V^E9Y:SW>R.\<//fH-L-t,<5<PP2[)-\$>.S6"m1@H$@0[@!/%''9jGWN."I3ZBkW"YVrO?Be<?8\ea&)'Vc<-n`LGLbKK1H<_<(GP.N%pS^aP*^f]D)u+?tIe2nBTDq*hr6<bB]a"Eue)+O3nbVOs%UN<o>J'XaFpr1oFj6G)X4T"/_oIir<ji,L!2rEUU^\lj:e]Hq+X+TuDBC=^Ln_[F*5C5KkDhTM(%fXND_uCaOmgmj_*tJ;Es)A:I%W9mr`4WccQfJsH6IkI?V*t(W)jAD0_hiToJTlN9qG+D<UHc;QOdkf.4(mBdJGtLgMROKg?KaO(V@PTVRB<8a5LSm@q\Qh2qJW)]u%SS0)NMF-j^A,3R9P,9R(ndUJ<:PM5-@8gZ=?@;h)(J$J"n^%NP[S:9.l32L8En*,RdD<N.+$Ftq5:>%nUKWI192:jILrh]ubrZYD%iKm*N,FUOGRT5m<obTWSX-7.#>J`V7,Zh1F-TNhh%M9=^TY6D?*;La:Cp[r`0Jq(u(ND#8:o&R$Tfo/tH#uH#4]\e[@QN@4ge5QP%C++Di8A!4%rp"8CTW[VWndAU8/l`l^pQCm#oKao&3SP>nKG"Y=(mHZrqko=X4J*Eo3eRsZklR)7+Mn]WpHBiZ*K$pV*QhcFYX!Hr%$'n(c^$qkI\OLn(2TLG%:E+"RITO9bV&0c#d.Jl$jUgmC58T5<W9RL(4^fDMW]-_!iN@#H?WJg!U@rcs:e?!gPhqA0_$T6JN")tL%blhhZF^uN<A.XoljR@?66^Ulr0j;U/Q_]hhLQ;A>4t8mc&(Y$/q%fNe+mqfIQi;`onW_C'N]/[&-p#q#9(m?al>61./[&e,U3,dZ%_-W0M:9Zp7%A#Z[=uopUG)jH(n3)\&!NVZq&P,Df\_[#b.cf8*rM9nSph<KMO_F^@ED78bks`eW?u6F7D!_fi3A3.0C;JWQ8Hfr?%MLK6\eqfb5>3AK4EmU)O=7$7WE:WZG1YL@9%G`G]A5&ej?)fl/LkkgUhl4[1aN?fJ?RdU5#8I[dGsPRk#&-]$Y[\DhKVaW;ddFIM%oZ^o%;WPmPIOuRH]c[)4PS*7('Lm5(`kD7\+KI'P!hR&2l^u&V=2oT2PWXKte@!Ic&reX*96F@/>r:f:CLFQL&r!+h<lDVJj)i`$%m-+4fXQ&NX^=$7r2Y!>ri9H88dIs*>EiJ'F0j"94i?*l[,^FePFr6AL)6U9D+%LX.W]N9/I_$+H"\3pUK7nmt3fg,a]4`#ETqM]Z%:!fs;iitle#k'kW5"hOIJVVIGMBf);3biH^?Egb*/s:;eH_>/u)SsUu'p$3$(30H(^t8;<a?HWq%E#5Nf-kbr='K9JOB7k01/!K2%3OV?<LsWb&luU,LkT#0"cO>"4a+EWCl64CN?u<rM*fhg.k[%s@L(E&n3iqV<Hl4+J;[P$7Kn?7B/=@tu_]tWDNi&sodms^Y]kG2M%n+:Bu!jLGbM-n1>_"kC]2Pa.9TIKG15O^/L2K`gD#Bii6+kqTkkPj[I(+U1#"!.7k<QZHdU>P3S09T<ZMPCiuRaRoM((/@1`*/UN%f0qmQCi)7U>"<G]h>bu2=S!#C>'=c1N9D+NBX)5[BN'.I_lB-Fg8-;@713j'=&bP2cd0#.4'k*U:V*=1nPZG1pY'EKe?pBP^=)QJ%M_#6Bm8ZBY,HDt']WT*_,*i?A0+su#GgdI3l*_^"F!KFe`*2>o%[5O,(;SAF=k[e2XXb9aIH^99Rr*H][2ZtE]jIXLml":i%#;lD%p-JW'c1N85`4M4k%7^_gM[rl=p&RdIa#mV`D$^"&mr^mB`YnHH7T$bR-,^;B,;dg&R,Pb!q%dBHq@#*XhT+(A%4f"$\nj#NbT;,F%rV0-[QI/PbQDd3O&mf)5*XX@lnjF<VZjGT5<+q=]5UsFc'G<6];X=Ku]\;":I.mp*_A%="L:5W5Xjg'ik6[I1Ya_f6aqf0<m[A#j%4kOAt4J'F##[p_M:C0E+r3\oLUQ;;h/Q)7V5,#.H^lc<PG,iW;Qd]0.e7Y+j7H;<S*=OQ#':)T@S9,>2.ip:3^>cijhn>8,[6<0p%2/fAm5.di?'Pk^qkkUe0@;Jrr0Qcf*cgYVPU:au>AeSgDm+ip\p-lF`aXB:.b7*A50q4G&c]s0;O#hnkQF!T'b_jd?J;2V?8k9B`%kd@NBl!2$;@M>ab^3`c4r+C9;?"']9^E84HCmX!1(W^pDN-=]cdNqHh'!W2<!_fJ"@BF6H);'Y-jK-kXQI@Zn=CQldWWkpI_g1K3%O8-C)oqG;9:=S<m=66`e;2^.1[&!l*?f2c!!m%Y]'<9Fq&?6#(F0Y/Fid3J2*A<rNE2hh2]Ik"J5!MO&So$tI8`(`pno]?%gnV'R%[QcElPC6"CiAAf,`g=p%]mOYb=J.,6gXa@uGAHjpNbrd:1#&rq/uh+)pI/^C$',Z"1`'h/h)%)0,&(37Eb_UR7@;(C:c.D3c&i6;%K`!XV2m@0uZARlSI5r#F#6h1[9.n87lD$e_oUo2?ZKOp.D+;tE;/o]@YF9EJb0']X.9s;VA.QrIU".uql<:tB^`bLi/QH.N\!GkB%;A.`,(K8:(k4gb=m=7HlMu1Au>dac>!#sd'agNbL@0E4'689q\"`0t,CB'r2c"@VNX50`H0YJ9-eT@HJ9oqVefDVE-QOc0"."%Br%C_2hc\I^[S?Y.=`cuO[+@1o_kGtV(K+17IsZgpQQJ(06TNF:S'*NQrU=@maBYFVh[h+!Y9NB)^\O.ABfN!-Ef)0Cf]VErmbi*IP*%DAJH>B4n9"2*!PMD=?;0kuZC/aK^.d^S:-IA=^YY#:K,MkY?5_b?9N3/b#9k@^$D`p6.X,^fisn-J(JLo3!0P#$dJ,Cq3UtB"Da0%"*lE%2\XFm8C(k&44RE-Pc,DWEgR97j(T<nU[N*2DG^S!*!m)#O;j4d%1D@42`n'HfZI>[L?^YY/aScUj1Il:A%kY6[Y]@]es/'=%Lm`T:4]-]-D:<2\QX\"0eQtqiRYEVjK?\X%eTc*%@f'II-9->>>s\3?W_lb3>C42_\T"EP\p@I^8<$//pYS_Qj`p_mq!,suY\]H0%>CHL;.P?$iME#<M]SI76P-^$OVb\X+2>gO-eYRo+f0.P$Ai&5*F\B/T&Z[XKdl3KI0Upq7!4R-E_LTpg=)Hc9onESo94lDAV"I@q%=7\r57N)R@QSV2UZ\f*J=m`N)\QIWjYcY.0UQr#uS)I2R7$`b%T1J'HgFqqJ+kooF'r)E>lOm[7.O;:#MD07UKIsP4@>-I#3nC+E%N7mM78n13BV#"7-eO"qo0C(+nbA5iNZt#L]J%;QtWjS)@g.,8:%DGVumn*@lft8FAQ<fB\9+Elrc%NsC'08)%L+Yf!^"6OjmmhXR%'gj:Ho81FTD-g5lnm`DU31c!8J,ZCcF]c_skM#7e3m]mF&;l"+2`djp,]'!VQr'$CK)p$%i1r]Jhs1!Q;5e8\U0LcD!P4\%31r:g%n%gdNi$A`m[GdObS<c1d7"dN8;[-Y`&6aSZjE6.ARL-C+qB3W\KoU;uFWJ7jo927u$*omINl;L/lK[^E-G[!PXb^FT]/*`hWj580%UB/Lm]^HOtC:4E)D;Y0;]5!TNkDg$seJ*98JagqukY(*Kg90`aK,ZHe:<aR&`bQn-.?7>[D%We^b3AUc?96[K%NPq!MJ-5@<cl&u%4j^@ZS4^#3<Lnt's!k[kPqiG0k\\(DKY%L1KqF7L@5O(u:(qY1QOB1?\Zkttrr(C89[u4Wm9j7+S.moNi@AAEUc)4E&]aOW+!7Vu%,dp`GjMs!Y`2IDjM:E5/l\'L586B:sYA0*V\rRFE;DVMg+<(n=eUFXT1;tJra6!<fobA$*^(ak;q:/e<>^`-\&4/mpiOHCd<Hs0)%7([sje6(AN[YfZ_^B[:&FVaqHo9&D2fP-NN)FYFSXa./-AFo8j^DgN.QiYCP&X6elE?nbkH0=lo^V#8PE:+>7jn)J$UfN2P@L9id%KYi23%ucc3fXL2Rb=,@M0=QX)d%^:mme:,R>.2eET%l)qe$9P(Lt<:j!]bRerS?on;G=I+bmbJFMtto[j9)`_>16k"8/@f6&Z9E:%i)H!R,)WC-3(k&?<?*kq,"o).$G@F4Z9GGt6\CKn"Hb#g^ZYttKk`K?*K.AQFWH"`QN_c\Xc#5*<9uBYZBC>H#<Tm@]*)R1\:?#V%e?jNm]gl"\`@@CEWA4qA+>?RZbO8NEV0Y*'R,jK%fudU494pIL`fSqLekNWD&kV]?jk]YM#E()#-]6esh;,"Gs7)D!F/$H,lli1N%?)e_H:*u%#H;:+_)+%'7ECAI04&XVS/sfS'P!T_@f&)@<*(-fINj1-%=0Z&BW)#qJ8ZGcjZ'ui9\2ru$JRAp:$piXf$lP697$aQQ%2/"*RA,)3F:$TJD9=Kd]IHY('FDp<J:G2F`%2ouJ!#20!+$([HSn'(:l`9"rZj]lVe$4j!guUo/.9V+,*/$*'jaa-s3W^q@@TS!9%i8m;3JM*"Q/4,Kg@X?Bo;M/75q-ls)16]QH^5-)nE<5Xel3/)0VV:G339(bDBH4(?@5Bt<jUfB)_RH4E(q7Y6e_4NAb=;.C;`8&S%gSdCG73XBV8/+.`UGsOPgKE;]L)`8cN`?KLIhPgPKHXiQoCsUT-Re7JLomC]`.\u_\k2,p\NikKH?dU1_Grb5A)nQ[,5+3FN!,dF%B"[AbYcA%qdN[eLE.@YQa5^pPfHK5MMB[^LM9bs;krg,'P+@`rXn\mq%&?^n^47[k2\G28[A0kaZJK'g(^V"d.9oR]/##D[bMTiU%RJbW=A=aR/Qes-Lp>cj6,'4`bD`.f)!%&?d?'b:UE#@b\"F".5\Yu)OaMP_8E>rNpY;<4[3V=$t/D8h.dq^neTi*UKDniL#QBC*E%-uNXK0;:>(:ueU6C3Cdp3%;bA`8XbD[cg%ED$,Lr,m&r4RqiUs.t5fS;>-5*","`eH+\$OjVku[Y]I?gbBPa@[Sgb-HiiH%?k"MF%cq3FDllk,EIDpNO"&srI@^F?jr-?T=K;*Q;Hs=GI5A4iR)Jd=HH-o8--7YKJBUs-1`78tt/;>7P96>FIY[War6ZisCq6Tu_lHl7*%ntK>>(XR8=S*\\C#/XA!p_(=<%9AssLGt+EQ(<\Kf!Mb'U*:DUYT@k^&H(BR3$sKF.PdO6P.4`hRX2Q<'Z4)iX-%ZMrF-mAlGQ\6%r;!tk<nK:n\j"l<%JjX.p\)18+_MN%(MM[Td4S(C=7j656cU].HAp8403k0K2)uafaO.O()jKY#]n/,1FtKjFU>f'+-C7llZEBVW%E#DhN&,W.4pU#<7<U+_LgX,.\-99jg`,S\>3K$JI_&Urn1'0i\oR'%G^3g-'gD5FBYoJ%qK@++%>=OZ,SootLicJ!gGhoa!Ws^q'%&3&Kq1%92T#0Vn,L@eGM!D16!X`2pq2T6G3`!.j2<:EqWO3?o(Y0*H4`t2;h%P(%laV/4WMSG8Z]n`gP>NEKI"-=,ToWcIZf(Bc&%lk3(E:gK(_3p+Y%:\n#=VEP,6B-':`R`84CQ=rLdYfKIB/Es,L/?@rK&L)0I03]uYhe_!3:3I;&r&=s$5rVf2n5(aU?l+Wf5*P@C%;YjY<oH$NaTL)D3dtK_-]>,9*fQi?QNJ\:T'ae2FP7a)U-rBqgM%LmtS2+`G*pF97Un[<##A[L!NdjV2VQO%>;N^U#*1]tZ0_j_%%=u[7+Zq-OZApC>TR;e`)+h[[T$'S4pit.,XaV\3].h`#nj0]T1FD;\IWT3alCb:?DSu[7uZQrgJ>nZ1eFL,c?BltuU&R8j4%jjp-%`:"<!\L>VM2VA[@pGg#"Ah7J9Z?#",7FUUe22tH';N817LGS30`)bfjjE/IAQ%lP1-MjH\K184FM_,d^j(:gmiO=lK"uRkFfW$A4%^Y?V%<(*10^6AbC8rAMi94<MqI\?+F%d+0h;"rV#)r?hqneGTTR$eZ:Soof-a'#biB34t^U1P#12[=Rq,*$&1&6@WU6j%R#g\R::%b:"809#NhLejl^n+m-XZq[4.5<"C3b^oM=9[GGD1\p2Ag.UYS)`emhI3kHr]\RLUHJ:c$>NWp2+.St9@.\Kl9=Ppa0%hj%aoC&]6%bK3cO.%d`T3Utm^O9PnA0J953W7rNaF]R/j'kCV,MWCY5:lg,`%cC6OqBE0$_\#Vk)?P(<1"5f5p>(\sJ^.hITi?0Q1(#cV40R:+%$)(O>(j(QhFRAA<YG%6sC"_"sb;GET(K\[MCLM?rnaE"XH"\&M)KUX<YS(8;>QaZNcj$6uYXho$)$Hq3?cAc7-oO?Xe&@94Fa6uF%25SIhJICOrV&ZasSZ,LJA6Y=tX^95s)5Y7V/q?@$-%iL9$i?Z0af?t)G[lqkdLZhric@,:3$Oq\`C+SVo0o"Q(D)KTp@B8CjR[=c%A]YUM2jbU<)OE%e,/B-eGQhcLSGA3R5YXifY-brO_C],\Qq1AfihAFJ"OGUX-sB1g5eQCa-Mr6Z#R_5,liOgsWmI15*#`&j4YQX;%ngTs`>P,`g[\r`fUF-u`chA`,/kIr(HlUuE8<Afu6AHeTAq$n(EKHPS[Bfe'\I[]VCT>2!#8WpA3<JTPi#7(5Vb%kk7"UPN;,n3f%2^2j.0ssR`Om7aUP0JoHqM@k_%bj$l^DObS.EhKL!rTCdA<@g0A'8Q;9Qj9ojbg/k\3SUFQ`NXa\Z4qnfog:.&g<W25ngFg2lfF]%>IeoXP?)[VP@q!WHa%Y6?9sSIYr*2WI+mG!Z)6KT?,Gr>Y'*4]2*sMM]c+FNX]oB[W>c`pgBA]F$\L,%MicKCUMWjM9G<dsOoT(h%I5SW4&4<r)T$@S,aPG@Z<2UBc+1,.)*:>(sGhaD/6ONVu:#!+4ou:^3>%>,[G2:`-?(b@^BLIpq4dM\W$)Sr*53%eg?FIjJ[V#6_%,XthI=RU2fUoH<_rm;*a,["Z!$P6PX+,0tAi_Mte(#P<uk^Y;2m'"9JKdB)=l_%cBHg"SNf_K7Kk\tf-o?9td2&q1A"K(4j:;]8i%Kaok#a<JbQQaJ,\a$]rH_FM]1+W3d&j+Sk=eW7nT8Z(g[JJm)$UhstjKj[:g3\CsidB?"1D-6!HQ1.e+;A<`VFGjhd:t7N+iE4'u%+Shf<SKD)u'%+SH+eThSR32d^,E4!Z<'t-`B9lr>(8f^&haW9)G<TS%hu^-G"S6-P]<tb!g191$Va[1M[2aF;ZO*4!L3;h:=u+,U%0<uls5[Y?nZO9`neG*)2dk&o-:@`Vci>$5GjQ.CO/VZQqFB0#$Ulo`or%d=q6ApI*HWMcS;]#IV*cJDSCb6S6<X3XV6a@&cg^o@K%[gQ0YBJ,3U]NV%Wc1V8D^JAEe"dW7)@`C??'k%(sfnX8J@7)Ku0Zm<d[A??O.:/)_2fqXd[+g`eSa7(*#mt<"Edt%E<(1t$pZDKn%*=6j.^l/XD?Tj9`jr!*2?m)==kb9,[IYY^cC2$g$cICKIbek$GZA/T#l/H#I9LP6`/k37."iHpdB3b/,LtI68,`F&^s#TFfb]&fH%`?8W&jdctc4;\'P`!+QC*Z:/9$g$W_CSl1VbfB-O&UQ5..U2Ia#TdiP_fU];okPI2Q7j3EprU`;]EN+]4dbouZg1do\`a#'5jB@E%dkne%QDqU^LBq+-@MXDFC:e%mQRLn&B@DsTW6J/D9?^%b#0r&oR(X[R)2AW]l/[_mB=c:]$It`65b,p;k-P/ZWK8U[oG^a;nm[4S%%XNr_%BO$uS;&8&:e/$c$1/\OJ>6Ur(s&#UeB'@t!0QN-MJ,5K5^FF"X!KU"@(%[H4Xu%VW?b=D\L-X)S>ZM_Hf&79oTILmieeRY%`2EpgRT=8R!V,[5'IgWqGL:bGVhuHc-:1@a?kqF40QfrP%IoGf7VeMX?Q[OnD2Vs<,OQ@<f:W*[&OsB^LC940Uu2>13)G:]Ap;[j%BJ-PtWH+F3riRC*ehLFf]PpND=:c:L$8$4^dm.=5Jf2['Y_!.Id(cNqaA,*gFRAb;0&UQnW)\>]":5FfJ;'[>LM#n`bKj*P'"OgT%ZOfXT.-6'"\;.C`YZ*4jqhk/JY5,2#8)(a'M4K@W1(78>LFmRuUSM^CK4P8(f1%>l255.a$[.)'Oc.#H5IJkLAh!]cVI3M>\\-qM%K5UGsFst-kSP2U,3LdA[49a=@&`NLA^f-L,@F!MlF%9%7<Ua&^.VajK`$\]r]ik,fKgS;HhhX6,4-t)3XI(qgHK&[J@AKi7#bea`%%T>$m`!_8d$lVa8ap"t,_5h,Ja^oLbJBAFG(_Y7X)V(\+2":*!63nWj@HOEfj5>II!"O:*Lg'Q8P2Sf)I47A4EEiGg6@;lg[[lUJ%eQ[X!H*';_ZS*o0jP&?:3G=Uo-GkdI3V2NuREH]k)UQJMCS1]&Z>-u4ig,M2n^'Z7kUTmc*\IW2OHR9O>Kj^LO<N'gn*gs<?5E8n%:=)iT1UqrF*ra9&osXRO*@`7#!:Q.]HC%_6(QnJ;-U/B$#S`HR!0bN[9Y+\Ob68Mj"W.2c0$sq2ULK*m5[ZHNZpP@]'Sb5/8K>2e%T816E$:5`*)99^k_K9iE;b+>>X)01\Xe74ul\epjcAJih%]^00n]*+cX>gL6n]c7FaMjf@Q87l..`.&?!o]io-q'?r536-3G]B3`%IjJag4Dq^*;hon[Eog.d<kE6NjWN>(!?!X#!u\D+i?nAY&l<+!?(0+fD6_1p1:LK[&jjs.*jHu:ad*l32b<_-*Sa!"g^6*;FNS:p%Qa`K:Aa?029,0$a5j/=UAJOF:^=`[+kL'Me":NQc&tidM0A'-#$&Amt%4c/b1S+T"#>Ql&hab""qB`Hm:0AR"5Tq:q$`P@YFGFBM%`^,dd7(B%@F2XaXZfX?ua@OJXqQahRL/]f9SX$[\Y-h*'ID.S"7juh`LlWV'23A'ZWl+>"m$9D@)GSc$^d)HZk(HYJ@5QU:=/.rG%OD7$cGk9Xt:YG_5Zd20UPb`%(E[(+E@A@O[Xb\R.N8;&V[g%gJCR>?l+0YpV-eW%0BRt&Cn^+#UW4mhn]n<gmUGi\dkm=k1ba-E.%TTg![\?=6t=;WX/#k+7naN-5mQ''$j>Xe)BWjgJ/&>5aX5.N"<2GLj-FgF(al&0&F,I&7da=*l?4.k_9MHl*_hN?p_9<sGjmn(OL%:3=ne%6o]o@Q0YXO5!Se+#]!U&C\gF;8AMH\k5CD,Ai)CEKeEiFb#X.@3P3)g8Y`1ECg[YgEfslYH%+bYoBc#$6@!4T<Wr$s5[;$%bq7[Uk"?u"Di86>YbqaIQ=T+jnTCh:LGLDHOa3;QFE5MBn&%R[Z(c8!9t<NXE2XIO_Yopd#bjSo+AToDVSO<Q.*#FY)O=0A90@;P%F1$')!lem"%4%'?$c=ZeW+3j:fiNW//9l:t\58M-F/3U8&tHdk,kCYU-kUPFbf`BHC?]cdlNHA`7Gu<fSmSJL+Xp#E\Hluh7!9V!%-Ro1-a)C=QM1TVbaqLG1['\pCa6E=.L.?VXG4uo881#.<T38>]&])>LI%\NCV;bUR#l9FA$41_Hh395m(oOAR"U7P1H#$(EkOL`C%olRQ8*YnmSG2sqP+Y#-tKe5=>ee%;@(CNJBL&oI/nI[),K7pW'A)3"XD4::MN'g7@g=-:&EB"h?KW-jP!A*Lg#7IdEXLF?Dg?,(e%/eN,D%XG7$:sSDf0ER7c0KIBjE`E,qf3U_L8$WVdobL'&UcU83!->SQkG5uKCfni@Zc*G/,Cl6un_hN&mp[!);FqA!1IE#@pKX2\%@,m?6E!WMD[p48G>?:Mk6A>E#B51VgR56LSZ+__'RY%+fVDWSV0Z\(XC\Gm$U`nO(:Bq30&P1Eua=tFoC%91i#YG(lW]ai4eo4TK%Qn\B'a*LUgl0P5(kliL5&C6"djmkZsAtF)In[1pBKVPd'WBrpi_nY3\.A8Fbqa31d-^`oK&ln\a,Tt8YeaQioS7:Y.jX<[SRc+M[%\15J/P^-k3b@#e>XqR"P)KE6>'I8M;2+N(0p:-EoJ:j2udLiQiG!p@SH\A>C;;'W8h%A,*)LfG3]qjr1np:c@GIkG-J-\1d/0NWa%ec&L#@j;d4k:?[EK'q$f2BeBGO2fLg[mJr30R/cm+qPXA,"t%nO6VhS+I$@Nk@d/E5t@*1Op9PMTHcI"7%Ds(LuoW6fLP31*J":O%*k>aJp;!DlfTh7#+>o>;/on;RVhbY>%Mp;$'La_>2FT]RMg(YW_^!jr4+u!+d#]gZ\3R:RK,P=!R5rJ#@68"P_KsWm_N'cmMo-)A%93r3SNsPF#WpFe/VVn?4ih])u_E(a%!W7=n2E03tXC@3X_kN#ic88!r4f]mbH/Iri8@C+UrZ(5*N3-j:Q__3>h3*:6,CjtKHas^j%QV(FojM5^oj7+pA<aA3d;qkr^e%Z'&(5KT/.nH]@@jTQV]I#7rF0+@Iimt*g9@^NlJjVVCqd:b>,'sTu$PmK>>su1!DR$,@^W1n_%()Lo3!d4s?:mun&-!4+g9+Kq6>:+M/LQbuYR;u7plTA3f;;Hd#UK-t%fRragm]9Y!<o<2JW04_j&Vc.,r^8Wt&^f)aINJYU!(W!)%`n&BO>:nN]lD^`<:]h83(->CpX(`-@RRP-r=$9H%SJM\cUpa,<(\K@WVm(VK>MTK4YTuIA`6?Oo)U]\jMRGoG8e3u"O.r6&&krKL%fUA:"okH(1P5SCXnn&#?B!hoN&>K;r0^64^3??<5JehXFmSc<HaKf*8.rC-ig[M8P(o8dT%s_4da,B4+_lcUcjti00\ns[2(g3en%6.=*q"YWNC=QRoZn65L];Q>_1Y8(l2FDf8-9.Zb[+5:!N4sq^A?_=,G@V5_Jlk%OE3lJU<AY?B&`LCU)Oe*,hX%F/Ao\\Z:\S?`/%!(>f\@F1bO/KeTVlf,pL/T&>O39$1Ar?s6<=,4g0=:1*-!"pZt=s1,.OKqua`!@CaejrQ#_fm8f37;UT,YeMk/4[Lq?o7RuR9VTu%:2CJ:0KW<TcIfdeVM_0_[9BN[UZe7JROEdO"Sa+KKlWo!OejWL)mU)K_pGXuF24LI5"OgqI+t;PJKSQ7^8M/:Z1VN&9SKHT>GpbZ%[M!.7G,/NIMlJIPDTUuh<<7V!/M/s-HDjtZ<5_lL"'*H(/;32s:<"_4,c4V8C)]<A@)99b<^Un+jt14HiW;s;l8%`IeH\BTO7#id%g#7JtLp6Ne>:f6iY[L&]@WmQ_<\W,::()!*a[ejEQafhd=cphI1-V/oW3KQ+6]kk9`',a@h"XGKCma5!jaLHl*]mqgJI<3%Wr*13%.%`5bONp9115f)^&-/^jf:['XN/];>P^12-MieKP2!X5"13UiG9(;&aC(<#Ad$LG"ea+KA3WW:b6'=D41;W0DVI]FsS>^1kiI^\F%TrQ@YC,nGB`Z8'YeK@1k,;uRpR#9\`=hb<S)E(3t6Fe'9DMG*bWf_`##/#L#*(FQdV8kE`#k]DX4+M#\J[Shs2Y?W-<mkgUCU*+>%8PPCMP@[sT`?NrJL5:!kQR00nDE<q=A8F46/.29m@N`TYkuGN.2Z4UBr$pgeN`D%rMIeQ`j]#:"Jgj%=FQq6h4B=6.CU7jJ\2Z=3%6til4(G)Hi/g6pfnkkI5EH1SN1I[I$I,P&^UiSs7B#Dbk`C:`367u7LLX4XUT/GE.1A2H[IW,)dB:Hbj!$DADXjdsC--K=1/*[2r%UaW`&+de#0H<VrLP:gT#7T;`UFCJpG&RQ<'LUU7RTMBXlLLAeE_l=!I;t;><LJ+Nb>LQX_8eOcSRR)_u%Y05r1&g)=Fah0A67ZMH%[S:0#0?/$3>agE7VE+I.kRAR>2'%\W,":-(9?p'?Bu/5Jm;]<3JETF[[`Ymg?`LVMDBR1Jc).&</8@N:11"o8Z6_g<\t3t&@hN\Z%<_Uh0g?uWa!-Q5+e/Tc[Bjt2lU=K=5,3$^UW"Hpi$3Z9,M0r"E=L8A8oeF;j([T2CGGf==qOA1shVd68?1/D($hd-6KP)I`8l9BK%O>'mlRHfkXmVmdbTgo/L")<E5qgGgG%Bb&0hmWT*NZDu;\QH]@]Cu<S=A<oFk1(@oEh"S7;I1>uM3UDU4;^T`jFXQ9VsM+?dOkLZ%Dt6LH-Gj=UKstNa8m'Nb&q3)4V#>:Fr:>-olQ^5-FrkGRS`S4rK`\L4K8KJ=oG4am?()Is3Chc%0S9Z5Hh;pu[OHNAa2]LWV#j/t%NXiV&;i79Dr%*oh6*XSAC"n5ONM/YTDFo:<@,I)@Q7U-SiUq;D#.l0X]_?c'#u)m6MU3*=Ra^71(=.R181gdb>hr0M_^#X*nZmuE%?O[s['GL&nTYaUUicm%M<M$Q[ao-Z?>^P*PP8nV%C[VkY;*kJF3a1N6W=@AYU-l4nZ+=s$%WK1gD8ceQW>]#/UZe8BAWrrFhXB+f%MLuY4A47TD(cGkej_:0<LR05=Bc=Cp*JL.%&R-)Yd`N=N1_42!aV$G@qWiqM-V2qN/.mf!neo;+rPsNoMdhb,AHB:Xa[&ek@?PB"%_;]H;LP$l]d=egd$XRKY$31\`\W,OO:4V$RlbS26CDKtjZ2sb$/I4t<'k'U[4s,Y^W"sE'\>3DA"+#2HTBW@m*<."?Og/s$AKUuk%RUgSL+SZ@K3JYCXXt<oKC^&_a?fZG42qhXMF[9:WPXa,(Oh(Zd<0HTP'm`N_eC6_f>@P0;#uT7L-9).q!7KU!Pcuoel=^3>c<!GA%a.`rZ:',r%=Pe=Z%B2a(WNVF9Ij19u.V[tT>VollHE7/A*m,6c6d5-gLCXMX43_S,dlAoe?=(&?+0WEb5#=2TSA=/<O\V;Uh[r$:%-+(X=Rl&`dnhD_geM?[+`,1>b+A8'he\Qo789(>\&P+WekJk)>iE\9%]d\'_&ikOJYX.)-&o&kH/0tf`ECJnLZ>nnm]GR^4*0iUp%>M^:hYa#<Df+uVCM/'\?WAp].<dhahHQOaWGXDki"IS,U:j_fNrOga7,MUdr7j9I%I+["S_\[/jpp@BJ;HLY7HT1JcMZ=SciNc"4%NsU2,L@;oq[:EMnCbM=9.H;O(<\*Y`rFD(%5EQ4E"E^B<$%]An4H:u'!,"[T$3kNL;`eL>c&8BbaEnH%nCm>9(f-IA#8?T3a](SO%LM0[m&R(F/2q=tM<h_ojB'/U0;nZ5XoTC38WLoM,mN1J-qVh]dWba6CWV`%/:Kb])pSO$"4_U#..]<LX#DP1mJe>g).s!kYTi"JP%!6lbsoPs#;?bI3,i5$fNKHI:gncqghWoAXjL=eVP:"*Q<YX@+UW[+W0W!Z]&B`5W1=p1tDl<En>-=U'#7%LFo!MCf?Z8R`p?UHIf%SZt5FUs`MJ(_4^.R85#ZXan-:ffEMBBp/L8oT%fR6$BN4hnMChqS,0\8c&6Y>Z^n`=0GZ)b5[^ko\R\SIJLX,pY5:tELCIS[Qbi2%f<\h6onVQl?GAOr5CRU$H@(*hF`R)k]DgcqK4"WDo&=E^e+:thS+Ei@hO_FVe\Q`!qt9,22^`fQS:5g6n`o9'MZ,aYr;-.h\')P6%s)\(TGA$Pd^\n$(0E7;eqsrj`K(JNohoFS0ri:Mj3nW>"NIN$cchK<<1>2p3\[F$\mp>udNrM9@lJU9$Nm:pYZ[0B9Sm8pn)kOfj%TZPa+-+=^e6#HUBM[/+(QaljjhqYsBip<<#-e+@)cbJ1[RlBk&YPgP/]rB2Yc[L*/p<B)uPH,K9Df7OWqEI28+*bA5]_AVE3.$)C%g!=,ZeXtq+g\fRu$+?I6b64RH;k6U`_NSd53Nl,`pp6J]S"KQ>jOO(\2k-EZmJc]e5Jic=Df8CsIWol(h7)RFRm5mJX24V^,<WuH%o8AgeZ]4purpK.8jS!ok'V/Dkg3WIJl^R@W]tV#Uk(inMp2O0?o!;TG2F$k`2;><Hqpk&\-E'`.(E3Uu[qFm]I!`JN8>+d/+5C'`%`V8Q!DSP$*&DHKG5Jt.;Up7+63d):l=):+CEm+s[o:qZ->`P`WpR54JhrA&7Ol+%IYf2t,fB1BYCKLDIH)[Mb:MGlV%J'+Kn%Lr1%]%c8s%j19g?01FtgP[Z76+$OQ:U)j"IeKq2^5HK9B4o0FZ1MdhFnjKs/Atb7I>_\3eIR_fp$:55hjiN:A"`i`X3i.dh`pWem3h<l%lM[4@c;+E3p7_6ZKQa]7GrL(soD7P?m*!kAMhd>$o5;"bqP-:#"W`WE07>mAX>g1PrO:roSB'OBrijqJ8[FJ-n8b"j?jt)b(FM/V%q:BiB=(bT=%(Q2Lq"W1Coj]"J?bO!5q([r<r8K/>q;ZEMrkFGrjhEahL];g^UKQHNo=K=OoNT$*pNNq@+BlRQYKsCiO1-kiI2HJM%fp=`#O*)Up65mtSHhu#;,nG1ch_dRck_If9jm'lhD8J3K.Ql_UEcca*h=[7m26'rPe=2_^IlnDS0YM[FZZh<*[)Y/:3PYOdo'COX%B6Y&idq0ob*tJglGsqJam.s(]S[n(N;%@cYIm,lBn-JN:2MLPKN9rQWh-3jfkkdT9r*K)=:6n,]jLP4YnlQJ1B/e_<dCX`lC<4uL%f-g7b5?nHeYp_hZl2EMK;>en(7CiEos.5e<^:8W=okJU;`UuTQZ+IpBDcc,2>K$*71k*q>S,Q<;CiYd?9h>G$kjM;-N$`HaK=bmc%gh%;roV-$siBqAEPDb]Sih8UZ1fF$W)`XGW'"5@::F6)$8&ZqG(Sm*RrqFU_7gQ&=]$&I_Y4%^N7ij_'3eP1rap3_M*(.9UH[del%p;t9K\h2EdY>=#FrV#C?s1LS-3o+6Vh.cl9a4&T3Qac.eV[qHrk$U>ep=JnoZRp9nQ,^Eq7s9)^h)rPtG$WpumlTtaI!p'VH@']&%a6W=US+T_UeYZuq[<F7?q!.8.T>neJF.4%1[sbUmj0*B>^4(D`<m%?$JpPkGdJN!hll9j&c'G'rNtbO-`QR07j`I!ZCj4nk52U1W%5Pk*7lK[`qbHm,5e#b/9pOD_\+6tSLh'YG`Z0qYOd<:@"cJO"nEH6AKH$4?-LQh1udT3WlEkAY^`VY<AmU"dpI\h/lpqMH.J+P7@%h"[uKV_*!W[/9(5H?h7u[FoKuj4*Zj>-3f5@I=ZpHD$g6WOA2]41eC-4rNbU9!u4u424[1Oam.W5n:L^M`/>,f/M<J>JqM$X,k$W%4L@UPekgrpDd`g7Afoo"ZM=f5D1Uf17N]><2eT5TDL@,$=0Knfci:Pp?F[@i"N0!IfmdphQIk:9(L%(%>s,t[Cp@kP?Np3&,PQQF%VcdlNKBC,,lRe@'lUU18`VJ';alWU$e!#^=5?r+=?p1oF"Fn\H()-]>o^1bpGD')Bj(`?+nO$D2^-DF%o,9_jQ.qLlm;s7\pdj]J%ajp4K2K/NrL$1a$QIOAH9:S3-0SoFE_]ZC4n,"ep%i5H/2JWEl3/C(cK@jdUg=_2Q$-,>JdJ'1jdX4)q&6iPTp43ePj_.$=T5Ypk%Ai4MI"!P*tq)c?_DR5u&"!RAh&Gn_KD3s"Jh(#"8+N,%Dht`O\6hJ8[&7UiP^(5mAca/%4=/mVf#dHhUGCHB7r'6(/p-Lm430%i&%daj>l,CQtt8GCgbP&(*ShuA%QTB(PNnCg*3#9N-l:EQM.Z[m?A^&4N<n=IoHqao_45)i0NRn];8CV=j,a4/D[Lj^SXa0!:'F7s@\%2>(Sr:@iQc`LlW?5:Oj)=2)S-.N.aZ5/I5;Zu_!I+$U(_oI!K0r9&H$IDQ#4ci"MH9Q/DS:Cf1n2\586H(aNK"$<<I5&Ko,(+C`F%C*%W:fen-J^tq3C.@a+VjZDhR"!=0<Hh5$K4]o<l_E>'I;s_a2]42m1EW##!*g;pT;ctT;$jr9!En'aQUR1nb-_,+]`OO]#gVM4A%37U3^q.X@qhnHf"&G8X:i@3WO\bSY!C,_c&pIVbS1FmY"]^oOOQG,S?)GiZDqRh6Fk9J6)+&et^J&^37Z1_h3-[E^X_WbG)1Y*4$%@r2^Ag`Nfp8$"kbB]VfD:R_5*CM2eKrfFNPAF0n1He&+DX7i0,Co%fa5!/Qr/+eBsN5&?fLE)&qX2Z6hERc-ID<'K"%cPG4Oh67Y%);QJYmk<G^Mc8(PV,KVNBMYN%K&>Q"p>m)Sf#(a!5M3q&;LW''S:@iP(XB3jS\75%H<=79:M8RUS_S\!c)d>%Ie5"6o,SQWf_@:!%U*P@Un=Kl.i:H_nh8/mTZgm5K^RpL838""^43nbu=.IoNj`hsa-[%psq>"Q9m&UQmC#k]3I@eOj:$\^JBC`%SaA-/CqU=2SVX>+d%iBK5<rfaY`mE3B(Cb#;%6c$@_H`&d64WAQfD*#3f^]!lslun:9n0HS`c,RAF4>c3_!TeO3lOWgXk,tUPSdQX7Gh,W^,'LE!_A8'q%(4H5'PMai\NnOBOc(f\>hc:cM]0Q*Cd/+@J@9oO%Qqt&4JZ:c>GCe`Sp+F_dn1]2*kel:hmfIp`:\6)9V<8;ES=m]H[b^)QGC/c6%SpRs0^O9kP8LMieWm,n"kILoO]01YXDU2DIY@#'#,"lN\Vt@D.Yk,2IF"ZUE[l:M2=mO6_CGi<&hEec^]]h#?Au5#-5)]uhU[+tS%(0tc3cL1YhUHd6=B,;B9hf!nJ$VEQ(s8Mq\b&_HLYe0;sk+n&!;Y/b8Zo9AG:E.7gZ[Zmlg=qiUfEV$%2`GA^=.]pZqs:ZZ^!=C'%rp69?f,&)/TA?$NqX"(@jQ]&"iSN4o2`CV.ND7-([_SL4p\Eq*D9+lkn=pMiZM>rp0#h8,1NZ;b+3hsu`B!8]a'4+e5#B2:(NT4/%f"M"g%I9p/CjGX.g$)V%Da'$)D#]>0/;?(Q&^J6TplTYproRSF%38sue&D8m4@7Q9f$Cb;8`p"*p9ommm:("Gf\8%0I[n+=ik9iF%:WIXPQ3sm&W$-df(jk#VhKH05?#3iVT<:\1DgGRX*.-.mo\iG+@m!'3bE&o7m&UNU;b?T\UeF?EA$5!t9^XM'RWgX0s$P=;gaDoI%i0^KlP5g<aST"OUErM`>o*K7@>=YRYDJoIij61-<gV8(cc`Z\I>>O/T2RY\gGe]5dY^,^EE,'jWZ$C!VZ9>,JWGu[]T0mrpbuPj0%UmjSs7ZG`d6nQ>oSml%7EE?g>\L7HV#S`).6+JBq-m^I/3.ra%rt71;.orT4F?k'PrhnrYl./>ZWpcQdFi7(oKXlj?4T9>1F2bpX%*+6h,eBZA&ldr>tS3>h%N6QG&eJA&?X2iiu\*3Z(gYf-QW/E1$L*l31frOM1\j(XDIACH<:[a_a]=7iX(](_L1O-P"n,0'\qVqAJ%Q%U=\f@LfdVuQPY5Xa5]SXc;/rpX:LPfJ5oqnlHK1t(a<VT<]?_*5OMZE&?E-POl!mE)EpmuO(6EqN;<^>4:9I>lbV0QF;jHd^QL%bihhREHb1sgMdFGFOJh9henXSp2^:pESmC-r;e!!0-^95QUfD<Fs4n;Nu-L07J9?rj(s:YbMd\LI$(NQlfWj9H0Ru3H\H%7YWUEj%I8]LiL:p[(mQA]W.JM4;pHC&#Yudeu/XpIHPe0`6h'_<%)Fm#M7&JdEH$4<`gF)+Ng,?B8b2$uGqjcGi:@?\OG?8t(T+ju,mABGF%TCBlHkO-K:p]+Op'6sBrXohJ`diZ0GSq+"?hOOQ<k3W,]4hEc2,0f+Bo8gTr>[;i)H[^><OQU'_+fAq%4hoX(-bRlPa3BZ,Wd"L9%mEO7$0?0sCHt(rXSa#glam&37`?2;0[lFE2Y;SNOY.]0Wl`7L]Ii;,[cY_gdh"K.(JW1mk(RO,'0g0]'MZ7SloZ]Ha:nH#BpBOIn%Dr%$ZZLL5)*a!o;1+osPIIZ>5Yt$l@?!Q:biEZu$M_kBsf\Jco4J+br@$`4]#;Qm=Cn/Z^cG4qDq3\[u.JSDHVr7$h<8LqKgt?uN%W<?ms[@(V1*B]qmNr9W'q*%X@n]02*cLUc[2Wpt)r:KK6>NCn4<SIC8pu>u-=0KqfIX?P8+m_?fa,_)J2VV&H:VOP&qd3R]JlWe>%o^BqHs"s(.^O:HOqNiS:.NI"AGH`/^4$/aWpQW[\h_.Va4Hs/7<epf!.4CDPY;[h1DdI?J;r=-#rM*>PSQ21D,m/bo/j>@(\Dq9a%HgAKQp]qj*p%cSGch^'",A5Rk0(45-jaDrS5Q-`k>"dlD0kRC!6"M<>V$[efrtX>P7ka\q+%f]3.7Aie1KQM"p!(UZo=%rff4_Yb%)rH\@<G+6$Y;$!ZC@t[:kOm)Dhd0YpJ$[h=\mN,LXi7@=//PM7:VC,Jp5@OOnTqPVWDC/pg#&R.>*UXQiA%?+[b5Wq.5&VX$Qnb"%)<\?H:<#;BT/B#$G2JoGAp90In%=KsT/ZDX;uG:\Tr580^V77mggVr!<Zh9%k(c.G'\U)eA;rGBke4_kqsNHSMi=X!=0Knfci:Pp%FBVj3_S]Vb5M3pi%IYJ+po8(QnHdIFNIEX2(>S\Gh!pB]B!qG)IlMXS2_Wn:>:eIZO3m^oX&ir;c`ac#0997YG&mK!2Ud+iqU(r!%ir&*.A2BtXo]5$(&(b%\*i>6aTI=/aZ&5*D^:eo@EO(9cDl)hkJ!uRZmn\Db]Whl&m.TLP4+0gA5*@MXjQcY`S%&BJ]N7laT6Zp$%`i^AH5*ZD5T/!ctDbjVfC>5JYr3p<Cn].cf,Fgp+G`(t9?YtG!f4H-')*WJlXs7:Xr-PO0n$.ssf=ftVEji%"V_(Bn(<O1LOh84o%caU,(s01=j^FK\_gQSb2KJEH!P=RmNh4EH/dmi0<.f5e@[?#%sfc?ir>,:lTVu?F*It$+DT0D?3Ber%gIt$+DTAIoiC%GJUIsfrl%TCu,:.o3HrJ_hKAp'7Pp!G[+7qX=`g?[Vj"mp?"UlBNBc8<c^:nrMC(Iias7EnSc-r8R(4o;h[/T)J1@]a"McQTn`(I=:YPQU_kD%VuQPB1O&?aq!Y9PT=o[H+)f1uI51`pVe>G%HXFHNE/1id<l4W!nNBD=6a%rHWoW6E:7a%&jfa+MJ,(2H&-$j0^->-nIlR5\s2Q.m%U-&;7g%/B?3UGS2K,R'>/@j8_9+n^U=A#TWGR/X`>9=Ack[d1B3[64PT<3ob4mXc/KDDO]7(]Jl^k@)de.8<mIC3ocCTb5S=*e96%\[Qb4q75q.K@=J:`uFkajTYJFjqfkg6`lQ:T%TlQo7sIE]II0757e(O%o`&t@(L"WDI)G\o_TU=K.CN@D-D/2[(ZWV?"`Q)o4-U+%"8$p=j)<]^J!a`CpX%)lnjQk[abSQ7]L\)bUqqi(k#8i=:5?Q]VY;X8Z7q=m(AUNo4*7X%8]X\*`]%`dY-o?Vc*!qoX%l"K_9oSl%m)N0F\+\7T8aOG;ZFgV$ClG++:f:H\QjKU!@l3j?/aN'#(ffXf2G:;hT8(iaq)fp_"^`JJU-bKY$JTfk8U.W=AKX1fBiW0,="f\*%s'r&!UqMJ(7i98*1VSs0RmihW>O)2qjf80nf+!_70l$^]lk_=q:3*tP2?)U348AK,lg'I]EBa-ecXYuq]=Id_'ldr:p\+NMCd>a[%R<=4U)Z=4uTPn^dR$IDI?0m(21>HgCRt#j1I<3"W)>tF_@f68d&%#14qCcJ/(BQQ<s17dMroM,pl.ME$-Pp:[rnYipX8dJ=K3Vr'%"YZM@K4"WCi2clrg(e-]?aIWL^&%6mRe-<XN;r2<Du;c/#8d=jf5Z$(%Bk#hk0cY:AQl+./_^j.8Ead$\;hkC7D,qs]CF9A^+0W?%nn<1-Df*5V+s+XQ[]B49T!jAY7;2!I$ZY"TmY[',*r:o,N.!J,ig$'dqbZ`t+6`1@lLoe,42)qGhLs^$IV8Di`mM)m`-h<VQZpBT%kVf$'ENC$4dq[V-rMuFWmRt^g^@`N:kZI,3<dYN:*D;K8q2TEC7j_Pj8!>ol"Z[Pr[gI"uL1pdnI0L?,h\k6#@_A9-b4ZmQ#P!gj%*j57P`::/M?]QZ2bJ.>Fk4e0!)p5rZ)sbUBOD-=2mkc]r<4Lr,2rhM6&*#rKUB]bYiU5e'lB9o_F`!k>2D7fa?g#DGf<M%K6M-T\%05-^?6U;[oajuT^YO_*JEW=#8'Arh9mhDu&rp.SG]cjdEddAY9CBs1:;13?a*5,ig4>;]M.A!Hs`QGu$RC6lYpq7i\3\p0*5jQG`%g.?8P/"]!^ZK$\%4oQs#7pEY'I<B)@F_sHL);4JkcARI]A$9hhfir,&q9S7(3kP1Yg!/ihdp(LX7B-%e2K8]Doo=,j`k*7[a%+`B%8E36.g[O6QSSB>.IuBM?9<<uK>W%b1%oc8s+%HsFW%)^g9;)NdDPa7m[d"@Ol=[k:0,>;8^0A62&a^cHM/tappZ?*pY.W!)8N>&B%]QA%_T9IpiVql-[TD+uRkb7h:2p]g3ABs7`pSsUQLO!1+ck$*?%"7nC0A^iJ203k.IpIK^ZMrmNocO27n_11ZQ$D[$=o7=KIH8ps%^UbMh+$SupgAO<_oT$1[bBi^TGqb*(qK]<!Gk=&(0T/M)VWWR54UG2e7p/&>b4Ljj5hjOq"oA5&G]8+JTp^V9j#,Z+lCs^&Df]8A%Hh]WT*koo<c0TAWKY,.M>o^liGF3_PRK$*R$Y8TS3QFB8Cp<rR3`53r?G"O<]9;T>O4Ba#EL_-8q\M9LmZ>/@>O2(Hp#BtmfH"ZV%V6)VVm#_5)oC$pfo\5jG(NlsZ6Qa;pI-5<Ja.Q*9L6kp]>?(K.#pnE4W2f>dD7X%)9iKe8K:]5,$+1#9X4m8LO,A.cl0;8a>LNZ[%@FNc`:2Qol>-<2O*O+shl@:P%?,'+b?WfZ\J!_]gam&g8K25u7O0stl0%G>GHqK/]S+3jN6oXPajmtT1LY4\;pE?IGUUO`flg.n=%5unsh#J^8up$H,3:9SSBN@sd\fWI_g#O^"&^]0igi*Thuhcul_+-5#.Y$YIaIJ37'htNJ46XS^LE,kSll,GQ[l(*4plHW$2RpP+1%V0"hGdHNs>*tRdR@!d+e#9IVI.7f$HgfSDsnS0l+isF`s-=JoVd:EnJ+1_eHF?s73=<"jnf>a0"Ktdn]<#n_bI_<Q67%C8ngd=&U%9bq/3.7"e6)c.R22OZ?aGdc`Fnb@=8FZi/*jsl,2d=^#5(LbjbDX=hYEOU6RXCDQD[c-S*)GmIsfb"!dF<Pfa).\*_Olln$Vn22\%d)3Q*0mUIck[.Db:O4Bdl*Ofh/A+hTa/M#M[E$aNPXHKpPq.f;a9HiP8UIk3du21g?UN;o7H.RF"F)a4j#AX-n]HIk;q$qTDllU?%`elLRQ/mkt1%;#D6ek&YJP]S3V]@uAb<iluAF>J\UFk&Od!g-,gl7?+<,#]62:<r&O.5um"5UG+gSdaHrZZb!?5t,J4A*eK^inJ;%RuSi^Ru;_hE4Sp1c6_2m?/rsE@juO:GdAJ:\5?T7:OM!MQa%+AYT(dEV2AIkQ\pZCJ7K)$S-m9Q(j.<eXTf^QUMj-rYV1GC$mg&n%mK)4I`1l/&/RQ"5*mQSZnheG;g+r*N`QLaF,!V$F&;XMOYrDr,DYi\h.:&'=3`L!##EDgN9Cj>;Yt"]YdBTI!f&Ke3LOt>$d2Yfh%gT^OU57Xi?'t2n;pX4sO1V$Lk3c_Fh^D^Q!iBoYt-0TY/?FVNkj*`kOjj\B,)*<a.&n=U[q(*tR#$<.&j"&J(oN3>C%I)`Y^,%C%%T)Fs<"a:cEC!_fc\e6BqY#[Bk=I<WfM)SF&^;,Fjb@5Ggc"J8>hNlpdeoY1Kn8ZlQQ5<S49cCkcWc%O$^:eoa0kQusm-RO!E*DeD%XpJT_1jknCRL&A1n@8&*>q(',@1q`B?-d_n.^96WE@0/eOY(2H#"/6t\c7')n]kpY.a/'3Vn!P_:6C^bTbaE;^,h!RPqP=emqg29%f^NY)<B^%jPLf9`2h.fR?hJ+2a$(8gm,*$s*1K(!k^*A7UWg4>Q[a4mqY]#C?K$:Sj3'CXJg$*Ig%76Z%`HoHmLJK&[MTEQ15kJ0%<S;51UkMp)+m>[2SZ((,?>`!i7'E?V;Vu.$*tsF!P)LC4NMk0+Xdf(]q^dAMp2Vejjud7J_qL=u7-@8mVt%$APnmHUQLWMFLss<t%aPp=m@E;Hh7B-iUmMKr(FU2.b]'']8Nd+(:9lNk]b$aJa7<.-rTCi6)5Y\V*NYaD39nU?mf!,!Cn%S_),@YLlrlqdL[2]nFh^7l7%p228@\i@cd&oLm'p:&2Q-X@*iW<cK6o&HJlD;,FMZb_WFQUB.lPEQFCG*kYF'li$Q#?Jhm0O]>NICMUr93*Df&K]ttkL-t[BsGQG%*_>I-npSPlokHAJlH1bKgtU$(Khr0lj/D<2?Yqlb..i3'fY'EP]Xbmpiu'eAIYqNqd7$-/$"DlWZK_m%n1fi(+=-L3O5H9PDe2%P%62rb&;Y$.oD]>HuN6`JRPJDmW,UT';`=57+66+"WcjSVB_o1"!HOX\1.DWf`Hs?R)pP6c9q@Re]V1LQGaApsl*5sK$0t^&p)FJ75%U:VmUV4GB#MPYfbS&ZXmY)V;!7=$@b?]UD.GdG?Pr.U[u`k6"kiYf`W(3OR,BhUfGJj!ukm=K#H6WOQ['Vp;WW'XgcD2Bi.bKu&%%Z=K.;0.,_Pd?Es'A",&j"KoCm+0Y(bK7:dZi-J.2+$(Um&Tg^`YppjB]?f`UDE@K03Y4NR^`WOXIAKO\eITVZg'MLFgZi`n@ks17%Mu5$R/roQ')!Pgcf`Gk>m&E]hg)\)o`T^14l&4qH8eEn^'_S0i^:K<%#8SJ,E(]YQDm*If]_V9^]<d.5lW7`Jff,uN?gd9Cs6eF^%N]2.3,bpNg(@PsS*/B;hW7B.34?1$3+mh%bA;=uK,UK.enC%LSR=l4_`Ar\'Q=CMeWT[S_:,V]!dW<pO`6imhj.pK\6`1m@>?2N.%.:/=kYt0/n:$JZ`f>+Yk1t.Y7k7bd9YA96+(`i-ukc/_kWC[nRd]p`lfPJH5rE6T1Qc*$"-RjmYU5bZ92%fO5.V]p'6,n2;'P@pJ%)OnoHnBoi#A(#4mlW#D-a>MYVL5NB,MH)i@:e760@_Nm&U$fR'@&@P:d'<e[n5PD,@n!oV[*US)9geVVYZ']R]^]:I][2J=9KSR3%ZFK3JU`IKq?TkA8@LsVC7\Ct1J&61>e))O!)W!4((g!^a%j<N!,)fAWiZXPB/Dda>n[<"g'7U`Ol$hErR-m8,ngYS?@TV5ZGdIR[%UI8r[c@*"]-0nRM).pt0#Y6.LKcUS(bh:1WAg[hqnHN5iqHC/ehO?hB3j1%Um)Rc%'HVVjS@""?&cs)plFk`SdnW!]EGW#+d3$Aj%+iVCc;UQu.9Ws9_.3W\QD55W;d&&_T,u=B8?iS;A$86n=2YM6=K=#t(`1+KnntqOk?;Wc'>90JY>!5lB/0X?R))G2Ma`4u:XHiQ/%]9t.SW[BX/Q$$(J;K$+ZT'CV[PjuA&.AW]=b2-XoWnk]<HDQXV;cSA=3!%-VNubf0O;!6o4-=3s@l+Zq8r$-GF!%fTdEJY`.#XL8%IJs;TBosEDrFjoA"Z[k8MP23J]Iq93bUd8k*&in^]nfC6gc&^X\)Tp@U=dn9=8NL\5_B(jnGX!O0V(O'Uk[??$=ecB@j7%.FH*89%FDZtZEfSOEO#D=4d:oP>O#k9^ciK6]c4e:Q:B*@%e/3?\O<,/cGUG]E;[Sp-7pDhk23oe^;*XTR0=JPEKh"WC'm?qu]@h?$G.l:m%N3GK)3UETtZ<?UEN%Wf'o)uHa%IJ?o)Vhms41.X=:0'B2)fj/913Ig[X5dL@q0_33nS.]BV,h,c(_^Fr^uGs4<ma34a-;?._p_#J%cf]!on)Wo4OoE-lf`J)c0@S$V]Z6XjdhgcqPkP+q9qAA67@j?jlJR`mI6KtWF$@eQA!P7C6d9dgXQlV?q!9*A(E,/QLgu<!p*`f)%OW2/(_CVD,j=r7\6_MCV<Q@_"aRq\#IW=L0,6JWaTI?tJKpX)fU:*jC.2;Pp??m(-q,m+RMN:iWZuVU[\]=m4s.@"!DJ8-4*^JU!%i&fR.)iV&T?E!9K;bc`K2QjP82u2K^p,=4uG,8b)OIP%\qg6H,iL$lN;`#CeOgJ@@'@a:O_=*%30EcOPWB:X$+']GoBT+o]epK1'%alIrZW%Xoe$kjD?LA1d9%HTgRdn5/!o%W9AqeuP@U\L#(d+!Y*"8k0j/Wn;KYU%FoEEroNE<c-9\0_H\GVGNNjF`?5GTb#Q6GJBb%WS)jFcG2VTf9AO3%gI*Gr6Hk)6@F5!rDNQ$A,[@32MM/%Q`9qEO"OW.S$Ur[I\)]16Pel\KMZhSS$YQ'PsM7s(l(l,ou8sTs18j@%10<`53\>Z^fP,U;ia7J5ZW]HKlZMb@GWQ9`F.Rg`?iEoVl)JLZg5h=6)GO/rT-5N:H-[rq4JU9TRi*^JU!fu/n:`naH(b^s%Y5!I%YLCho,KN(9PRnc0\l/boA^;8MIHqDh+.H#n<l%6;XI=5#$2KKM(^8P1^Vnl'n-e`rSO^b>cmP2:E/,;c0XXX\TQY0:HV?g3]4!"M%$ut)b*MF`QM%Ydm6YTbcLJh*^5T9mWqNFqO'2a?2I\plL'hh8Sr%CY&0DB*#h1(6>7g"L1/j$YNXita-C?otq;9?,][VW"i?hb&X%-On0QUcJ>#E&:.%h7#BBB=Td/I\4/,'+#9G)$=Sl>BTl$=n2Im&es#%b>Am%Po'*p]e/dBKVeg6kl76)jM+ARhkZ99#$5h0*5"LW%.Kp[kapFj"M$Kt*n5Rk66=eN/."`dCE.S,KCd#^'>@Th7rh/c46Y'hur4S6f0t0(>L@(k-/?Bp&L;+5>0Ao:#A-Tq;80aIoinH6X%C4pW*5O(+.$X-j1[a<-;O5sgE5Wm4]p?A]O<Ih*rk(7qqRn1N9UHuf"&/?B1m9m4X9^X;6qP_E_:Pld[ab9h<U+\`TnoqW#rss2F%BM'*M)\*s'lBR^L1<2h\L2Y4C&$4raqNH8Ahb($\-pk:,dCHoA\;*hC[@i;tdn6`(s.O7?d])b4N/-6/gd`(L\T^)Xg9*$Oh$1Jd%RlRR(IP<?ERYD/+Zk-F"qI,_3!*UT=Zc[M2^eAW*W6[NR:\^=K+S%HuD"BW0K9!!(U[UodE*B0K`*oj@(f#_6,4;J6BA=S":#-4(%a\O>g/sMoYE"Z@-W^5(rp/>YsF-GY,eg9^QP5W]4#VTVjE3H"#OpkPqkU%SbpRmW3;jV=UG[Ni4A/Y0YemsRFs+p4D[Nsu@-/32D%l@3%glf@j`cP)@]n+fan?W\uZX&5?0%@jgMCEP0sh?s&>14!!c2'<)LZh1?q"7(i1?BMpc$9=dcL>A*m:<uk/#iYLOKqCK6E)ukG%!8pO\D:/C!"\,@`Ir`^BH9!>>L:QGo=87G\C,0\,ZZ0J,)af#F@P8\k>Wq3]q7B0h[]\#A#q9(['\.AdJ_(2_(_/(7YNIu$2#(mu%W-qI1hNLWP_UH'spf2oPefg\B>WHhqE)%Ho=e1]F,c["7^4`C'Cr6U*_r5`Ip^X.3%r8]>NnfME+V/(6Ih[sA)G\X(I.f?@)\s3b%EE$bn,cBW:=X>"*,m0'PJ-IT\9"7m:Gi/f4U.bgJ2K!3]gP/#8DW=#bGE<8*e&W\Zc(b&sZLMo[*)*U`iKl<c*t>+m"aJ_T<\3H*%2;F42Uf:g5i'3cih:<RHVRdHJ*<BhlgQod<F@fM,_PmY@3?=eOj!a,U,NssQk&uClam]siP2)X."%uU,;_:_MBLeAcb1O759<sQ<%.]SFh[%35!U^/EnDX02ZA&FPQW@X-n@]PsHO[]#2JqD@uD_dRrlUX;ZWC0:WdugB)GfZNL"O%a\e#?jQ9r./D7kt[bU@B8gMIt5p%#X5(XPW-&"eRUE:Yt2INL0p.+2&du"=@]mI7:mPXW_#Fl<7T*i4d1l?6D[+tdYY1[)*5V_S9/:U5a"D;=9TQU,r-/R4-:3p7ZC;Z%.QYZj.mTJ53W0Q$YV<Y*0TfSJBbT<''lnF/m7t%p;\nfd`pPYi77N:^O[YK":-s6j3b))G9LiDC=)<^k,I<MRfqdn*]7Fs6>fsA,%O[78A8@W0`TGn&W=^l!nbC1BP#VpAUJKS469105#<PgoT\FU8mn.;mET/'8@.O:N]j>JI@Rmo7Lku&4Jaic@H)oVs"5rW%m/#?sY%h8l=*@el65#e),^IhoA3V@GMQBVqpm_^.m;V'A(--)idW#e8(2oL@7PaaajY_Os@IP3JLUUL@[A9qiSa,2n8dZn&p/iL9#D8iq3<%Su=c?"^."U^iZkL!#7dWSOitV8`XU1ZZTsTM61a(?G^sn@tM(m;:IHp;f'M$Brl^@R20D9F?1%Nrg:oWJrVoUWM#5/WCk(h#2LE=%1/*Bu$;7S]9MH85QC'jD-%'VMfs=\&V6k4)+h>>0+D+3//>?3"I3b:!)N,L`?>,R"Age??2;9p<@%D6M#0old2IrG*V`#6uEB>Om%>jJO*kppTCJWZ]Hm1nD:7j]S:Ahk#.)6]i'QbuZ5_o>LI_-M>&U9bW'!j:lt_(ddpQ%>2C4I]_lFH-H7`)B,sk`3p7:hSS2cuCe(%<K0[J2QJZJ6UVI5VG!Vc?nIQbOf1uqQR$1Y<IRMkWK'UaNj?WMeQ#<kr.$^L&\hW''n^2,Y/))'.aICL1GfFr`jAYPBdGRd?n)HQ%`,.j1UhM<3<Sc5^NP_@(,R_8#`sj:*gLppQ:h\!;"M-n]$+$/[)q[PO@(b\)#A1ms6BuLCDo`;D1hp'QH5Up645Cf7Rq8n`=Gj$>%-Ku8X.%T!@PGgCr9W0?t\+ln<JTV_?IdnRsO)"e_0b%St^]D:CM7=1e2B=teeh#&bF'O58SW^t>6<tn<200mZ(PP1fY@4C[R?4i]%5+G&R3*JJ03EmVs)%'<bPH0]@;lMOG_Yd4f_R4!SA@-k:i[o^iPq6Rd*E$H,]d.??Bs0q).^?O+;IsiLG^pI1)bK=LqAal8%.LR4%lr<9]qVcEegm/2.UDM(iVXk5<It!7S-[kMAaL[R"F\$)+"Ju->p\ZOfrb0&;g\6mL*-+_V"@)+;&IVh]_f;mp=eiu=A]Ks-2K::o%GK?I!*lClqLPGb@Rk9B+Na;rnh_dc5hM3`D,#@?q1W)q*Q%lGPkR-+A]5>84'b@R23JZA=FN5&gjk>s@<7tZNQ:\2*m861/J.Jp*%T>[DP(W!N!?0;ZNg-`b3D=mF=B-;2Z@Er![ku^Df2!BRuK&K[-E!!ZNd>tK05W9K"/NdOXmDYiX7*h$I.nVo[*B/Q`%g4i%iG^Q0%r#]UE-F$VhVO6f:U>*t^"cEf2r.'aqKH_=9E1ni'^S-.&Y6KKNl":>-^7QZL)[pb]Mk3C*6fN>&ar+@]%o1.P=]7k-#=#mU<jdbB%"9]tUL%R]rM6d;IQY^<22Y]/%0$q0ZY5&DAIH%NL;Jd%\_cfY:"KWnT6VU%<s+Ae*8Y$1ILmd\:#GdJZ"PkrVP)RHFFK3Y&Mui4)%qq'4/8L#8iY&s/s"kk[/a<9Ll4gIIK[Z'CVM!MuMnpb&]P=2-/<+pshU>R1D&d`6fldVm=#I1RP4!?@b2oU8L=A)m[4Mub8?)Pur%A<U]5!EM[4nfo8K3pGnD,R-\E"ttFU+&;g7]C=beVM6eh'l&m_=]K-gV6UZSVXXc6:Z>ZT=/-F8aZ.oWhnSV!B4?KK'+PK8S.)cB%l"$S`bpIIs*>+,-@OQt'8OI3Ma!8A?=lV5KH4UeG;_gda=]&md"d=I)VC\-C\rJrp6naa3/'\:UV<7X^&Y<Rillo(HrhMSVl:e'>%08BG<_";p"k!Q_EOS&#!#EIX<5C^fcZoQa`rn2M5rS*f,5IjXHh2UjW]0p6&\Z?f_aU`0nIUb(V=/H^Q9oJW?a%KXNnN-lO->r6q%GB9%-2kg2nj&.:0WHDETE_\/Em*XDc6smSgjb'$DoII%5#YXCLY-Y;m%[Es;gZO8BD/T6O8]0dN1Z9DKY)E\R\dXc5k]F8@I3jU_%B*XPj2u@9o\'%8t`2u_;;#>r3W@Q;pc!dg4(l(kV/+u3sF"jQcB(\XWpA"!lVEFe5A(BrtY[)-+qX&n`4q+Rg$n92*'t#e+>n,GO%4*)=rF9_EsYEM4@pia]CRVsaeD`cKEY;?,/QpM(>GjQUmriio^n9Po]:pY.;@H^RO<0s!@5N_<$r$a,OOcTIYk@=giou#r,qOI)h%a!RL#kP)t<A52Y)fB68M2f+adE%ZNqd<*H/Ie8j>bhO"1)?.m[hg$VPoNs_V"kgAg*g2,?lAMP[XoIfVo5s"#9TIOOdZ9u_rVH.H%BgG)/cUORXYQSo@A/fCLKIo6&c_Q-@]kH>V((Smsc"aCd%Q&E>6cV@m]mYrFmGeiA5#<;#C5qaoIlQlo4rd6H]c[Clpdh)CRf8Ug%oQl'D&KeR-hr*6&pYGR/IZ(/j`cqi2m0-2j+5=<d**5V+@?'XEre<u<L8E0K%;+XINN`.i8GF,6kO:`/ou5n"?^V,#o]#)HhmpJJ%>j\1'eO,\@ct@*UlZG\l4a=fn@:`^<'.bXejjA$>r0Lpfr&h_;hZu)d\<21>r]gXW\59$RWHdL^^3?l^Ti',GVpf)SR_?B^^fb+7%.O'h;)nl3m'H"g:lJZQIORJ`QKA-I\NU]<+DomKWM8oT-lUO,aNfW.8g?T.cTkWOo:<OA@90lOuGspK46#kKAZ%2m$S,b)/mJ"2`%OF9qIAtC"md\_i\Hr`P*,#i=TdVuQt[p5>m!QIuhlo;m]""tHMBaXllB;]+F/N&t`;uY!o#sR$U1i>u6Tpp31XOZPgNU[8poT*j7%cL?t9pm4H`aP*s<0+#*CGYa8K',[k400gA!a43ec6=-ZM%nR6'(%6;/2?"=/6^08EI'S"7Ye'o=I'ZT2!fhbB120E0mO8Oso3c*3%Qrp[lW)OYAB#N.?Nb0L@PP;5a5d\?\iY#5aYO:CGkl6juFa40Lk_3:r;.>1"b:f.NAFlkrRmC83J+_M[Q]d3pg]+3oWZCYVhCmb4%$;EgBTS#)>qH?45lT[s4s!Wp1E.Pa>+/T5\?bN"s:r-?78]1RHE^0#HFaW%RcFA&E%"1Y9^DtAqV2;qVbI=B12Z9,Q(tkt7-K)0,%]pA#ge&./:"kQUFYCYs5XucRDo)`V$0-]NX_CV67J,M$,NW8-T0YsR3s7e"ShXY;Q<_;M/?N99"e,&Y.^4_T/chtHl=cr2c6,QZ(%;"GR2D'sc$22c<(dI9(MVO9=X#J]9a=3QYOLFoF_hof$JP+@p?I)4CK^1D?aG'4Qk_gPIHp(]g,I>8mt2t=B355K$`/Cmo%'JoMK%*M>t)hsqDL<lV8]PU5,qo%t>NO3daKY3k1N@?4t>^XSBXVq7<j=Q#H_rBDC+94'9OKAeO3VOXs^f?t8cs34^Y.?a_FT`Y071"lT1%@I[""BK2H(qOQNYQ\F?9s35@O?Wj@PRQ19V=)QL%Q_uL7g1WTb@8=E*bI>o.6M%s_[J:;"[5T%;qQTsJbJNhPs)uEEO'/5bD:B):%\[1f;f7i[4pYh87!\`f]jmkX%QOl<:^RH.^+Hf@^Ig\u7k-'7n$2qlN;QibEs"5>c^I^qkmZb#k1[hin#go'bg?T3KQ/4r>2![m2%JiQo`-$;_\W[iOF3?3JD*Te-I0DXF9+"M>"[g%)3KuPRNq+TAqI^+KNgmGH9(SnM'BP6P'0cB[s?HHQ>KI9N-e'W".`A;ttb)3X8%@F&<PKdG:(m6Et$dEn#XafK6*e4D[](lXn\V-`n=euqcYmPnbf6CHMKk`Y4%!;H&2>8us+`@9u*C1Q@u*3-SJrj!uSRuMu[#&H9!%N'R0%:4LjT2GY`+=4;/#0H!kUK584f2k<":rnY=kOKiBN(@$F/ECW\;D`rWUTA-k;(tQ8c(b"/KkS.NL7H:hLI:,PONL@]XAP8'R%0ACgDPWs$Y9mO>Rao^1-XIOampt%?%W->*RIZ'n9i5l,Q/Xn9$b2AW/`7l'8M0d.SbODQ6*ARuEK?EB^XAS#&LjP4i-B2&5f[^bl%CfHh2K?E_8QjDsBhL`J%CnKgI0@Vn%#$ir/%r-DkBf-A)c(WIpI+g)QUTZa2_VD_:<3JBC?b^K+d:aP%`a/V!QVT'?n1p"SO/d"W%=8kc7mLDM<gQYA!!ou9$dY=4^V<hGP."r.W]c"Am&l]2kkAsh;<sguai%9DHmbA"k(.TS>`K5:LTPj=e!7H;4jOQQ5\H,OHIDI)q%N^EJT5fn:JB(lgj=DoA:Ks#],)lCXrfkP?]]nQ"n7-FbTS4X:cW2lB,o`K\<ebS3?o%$-,Y_LBi<=I8J%8E*,$JZ^tAAe+3lV*%n%/2Yp[G9.l.,-nfoF[i)m1q>qNn[d5\.k^'\N?:WVNM^T6O/SS#B[5i,]FM#'A*S)H3:sc6#nqun&1;JB@uYCukT\f\cA6q--:;od%W];!bp?N1h)^r0GM5(,U*";BI6KP#l)NZZugosF+'t.sBBJb!?iWk^,n2u]nLW/!W+$B)'.EY*t]?h7a,`-]A3*4=:+V_9pq8T3g%mYng/Fe5#>4c($8B#`<g)BZNmDf40[Nq0P4W.3G/(t@s7\C:J?rBm2q/cck&`3;^7cQtiM"B7i8D?^!';Vs+8Gta@]<OOZSHn?f4%3T@3Z_:4<Ed4[X%p,]V=3+)8U>fT3NC>.]V^QBW;3hR45^ZRV</`nC!P952V:pF8:6p687$^OLM\>+!1a]!<A/"p5Ms.8tYI\FHh%;\PdZC&Z,rH*Z*B=+9b:HIQ@.8E@<+;P$l3]I46pdgPehkL)8,oBUdD+`3s\k%XYAUd:#3_%Wu84I:,b#lNu2p8hUA<'"jeoiDh^%Rf]VQM$m*[cC<G0#2F1JeG49Jc5O@JYN'?mQ_k@ZRKO[:i&=/:g]RIjS8V7jKnC(O5&&<UiP0Y[)=tdhg2*L4_3>2JrTeFXrR)r@%/o`#>?g'shSgR84b//BsOko8ilL:/9>3FP(%W82aZ/o=qnVND.<oC[^5VLUKh'9@YP#^<1ZqRY8]5u]<AGbW_Kp91<mNu\;/.dPJ%rqH^nJPQL4HTRGQ\\fX1.DNNEVF_SRDuq*1@JT1F45;9tD[Yg"0-K2bCVIul?PBhcXcbmd*asWDeAfC@AQl,3emJm_Htn)\^eaCE%7`Gm"^G@Jagki5:K@?3Xlg^I"D^]P^WJ%I@f$BT=B9EjSd^_0Q2^!0^H@Ed(Xo.$<G([FaDLn=E9V=/TjAKKX,uhP`_$r:2mrEj4%+5$T9UAiA)eqUkEUF*.=S"URiQ(#jcqn4Z9j$,n_ae+VC0ONCS<#Mp8.plh?JqVboFF03cWod<n2P'3e_4VaaA)s?!_`[&'09,!p%Dq]bN@OIX/SrchqO';Ob+qD0:%O3i0c5dm,H61/0j%[YCE&_*ifk6)nQgihVNga<>h7#>$Q0<HS>AbKP9'YP13'=p;_D,p-,/%ub%T%]apn`0)hl.rFHN9um"^]4:[3#mFmLVp19MrF0JiSm2RdS#;ChnB$i93=cHcOXR]YVa@,0/M`hWs9`@kO<!/g<6?4H\@tm)o("R%f2(jTpoqD)IP&4`%M&$\:%E(#[5N7!f2LDuo"MP`^XgK0)=(NJ_2":Em!C6mS\6o>;g]O6]j-B]/Z1@>n9G`f/RId4]-f(U>!'Qu%$b=RDEZKWUK^/B_7</GOOtujAQtqZ<n^f;h2-G1[H!eAu(&25'=f#CEP@"VL2Ge#LIII&BY5,I']5_bJg4eggZrl,+cS?rW[(E>M%f99j8bP+T8=NIWp+R>;j6?R#&+l?P]O62L8l8'"i&Z3,N-,NGg,2otn5>[E+r6iK;oQi)rr;M%ZZntMs`aPcV>UJq-PsRHu?#TI]%&o9ZGUA0o\0b3&?di#gKmQC_oh_'mS1m(4kF5hlRiFr96!h7A'cN*BV=PLe(*1bOppu^MOUXg^EP!(Je>3b->9&@bJh-X\FlFX<;%@6L>.4Y*M_qf<sre(lXpL:=41fgk'[gYJg3V;L`&=\b6p?;El5Y[<FhHE@"8kmq")i`>U-e1cntf=B3#r^NW$>a!S)]/;BA-l#Md%F_OnRrV-!QiDDS>1EDsFKEd2NRIXO-OR':=dtOaRJ)!VHo=\oTm[M13HK4(g]7/7'BP.91^@G-B]Ql3a5:oj2[9;YU0%,E8HqS"6%pA%)TTRO,X&C'ps4Z2!CUK,cJT/>*B\98uB](Qe4O2^]X^g%dib-Q%KOY&!+]o5'K-ITHdC;rlC(A#f3URKLM+7Ju[P`Fko7#-7&%8)ePE**KK<_i+3d[r=<VUOg^NF5cWVi=tN]FN,fEqQq*"TA7/9=#]JGU>ochTnP:4=.\oj89&3S8\Z3'a^-/SM75&6.Z(_WNeJ9Z%:E/96>5fe[Ua2u!W!QB][XG0.mOrKLHf:7GhEs8/-kF4r8"6Jsid<I"?Ft[#%OW>+DrFYQ)%Wp[3nn)BIs)m!-Y=U)7]&geF`q>L%p"7i(fN=%oLJ@SU*4F;9C=k.Rqr*O8n8ii\L+cU6DoZb>nBT><BmBAu]+n'Oj?tu>Z'l3d*[38r6>X:K/tTbS_u%j/A,+u('F>j-%B:3_<&q((YlmC`NZ^>_D5-JQZiUXgi(;>rLYJSnt\&Ik(E30\cJ(\]AQH.`11]2XWHORYql>,ADogLlG^E"n[S+W=M\36oe_qg]e%+7=(&]n_B@WP.eJmH-Po>uUG5_ZuI[@Ut]d?ArG?Z,N"%mF>Yi[js$W-dgO7l+"%0W630ZL$591[W/fjSLgrqDJfk((O)/q>Dqb9%h>:ZaI8O<%4s+Ks#>YT<`R<fGl/HFU=BiH%SIZL>VUq/mG7sQ>R-?1T^6HMgMq("!DJgLDMk)B^TH>%7/WS,X"2HZt^+pmjjmc4o%VX:f:nP8a(Ot7RL&QufR,'lpW7'(iK'%qTeCduhhDtfClal-rE^FU*EV46mrjQuDAMd3u5-R3htpi>H;*\Bi2B9dJ4d44l8Dp$J^%68UI-aL*7V=JiL5Ge2X7>$fC[Q4hMjm3QK<k\Wm%?hKcPa-ZOsSYK&,.@6BfQhJs'Ep5Q'UG#oS9t$C+;B'sUO6bD199kLX_c$+$%W4g]/S]mBhe%J^;]K+_QLdkm`-`(Kc[epu-:F_!q1!Lu<>:6\HBNAl6UO2D"G4bQC4!#uCWH@cMEI&RPmWIE^os]qnI=$6&MiO76%IOna-BX-Z:rB-C'og^a]>hk9TSB2;HF=4E#&<6&pf13++g[62-)-bjUh4O.9@hku<`EE`L+Z@F!UggZ@r+7rI\OeD$)sauVg@\BZ%H1QFTEB/A&e<UV?bOsu'a.;&JS'K/iq0COT?>^[*M<03Ni+72f:%*]4>Me$CYG@W\m>><k)_9Z]eo[`bgq6oQ#-57S3@MpK*Zlo?%Q29I<[*m,i`l^,bZl!/q2JVdT>iI;PQ:a7/h<.?Z^A"4k`6V?;HMmIjG8#HHL6(>bSP-a2J+$P:C,Gs^=A?aU,-/^^rdAp5?gFl_%X%SH&o@U:QH8fY&Y?$"8a45(jl!\]qI!J9$j/o54@LZZWS,8,o7/g2$-;N._]u81cm5RsGS4"$/a&XZE?+_j-U2)84OmJN74?-Ku%8e)ro$Bnq3mBed.XPH%1WGAnC[BS5cG&NP%K?J-f);Rk0c&H6\R5oQ-8KRPn_rN]MI`^3^S)\$<FjWt0>5(oEOaT2a)6mp0Q#;W_%9Bt_ejX,+Ug0.*KNir(S]u*-SIIU.i>#/I0<7e6u6sn9bp7Kr42l>m:rRKlu3[g`:rdOQGPu^p@>EX:Ikt8R6V'm?ZcQ^e[.t8dD%cb\ic!+%[3YYnY\b48,O?/@3Sg[[X!3gQt(VBT+'ge]'YT3WtppJ+1T[[.ZMcEPYoNcNHib3`qY:T6:qVXe&N/?A;gH(Z'Zr)M#+%Y?1"WR6=NAm%q)c<bbdkim"I0&Co@0\V.E)A]D*p]>UFe]=KiL)L"gfD5&XWoL*nGWnTJpU:uu;7J3_Se$r^W[Ntg"D:LID=0oMn%-,8je`U%p(\@a6)(tIJ8cZlqf@clsNAsdbS?A.ufn+l1u]\ZMsApldH2(*NO>E2KtXKDI"O`co3C=`@/k)%VK9#'&Ae$NR7NMA9k%)nR0EkCrVqrRtA*q/1&OD6.pKc8RY=Md`hm]6bK@NV7%\F1IiKLi+gconJr>DQgR<cS&'P0Cqu9c2,]Do&d;'h/#Y5&Uc1#Hg>L=%[;-"O($dTgp"m?2h+mCpjgKA6lgaA+9"VP1EkQS%4Z_*CS[H/+n]l<lqQt<a[!JtJEdnLm^GG/6@_9`mY.M;e14Iq?*L4on/&epo%mW_^9e*EoYlfjA-/uQlCd;Z\RmuB0^kGN2eXZU\\L&,(*F47^7B&8h(mHjCEpFU0Qchc=iOYk?IBD3V'dC>KELuqS_X(j8^P]h*/%l1?[]XR9BWQYpI/]QnfYaWI+O;Yd5[Fs]G"4Y@Q%@lp5Jeln%LXrbKK6>*]U='WIbRhRg5gNN+_dCh#1:T'Din4%eP:JY0?HO''S%^p<\KXW?lD-fX07aZdl7kKh0(rS)L(B>;48CE9K^*pjqXipjL1X+smHi6C*t+3%s9al,u>OuP""[\"&af8Z>rQ.(N1dJ!P1oauk;%2V?3u['X;%mn2=f8p2@].PGF89C;&#\)Xt<^-:E<A95eX<upDt/\;la8XQXR8]E/@SD<=jPEZ!sA,\<->hhHd5>0/`_r>M"oY&UW%5#^1#aP"Dtj6Z,DqE-nO5;d*:<cPWoIVQ&S(S^*;KFtt$=[/*&G1APCin@Sn^$)(n*L>:rZ)dHPqF.giHl=)4L)1pFQe(9df&bT)%b3<JQg8nV_eug6!fnZ>^X8?r6r+^ViftGt/\)lr9p<N2N1KJb4M.b#c6M)VRC0o`O>LCEZEHA$sC[=:!h4>ro2K)gUj4[euFih;>%5@%:XSfSU35$[>/ml/ssh>>C'NT#<#&2-2fc,o7gOkP,1W'=@-*ol"_n7+*)\UT".Ncq#2:T;u5oP*o-U\](T?7nAM072if<\YfE%Vr@O8F2qP!H:_CJ'j_ANAFlX@gJ5E$[=d.JDBO.1T-'r<b0iTKZ*Kk5^8]ncccVO+_:a*VoA],<H<n9LX,^8^(H(MhHG'llPpc,i%D0U/!W>fWT\,(AE)V=l<&+PBt.-Z_tmJC^pQeT/dWr)7mk3:.XXP%HfeJ<hn#HcHqm%r7'%)ZrTI'D9f>OPq.Hen5%UHQUU46KZa%&"UO.$,"SCj/dFn<dma7haX`#mB.Jqe[sH/N7jc7N@MWD_R\4/S&pZhiba1CTAD'lqp.n)E3Qua0+SE5o&HCO/o;-Nbg^`Z\?F`t%gXVjsOWp>c7VChLf?l8a5$WoX>H^-bqoqE<E?&"XNH%#PF?P(U2>8HfB[cs1GMKE(iSmk+mg8*t7Pg5,O>ZJFM4g_PV;^J6%Hm,B%T7*7P=+5;,??%a1MH=7F27B>(?VJ-BX$]e%j>R/ROq*8tcmepNgV%1XIDQu_Hn19?H/Z9AHQ%6%Cu&n\DcUc-%b93G17K?Rp"LFf%627Z$?<^RXFXjB4P&[m:0HqJ#X1b'6D0McI\9sefcY@'sTH%05&7@nh-Mb,uCJ@u)Da(("dp$U_8U>EQX=lujS#,VA2*.7>>PmT[%oTn&V6a3prbGS7]XUh@&ofKs%k)7Uro6tVHIs]=QpW5:K[Rub-6$_0Zlkkjf0s<1bAD_^V2[e#\;`^uaG.(r8:%S5ZiA#DA93m%-%P]+&$Pht[@T@+[B<'QLPMp@21HhHMfPR+>bqJnX?2kOt]N3[=[Rb@Bkf/E)/5od)5Hqc6,VmjGRU\t27PMC6FGmL$Omhi!WZUsJ"%.8ru2#*aks8q",Z[GP!t[6dSP?cf^`Qd)X+</i30-Yon&Tj8CSNS3UBojOX*@7d;RT/qfqZdbk>ASJheN]Tn;)kH00HF=XG>u$Cn%O0_NZ*.(3Pj6=h+2MC_Bk4MY61T2o"'ALQslO\P`GD'@D6[!gXjUW`j+?";O@G[q\IA<!1YJBqUa4i,d[77T;T(ON;GGSt6GH_gm%.BM2`"F9fq#:$Nak(_3=Xm>i$L/O!nO`#@I;.+(X=H27#4;^#sq#KN`PO6ALUnaC1oo^Rb7?7!*Q*".CS@BXc('D<r-G>Kf$W3n7%GbC2FM4NXlo4dNfE($2YedAUf1Z_@l!7ecJ&j&1/2'p#lg33>'g"tGa^R[KNO`Unar_Bf2K*<0)%p]7.49FT/m0da[cj3;UBCdcE%e/6MI`kCnCb?X2e')C\dd<hQb=^K5heZ3cg/:)Z.3R)-]o$)4<4oPAed=T_N]=WHa_RqhmpOsDDELkWt1T/4igW`Boo4G(B2Z(m&%1"TZq6%D&#VKl#\HMFT4HiGL8>$='=k2Z+Z.N9^JWr"LHdo#BmZ$Tc%V[Vr0<[GG)3F0j6*_p>i=n>4NP62b[gMrU'<JHo_RY-^4%E*n[7Ph3%n]Ms8PX$d-"?FPf;d#QYa7!<6.qo;<n/3g@T+K4Gh[NRh%.02*7S.82=R?p:/BZsLd[/!m1Bca*+damNn&motAU4e?^%0P2,EUUUpU`H,nVU0C0Q;FOA[@053ndDD+UFk"bp9WEOM=Gt+=X`e,^DUtsC1?Q8jiu`o[rSFs/pYoL&\Q6+jL;`L<NcGNTbiNh-%!>]:fc=]doh&pH(9<R+-S_8Zf;c"`N:HSQS3Rb<Dr2dA1bj5!q@V>-e$,N^d(N<Ai((5EDbSnUPCLV6\o)A;#6(2/1*N`r2VY,DH%2n0o@0&*j.d)Al!m9imq)kJIs=OMT<>Vt3YnCUYjCEuMhC+\J5:c*^V@@LH:_Y*:[1Z<lBkiktsVH_faB]*7h<NU\5\Verb@_5b)%iprdU^%IOm`1hMb!FYH3+!+$Yg$["];r$)j=#er`J$E29AHHWRB<5[D3\.:J^Ya8dNUL)ujHZ^t!qI8k&)UTpM9UZE'.e;YU1`Rj%mibVY4j5qDg6pRbep]4T9jY$>$C#"&q0r%#.F0V(mp"3Wlkfa!l#CPb7RrB/T@a%dVh*VZc(dm!Y."'XjBAk(/(^Mr&5qA%g[OMW%%DSL$j]ZCZmsMasg&]h41ld<3j:d37p^I11C+72,-MQH=rYbNsHn-4\lZq_CDP&pRjL6-,W+Y$Y.gnQkC$B<mG/sCn>\4$>?>/4h%rA9RhO@SP!3d6Z4-Q,5l_cPQD*\/,+Z^$;Opef?uhbHtVTZP_:r-6;m=9q9Ys3"%?$Xk9&NiXlMi);TC5Ai(oI&(cIrebiK,,3TF%(UOJlo=RaB7KcXLji,591&_^biJL!p/.,m;A-*4giVi<RIB;.kj9\_9AM3M+#!lA<pEV73^`TP>F2!LH)Ia;GqnUp6\ATFVNM/[-%C-9LE9F7!qHFNN9'p;tpe;s7^d*3hcIN^gJLaQJ9hb<h_RJ7W>.FJS%\XMmT_Obr?H!!81p]paC_WSKK;(3Y(qB-[0,>P[sE,Gq:%-8TZAbi+7QMt<91'd>QQUc@k6W]29oWp;h,M#`tU?B?g9CVSs1"8AIH]H0nnfT)XQ]EIJ_X,%`F_S=,WJ(K%!M0J]Gc?Ne%W-DB5%TO[K;)uJL0_W_R$mqGI;.5(tr1[Pt%#gm0[^HKR9L=Pg.-"dBddfZW7l.?7<.p-^6/F8[d]JnuugdgDq-p"*'REOok_*YMr?>a"7%jO$s%"jG7#@-qisMQb'E)o_;]W\$*.)]&$.P"X_'jh'cHaAjbBH%&=$C>JV$?!',M7\?7a*sFd'T^[h_K+^+/i>!Lmhb(n4W?Z_4%&:a=Q>Trg)@'*+00<a$=p?^d&Irt=SjVc4T1bol"r+Wb?4K_#4esAfV#nk?rS4L>[XlO8;kl5gS1&_.rnb!1=rS#ueHIc1sP$AtW%B</.^A$rPeq0JB_1YWS%itFU[V];VI9*9`#7bW$h3/"g4P:g`1GVD-_5JDBd+D"-#*VB4n(b24Dk4>POJl'S*o&EQ'YXS_>+VK:m%HL[0K99&[O:['@_Fo8Z%_^of.76*B!r>Ta:5N;Q&deS+HS:GVT,gmiE4cAb%+7i!*@i5irX4d+:_eSm-qD9MD\TG>/RuX@$.:HI1%`^WAdGDr:rrnu&&pr)<N5;UqNYC!+hbj!Xi-p,XJ59XKlZOle]*%K>V_cV&Z^g=H^ZlXVBLlY@TZZ2GklUDgI\^%Z<`DV=aCX]uE%@b%n#S(\2=q71B9T*.kmb62OVge0$Ql.3IO]@]8HdT9l3M46/")^)5b(6jDio4);dgik!Rp1&=L8:GhmU]6P[G#LoamVr<FU9g`Z%:65nn;kC=$ANT7,i@;IH;=F6)*2Z*-Q@-noA;aZGa->>>=aY[%N>)bQfrGanq\I_`[AEO$bH-s=Zfbuc1F7M%5B4c7h*j-_-fo-&%r7MlFDlOcH%:bRSSQ4"3dO<Z#S")CVIj4$/5hppXfu,J>a5clY[W-]$9+Yo3]:5u@CZ_FiSNGc>3ZVf+Ze?r\_-4Bm2$jY#nF2sQ%2ij-i(RNj&Wfr!P$Z#"sio,?+285r=\[m?*CTTdN[HXDfI#3X5aJkWbW]gsA2s6%M7QXK8^uB"A/OYGm'Dq]!6=iBL59-l@#$PI^%>hGb;gt=3"jih%5?fo[A`Q5uf2=R["X*Q3khs?&:&a(f;$I2ua9o$tuB@8O*c/\sd;hat9YK(SB*#>8R\*%1%]@m*^jh9GHO#5RP%Xmen:IWm]p*8S_Z3f)N\-hVl#Dm(nW>?T0/QZo9RDEgII@r`FC8Wg@_b^I&jh/)BrNRq:MOjj<_HFB0OOJ1G"^iMRq:9L[r_TR#m%!JkZJe*kuQ'mIW3]6X]?f3!o^*:*c4F':7Meb/g"kedt$rBPB0c?`c2JP$rDb2UQ<gR28\Ti$%uXhK<uZAAd`))'JPdUPaNZ-U8a%h,sHt(A%eN!n9beC\K<E5Nm;4ZMO62.W`=Mf#h6&-Am/t]dGVjQ0Vr:<M9fCp3Q_rTsT^&`W^&Xep4=_O\Rd%&nP@gQHI158F.td%"F4R*f$[b$E$`6X3B)sGd>E*5,OECok#/`1J5h.ioO:]hX;Xg=]Xd>lNn3D?qjbB,RSI/4,oG]DfU.t^(Kp\lPn^r7%SI$;HWs5M%mcmF8`Q)oAk!j"Zr"pEb22Ef@q7HUUTQ(QIlA<c`iPX]g-J,<\8T"(Kf4;5X*:L`oL3^IlPLa?DYVs.\_(t:rVQ:T+pA37gASh03%/^+GOMG.D03GqdQA(S6HbFR^sGC@%gC+0P<]q'0<!?C:s$Q.ss46I\HSOk7AnBHcR@fjXm"nV?,0Xco.qcil&8bZItB+U[[@?S*I%*TfD@900#[G+'<8*"7J,LoT7pYVreJS*P+WFJEf>hTV")ceG./CF),=g,$+Xl&>F;5=$jol[%O(0obuSC;5ap04E[d^<6r>VlRH`%KJYH.M>[56&J$/S*cP;gZYcYDNX71EG;FrrN+lW1a71J54J*V@%&QDZI\`@S4LL'WFR*CcBj3dBf^%?eE0JN2)b(U0#F4:LI`g%?%Q8l1;hRI:,dai+0_W=A&/db3uQ&HGkd91f[Vp:1D\TqXK>C4'DIU^@QgJ>TADr/%BUk59k9X&2L%_D0G94'V2B3a=U`o/J@\u7!u%#/Z'BkFTSP94P4da>p(>GIkM$PZ"q#X.LO6jkb<qnbgN4h9^CTm%;Soqp1HtI]ZcVbJ+d!MI(ilhS!S!V`X`FNB(@!"g!'Cm;C&s%@-+aD3,4fGq<$cUJj$*dk@WYgjQUe?=puLLa-#P!^,[12Lq:IY(DPGT<O3F\>17=CfA'@j:7imIe&$mY_(%(n^3(\in$_h744+8B%(q)^d_R8_,M;.8A@QCCE?uYpt<oQ$pfQtPF@@$E;89K&$DX$3+)t8aYhD2!L<eW5S\!u7.)+F>2aIFCJ<*pGhIVH*2DsU_CKoDTc%3_**lqlu50K[AnVEZ)A2/J_!36;8O%k%#qoeghcTQ8<.K\-QS`GEs+YRNLlZ@KFRm=hZND%T^AlP$/gF#o-Lhb?1.8^'2d3DbP.:%mG1Zj1kdB+3QOb6DXe]Gl;]=`m`#f>k0s4&GLh.YLb>5a<GCnSh'7VIia!h<&+:#hl+ibZPjOn',n`g0AQ8h**TlVqXi87KZFMjd%GS-)Ma89j*gZsi*r?;*Z7Cua%8mBKO([];hTO25UPm5f1,,?h,OYR`jdPS^^qHdg+;Kq9OmB&#E9<:ro1nGhQ$'0uJlXJc?CqT4D%PXqI[g$Hag&@T=ki*?W&OO""g#)cbXI5]l`:U,1D8=V:[5_.2&TQ[-J93Ua'__aJZ!o1cE>g,.kX^3a-qquq!AcJjlXX-a%pY8?V%I\dFpcK*jUbTgP0Hf[A=LCq\NH7-#'jZ'WK8b&XdDLd^'H>2uZ<QJ9hP:7:,P;r:IPLhhjW^#0QCrH1cogPCk]^t!(r5d\t6aW/c%N)^n+\0Z]ng\^Tb559FkBsTg8N/?L.4Jh"OI[ti*c+Xas1#?KR%/tF\=A61h`QPU2qL&5fO--(O<\]gA7KUW'5W9$p,[8<*_tiT5%VjrIpD"35Ir<@Jmn>R3T7Y=02ldkCAp!qO!Aa\^SF7"bZ,)O5GMs7?bof7MD['f*5YPeuL(+ZXVHLpA.S5/Z<+Xq3q26cZG?!)0;%UWc/&^[[7:R,H,(H4mtubT@k*:S>hk89P\X;V<[SZ[;<7AN#'^\a=c;2\rmRArdsBkC'`<;:+TTEN<2_FO@KkY$lWuD6dZl-;IBW%(/&JAc,Dfub5e>#jihan\@"8!H;8K87_N-?ge]K$BA$Th^>-?6^E(,"9XA%XO#B"D`_'_1okDu(g[n'RPT6c1C*/17RT>rLq!6$@%)#1.sbb3[Y\@.C_Z2"0soZ7I(mJ'e>MVVTkoD1QO!T$8]XI[\UDf7Ct=6?>,41gu2.fnQ+)^/dL14Hof"_o;W1=?rP`KSK%&n,@<%[k@9QSb:^fg>,UaA$$bZO0O_kp%(bH><h?03<!1aS>g<6UXu8h/Dmo(:_JXNeG1:>%ul@hb0BE-^Ku/C((9i?;g?#n?\-$bh?>`b%26K[rhAco%.R'#e;9(lo?&VQ<LP;0/f<`NfGfLdDS0pL4UX*B)5;"R@3\T;*P'9qWX50^GDY-$:CTYflI^6Nr2;XBD]A!l9Y<[??%-&_QRITEp:WuKm^r);c2_C:r.%ghQ1c05IV!0K^WW1N2+l$>+7d*(8?Q@)7aIuG(CNj;^Jm!`fm8QNobH^:@XnY]]l?5@Y/0#E"p%ESmPWY[8aaCR--S[n0VSC`*k,/fTMele>TTYT#bV^90RI3#*M+LZ,,K&a.a>?_01e:A6E#NSCK`nBr^G:*QX*@kS=g(:nd25k)j-%lA^eEdl00GiVK;'08[Pc_M3?&=G'au3@WI$p7\gnfP&C@.Qf98Xd_%A[Z=See8scX?(3$t_G3II(S8+XnAjuiP1d+S;IqUp8+G4H%aMPW-J2;6Xg)F,Y*UL'eW&s1ak?Zn5+"H6s<Tor87'=`0E4/]\,_l_>jWC7l:ON<]IqdVEke.HVe/=>Mikn>8i&.aE54:>fb/84o%hO4$sCet&tPotoDQfO"lCr:V\n@jbghH05ek9oSV]H/]g*,<7H&%.lf^Ln4Kd_iKYfC\'a/:VYqGb#dGn^KR;>is?OJ)9P__f[&-%'Aq!Q6oM;=0V8F6r_@i"&RmEbXrmR,pZH"Lr"9KM0t<&_/E*F?'^M8$p]J"1]a_"k,*PX&<tWd*Ib"Af;pj64gqYEk)Mif(^Ejq$%k22OGfP&_#N2j[.GM`.ACrht\K:2RTj5^GG^lECD2r..&E#sXK`(T:'Zc?FFD>nc6IFRP+;cUKlB\7-uWn]?(^]X5)Gos4nni%'t%%^GWYUqpqJR`q+1[572On5TFC><Co\k3.(%nWRZ?<Gs]EZefdlY995l>hIbEk$;[^Vs1/:+4_CE_7)uQc+O8b>LN76\IF1E3uX*L%Aoe.cg,MWoCFF$_jh2JKhirK4LS`*AqpU;tCJKI]&K5f]IZ%1O]o2$2L/W8h`I&S<j0=Ah5,GVHYM=@oU>ao=k?b-c4#aCKCLNaf%s)cr)(=9aQ:):%+UY":LU7b&oJ6t#q;H`T_rprTd8tC,_,Ssp;fpT%s#MgQ*a9A[:-[<=U2sCKNi#6:QX3Op8k4M7`Ejp2;D-*-%%$hKY^'h7.,Zb:>c-h7*M20)jJ'Q;j!_ZI8g>r5YSC3-NuXc;YGi>A+Tnb'_L%@c8Y["m]!SS@Xd/)h"e]NP%TelHOg`]7mbiOjg$%<g-^`f3j#Tg$Y4&4AKXdhRmW9BUd^`1/Dtbc'5illuW/6P^8VBf5biac(U[ZO,X1Sj)(C4``<b#61[3]-*=+[pEm_HVP)epcIAC:%T3SNgR_iNaStB\6k,e5_[&K&J?%5M9T\n5W0@UGK2PsQII5)*X;S9E8l<^@_%9Mbo2+VCCj]MAZ/[l.:_o;2fpdSb[N,Q)ba9\4j%c+u5:n'*e0[*<:>*"M,a2Jb:><S?^H\rUhf!Ckns9*]bh'CZ@VZ^io!PLQ8QW_>MGDO#iD2=JP`0A=7"176s#:Tfg1,j/M5"RRQ'%$3V9,3E!^`N@A1g2#u?85m6m.[L0ZDo3\8WE,B4VrL_GOm!#dgYJ5[T/Utr>g,U\?r7`s>G4`5Hq(6"eRu7nt]rVLUod:3(UY6]g%65iP[N&YNJT7-.65_FpbhXY%D[H23krl$f+!o!Ia$3Zl_YEp0UW];$Jk,9A=j5_@1+&WgqRT9WFiS</f8ZT%HP$4K![8nUjHeHb3%+_Sm)@3h,&r)ouM#CheU$A1eVg0iF])9brYdLX%,YL`_jSnmIG*)>6>@MIkr$u=-Wm[G;nohF5fAA8f_FnZ(1Q"aeQ)?gDgFQ3&k%9,?*o!P(sE5n;:,')]S<VB(g7/#;Air1YFC<*aIg9p=nBa]7CT+M?-1J\8p5l?g&EQNScSDaO*Xoc\o=F?'ckb2j/UU(?Xo4-L.f%S^8G8(3F\\%rHu#?N-clZM#J=oImn6<)Knl00n,(9@e\o?5B>5#6*KYqLo&__E(3groXEG_\[TJc8.t[e+.988m+an$k4@*R9Z,q%2lAo;CI)tHJsO0f08K&U%7%[_A1;U?H?bT>FmS4!5rK-/AS@5>ia26/?gqB1aam))=L1n[DO:FqH3f*/O#K;^hY6n>V6dE-H9&)9%>/In8&70sR[bS$E)B0XmPsN+8(isVEs%J]2%Q?;%N.:4gr6_[N=b`XuPM#m><aX=(0&lQ=eC<+BL<ElD[ZiNn<W8e.Y(<RC>HT^%%?CfjG:@raXD%6aj>dM^g(!Hie"T-$n(Ke`C5!edG&''=B(b`b^fT<iEcijX#n:gAaB;27?/h6P>D"7ZJ4CRe&,>A(C@Gf)@';k[^%_N^Z(p2(d3@HnpZ9`59+Wk02F-LY)K>j5%9^ZE\qN;N^O2d2;@Q3jG5eEiF"QuXT(l^!Y79*=n1O>SjM3X>!P:en!qV/\afZ;S-1%=p/B6,ROBN*bNSEbI3C,D1R=CL7V:#KlkF(Xd"Ed'Sj[`V3GlOEepL2L"-qi=\WVA+ggS:e:?s=K83VcfMWZ)#_tp#3>>no/ej7_%8lD0C3@KtuC)T3QK)IAO9M#8g7L4"'\ul\`Yb=]*oP)/eP,,-H9$i\'clPH;P\Fe8JXS%<#at1<AB>T7i.04SJ_cs7W^MS<Z8A?g%53ROK`".T6PJo"_/%-cT!?Z20$`55J_"0=T?W3(bROuW@ll'iER48`$6./^L,Y@$iL8La\0]33=fiSlGJcGm5.(5-<*rt\b:^tu9%"U:R9,:b4tYcJC3&VJU:l5:9=C;D*.)ZnNr?t:je:Bup\F6O*bp-bjs-]a&),=nCc:cr!<$)/?(:X0@ub*bP@3U*1^3p<4:dm4k.%;?T9S3U:EP[V\Hp1ME:2l\6Np"r$+BTV@qoPa<'$,J[PFK:ns/)4psO7ijteoZPoG;nAfo4ukEt-t`bGj^a!>-M_c=<`>=D(UF2X%V$n]se-oKAZAm=rBK/MC!u%NTTV@YgPa<$#,JY.]!C0N%N(3o,,E![IqIFEA7S6]-6^4h`'kHYt3@S+2QI7Te^F`Fd,A>i+OBlNq%KRskRX1XNG"YD6%DiZ"F'85^="X1KS:.u(U!-5%IK(_U2_^1@u8L$cp4t.H?dFM8sPd1Z3V!LE..2`o`KPa$GL2!K7=$r4X$gidI%TM$K[_8Baa:Pp9+"qlU5J:`^tOHYfb6\)^(#!iD1]0,XtQn3i"M))eKYX9r2d-V;8K[A`2[RF8<'tCa"GbB7(_qN:$d1alX$F4EY%:gEZ.=Wt)t_6&koKP@[%b63Q83!OEe$"1DY',M!&[;KbJA\^OW2+r/+-s9Ilh?E@5!oZ*j@J/#:(lXWP&eTCc6UT>ES-oN(Opi)%%!GG.qZ$=]L=Kd,g=KWo8+r]B?3Su`ac.$L7rl'u&A.`2?C4QN3o``5Jp*mL&Yc`T0BppISHoGTTOO/!Cp0(&0MIlBUcq)[kO3OnR%Vu]i:Z5&)/@.*9XOus.R((HcjcuKY3WA):CPP?sS<0P^$`91Dg(+Qru_n].1_SA`r7oXHPGUTMF#+d!/j9u<O!X^=p4;o9\#f83"%W1eaUTMsVZTdK%[4qB\"CW+7mi$5rU%8e(A8p"'aO1*=L(*LL?!^ZM2l,!Mu@&]/C@9/#/1=:<4<*mF-,D;Kd",PuM+V=o)bWu-D%1^ES"l&s:YOU4i'd^]`RHATV9oZFas4=J!t9juru9<q$3!)^lc*IRX\g=-*N.EsP_BD=?Yb.r[I),<O>3Y=W'8k6%X7i,heaM3<f%`WOW>=h$9i4m4M>F9f)LB2'2_UB`I/##V,tDaFEQQ.KhF!d+PUr)HDs_?fenV9m25j<UU9f'G<$5jEm7/m'gp,uqe&_)+gk'F_9N%94.j$:#hoaL4OM=Wm3tSgP5B_L]jH:'_iWE#_PVU'&IS((dG68-E=3K"b0^1dGjZ*l\J&m[uPF7Hg?Ik-4M6;_(;gfZ;,MZ6",U(%6B"JsFJ03'AA[n6LID`3.u>B?eeY:cZcP..3Xgs/^QEgE!U6'O=c//6]kKAC5NR6k2]L5;#%#mV-`>frnE&rKT4Qk7<DjG#O3Lb*%2c(M`s-//Or7b#GPQ)bJ1.Ro.UEnVjW)N[<FiocE;uQc>l5ufsrUIu.]BM<$&Y1MT3dE`e2ooCB%8:*-2H`]s$ra,'2BeMfWHkh,%aTE36N\O7\+Uf-'J>"p';s0F^^_[&J;Nl4--18@n'aG,V\):NE(9BJ&@Q#NO(,U`H`*g5XRi"d)(,fHR,n`G8X:PT%;1`ALLWL+&%as;9ITLMP?E&!XICZ9tTc9sAf%E)'S<[_L4JV@3(,a(Lr)E$e4R'>pDF94j6B\c7cb_4?fJsFcgcutm>#D-U)h6EI[SRrut>E_bd%"KjN<"`HmgA]95"(fB?0GUPQAi!bnG@0qOjTu-)R*6JXpTN;5%5)uAV()^LX2GG:oa>@nAU+gO;<&08mU'WLfL("o87;.OQBbR,c%PVHYRZj8@A"r*8YdXt.QXD9^$*Ca))Ee?)$Yh4Q;/W"^^/kchRgCSU\i5K_EQ47GsB3J1e2Y'Mi&Htd@onobuIK@Pi+o62s#[RP3%4R.ho,8mBKVBVc;^gKQkM.1/Jc1EjL"@"!cRkD(tYaD<93<[8N(m/PK9gqp:Td/:uXahMDd;O!c0F6.D@F;&V0k)?CRKirC^m!<>%@#mTRR!9rO*__ScL/,*G2*l2S.Yq;pD1Vq=?qo3C=GL3=:'lS_H5H`L'h/TQ7i65<?j\A#e4Db.Scp.=F?6a14'6Mt_q#g82).GU%jGbi&gZ8K,JS?o`/8LIrFQ(UTK+V"cQ9ag@5Tsf+\j/,)&j@F3#Q5i6,jDn[_iR_L0fh0CDG(NIKY=0-N1`d@\Ju%-7l!X_(lP0o%[8\gtD=B,O#XSrV1=)37<,hId6,VYiTFkEE=_rp,Wm"Y@/']q&OZ\[n`:Qn@5'7(%&faX%d60iSD%r9Fj%?GF$SCmF(C*3"cuVpe%5)01O[VdOi#Cm_g7.CQtJjkJA2.$m1:hJB?*eIc>#D@/:4l]U%;KAM^-5j-_OtB_(@-+U-V\$_&:#J`45cScWQrgk:d3kJ_'*n(X%9cfBH2"<i/ro7F+b=!Bp>a7mC5QOli*n:?@-4@bL'W;Xld"Ns5!->27*0dKZ#uIPBUrXrE9;jThD?I)b(TL/:2Gt;J<a:mr<"t:^%6$#\pas:J;_GL%X;o#@0.9._A)-H08,:$6V<"#0D4Ku;Fq&!BLC.r%%A.0*\dL-S+.lRLEScElt4rao1*o]`\W_5J)??HQ`58YA5%W%Q2rp-I'#nlQ$^94JO?-UJghGs"b56#smEio+3dM.=[Y/of)k+=A@6EoB<%`?kR5aHtG(GSEnULaU0D.LB(d<@+5T#3FsaYQuqL%`ZV3.?cJgja,rcO*<#I$W_+70?;ZPhScLh`Z#U3_@^VYc0L<:OcGLlGb!A-5DDb"YfrZUk>Vdc]*JR"50a\#5U21]o!Z"955r/)S%QE)?X/9/WSO*)9&$-4^(n0#20'*.A*5[*+)0X*;D7u:;9iedB/80$A:PS4Qp,(No*K:k@>l7g;S@<)X:U//@*(!5Km.jB8O]0K.W%DL$p<H.A;_?r$b`[2fa2PIfd&EO1*Vc#2*nA"!EYfshk%QqLct<046**fl%I+\7=geKYr)5*eU"Q!X+h]`q'ZI+9H1Z=*)<6M1Uc%F33!dlB).q#)"Bm5$mnQ#%uPnA7,!8OC3%/Kt-E1$m$jF.o_Q4Qs2`5TO.;I#I<V,U+mpUTchqd'@e>sL/YBE!`lIMKY`d%q2.Zr%V.A6lC.AVa57hL^\C(s"E[sX$O=M;j5ZZ8%:q1WiNtea3"TBMlRoj$L%Nu7F`DR?HKf*0OW^]+pWu>tSY%f4ISZ7eR&",=M'!\GK%U=OJC=#E=P[j9d221ddr]RM8J;DeNXK$ef-D2rFb7`MJIiQO)\RDl9H.4Wnk'OTB]!?'UWc3'288QPHp=#Ij,5c1`"K[\V]D-tg!%(3eOO-<,u?Th8GlCIkHp4NOWCGsJNI_ulR1&`Nf%A=i33[f>EgOeGki">3e?Z=LqO2'F)1f<B"cR@mc[4>afbUd,o-"*.YI]p_e2%-4)4U"qU)Q,[m:cZp*\?PFt]Zb(Q4G!-;pF*0dKA#uIO3`8P,4!(W-[H>p6<X+pc(%n'8Q#?8Kp8i2Un(6&Ha>;Y?4>gZ)m3]qFr%>Zh3Ont2qE=>dr3[Xk`"s&>!WW>b_62>RDT,CdrD]`h''R;FX%.S7s45Z2n_22d\M^agZ:Ys=uZG\I3FVIWi%^dr3D=)G4_5Tm/R%3_bcX"9ek?a2)7@2(/8<!9>O8i7uMq@XMo0XIc7r4UVq.(pp;*Yf$RQDIhG?IG)W<:p'n'!jaNtf&okj&WWqXT_CQY"Rs<23@,@K%1WHpi,8?s?-C7[LgiW^H%`p;.=?<r6"D6'@K7lZ=<=e1,&?>%QYKig%a:U%=Re+1(?u!j"I;8D"=i2Kd\.>f!=shKfaUl/&'@8%;%.TM1^)`auF',C`WECj`lH.Ki1#ssW9_X_L]\?pc^<mf[.Ckij5K.o\oEBu@.]DrL*#g:8H9&+euOG-;-FBO\C^o2U9_DT+D`#caQ%20Iftal)T<Ve,^u\7NhVW<rF+FIPK*`<aZWMSPjK0HWhs,hjf>/d>@30^c5cb92?J5/?^/\-lb$JmLm#<%<%[pmf2DK0l1km^^`t%o/bH4AI-jpmBmorVM&Ylh8#jhi@.+T5S'7MWoU+6q6*mq%>0:BH:RO/!/q2")G]eK!(H&"gp1n>Qln1]F80FL+6;`R8`b^-'cFEt%dQRn^P^']iTmh@Z8S'-G_<eBP)I9kLNMI_k/9S5-!DmkJ8[XmN!N'@164%W8%KYdY3-[,Yj:K.&!J8AR<[r@"\5Ggp"0cLn6<iYT%`LR$q.24iDLi+9%<?<mrka";T0N[]S_+qfKJ7&?sB:Msa#R-Yc2[k!Y&!4>T<>[2U\)m^!R)l/K'g2PMHPSHPTG04lInJB=WM+0l%%AB3k\cAF78nQPtXaDC:&?0.&6H1*t(jarR_%RFEeeS>'4Wi=U:'epC)+,OjX+L[oG_H\/PMH]M32tm!$=+GT/gAZ;2[J41JJlWn%106G$o#6_)^@2IR!e4NJ7$%QS$W:Il!tj`4*<O&@_6^G$Ls2i:LkN;B&s3X466aLfm=L[nMbF+soEKkpJp1?5O>5\sanLGG]h4-s%T3!NTAAQ'5e6#"&"L<>A&C`(N<mM=S3JA!+/@TXD1?"No"A-+/n1o'I#saj2!2r]W0"V07-C>q/qM!4[:jDE<+pot0(X1(HXYYbu%[nmYBmeOZ*dNROX'bQ!LYG<@]iRLnP;0ZAc6?@,Q0TXp1E6ec$%.gu6d0*%m06XM,_R%9_=*RTP?s[G_#snW<22je>cNeWn+9F<a%/E>u8ZXj1ODRtcCK_mkZ0b9BHoOn[8MaI0jj`.h_$'K-jbpB@RkTlPFF)[$ii4m@s[V7jkp_dJ?kb]C;$pY1?&UJ&@eQk^=%>/)_%n,hh#_'*\M=*XhNNL>#9`0FZEX&-##VMD\8M[4E_00Imf^'IP9INc5:Guk.jK#I/N.)<VX)%`'(^'Y;4+&FT;j2t[;#/D)CfY[Fs%!93,rQ"AuI*C^1CPo(RdeRAY8/!TPEgklG7(fuhkW[*-K.m+[A"elZd_1gG?1a.r'&[@+M#C9r!*mE/G7'KUW!MG]U'rQZB<+ZC>%+;NVY/^9CATumM^eRef?iMao;:9$)M"So%.;#1M=2m5D4-E8QM6Ihon@KOfZFJ5Xam!oD*<O(*U5RD:\:o#6dF_?W<=/@&e5a<p)%6#t.*!1%W.,-0()<7OS59ThbJV+(U![2L+1<GP",;m.@caF*-<#a3)t>HnLnVFM;pA_`nl+Q;CE)-3ehYME\PTFJD69blq$,dt(b%5]-("Mumu$VlGQ<)8&8OTS5D01a<"6g'e5KM_bF%<G+:%mY\j.`N;*>'ASJ?)L.KAji]PR'jXIFcPnC^Ld8F=_h5KDN<j._Ek"6J%"NgAdU&P(-SOTk<?1;!ps-.6s.F\2nVYTrEStqAaE.b`s(spqCNSD8!J;E!"_"8J&NdEcC[b"\1cD6I>-8`p,J`nB<-?n4+`O<#+%.Sc?2%^2tmR33OEY"KPdd4S9t#<T_Bm*pC%o/`<dPI=ka:%sU-W`VG-Sh8>8PBO`mNKckT-%XsEZ7MJN.\l#Y)-t7NK9HU?naMB%%3<1_WF=KZ!%&U.L=GnJrSjWTd9%L8GTjn[*V,j&dYler`9[c"XiO-)K!sT)b$V5e;&r5hdO("/]^AnK4hm1<p*e(mg!P@C5:.g<Z%E-&cf#8rF@F>l43FU>`ISSXBdfg-^4,VFU7h)'?nOUuD"<tq>S(1&7i14k'7FL#\6#GQFE>4d(N/EnUhM$!QRFHr,F^cbYqNg[=l%nN`^s\[E>]3QH_*\3US^q3S<*AD)D<1U2bV-B]8g5LXc0d:4*s0bW5d?ukrBb@rX9)S5FLV1/tu4$bQFM;6Se!:p<:p\bC84E_&*%K9\h+56:AuK=Q<OPWoB\"9urc'-"l@>"Z(H,:$G,%AH>u;bY$%BH!J?dR5mb_6DRhH`iHu']Lht\g"S:8Yh`6BUMGCXs"Q7=Z)G3%'Fi&aE@QOB8^Td0FV:Hg-A;\F-:InjP6,'"b*FWFs!9!\"-Mo8C&:R2&hD`/\=RJ60JnqDB9,23':OYQL[)2oRYL"`1rIpE#ErRN%lU*4\#0&pU*Ack]'HYK!O>gR>J3R3O!J>#^O;O1PH=ReFODQGj^_/`&Ob6Ll&$++1;)MlaBSk[Y/W%"BKnjsIKS)%$JfQ>J)!tK4%<%gn,";Bf/0%\[i]"0=m':sEnRKSK.l_?un9QhCIeI>biEAE(+^^Z'dbEEYtP6t0,(Yf*H/6a$LcTNr^JR3(?AVlqjZp^RG9ZUbJ%2[<A8SN?%!*uJ'K0`*sf'sFXUR$f>G"l^k8S->^7k(.Lk0??O;%&((f'?-,+cGN!r!$/pI^FgA4<2r"FQNP,\A[=""=ee6PT:d?\%!m;iA"`>,69QE<o`^id(<%:Go$Edi%8&hJ:[$HU*KK5i9;-p_N#$Z]+K?!<)3O4;n0rZ<p:hsXJ=Tk6a:bRH'65PS*8$;2'QH06I%?T_"R[S#R\>T)pu#W+7V8[`^GJU9Sb#,W:4g[`F)Oo[WG>n3q_1>tJq]J`[OFQtul6G*S^M^fh^J0(gYi1:J'f]@+`JdISl3N^)H%@:Is@QMj-_@%Yd`=HJmV\q<b8#__jO2rXUdcG2W;j*#&=GKgN:E0gpBP*m]A!W'a[^co<@?1:a5OU4:6hB9$un1Mlc1+&M6q>(8u%idI,gK#G"9TVC'VPS]aFd=^H-IoXL`Z".kZJpT[8hHFK)+VC'*!f,G9M.AW^RZ@[Y/5"aaJeOQ-9E9D2#(_+b0On6Nk/\l7[NB%?%Adil1q1R&/5,g?B+>^[\bOEaV<EE(Q9i':BJUM"J,(iS?1(G2i4&Y;On-EMhT@b%6-[)s,?=kfF!U.oM"SR].AXQ'N$7ABY+05ls%(5B!hXUG=/X:,1=-3Dt-h3,b)ORYX<M<\X`\E<qrGmZDW/i)5/"A?9T#i5`BJp5&*i4Ua&WHlPfTLWo3fOnc#Q?b"@$7ABY5mO8d%"$HgNW5)mhL.mOhqCme%p@9mcEAbPbPXoW4TZ!g+<O,72SI-6Q]9"aDYXhJX`m&(LA!(ccO%bR+K;3toT]f!]i,O6EO$K=3_nCN;%qiL'-"kZk^d=Dm[\62h0ZJrZ%e?L9a3A:l#qqcEWRYJm7HEQ+9+[?21Ob6S?"i3hZq_0<(2\D2Z!#hhM,UqXOM410R7fk=K#TsS;%2(8Z]QaLP=&*RgF,g,S-8M4>TWP?B&0jQFE"66(!fm%NKPp=ETP2g<<DAo3#3TVmRFV@(P)X_WF8E._.`<-u`fW>CE!O6(>DE4qX%\&LC581H(*iL,#r1BE./>%NfcaLrjgcJ!sGfaoip9JK4%V^sVmG=k2tK3,C@2;5ieA-s^RO/'[bV,D.U6Sf];D"McF<'[`T@T+(:%30>m%iLtp:L#+nJqb]4L_qP45m3'oiBI^-G'B9(7dV9u9f"d)8>oUG1a3ndZ5E"_`*pOmFM']f&#)>Wt60pkg64PL*c%1aa1Z:#9%n1RAOEs/Lb>GOJS!e9o\Hnr5Q'4ihjHNdi2L6dUbY#8!b?B18DOPRm#45UhZX?bik&IHj7E0F]NYisdoirp1Y8?*';fn)^]'p;sH%_(qT52&10.#m*C$\U6*D^K%+'^BXs,^cY6=J*+QoSn:ke4>(LTU3$^b;U+;ip8pTi7DZD8W/Q'@'U'fF4Bqs7To3/`iIY>fH9SRN%Y_U@79TX)j3H6?Gnn]1^nZnt:hPMH^no2&<7Z%.Eo)?d(hY3uGVihiqanm-%J)rP9i-jUN23MK?LKuhQZ4<W9!Y:=rk@";:)W;8?%XJF=o9*,qhUX>(fGYA,ZVIrCE4:FU*>QS$TnD6+Af*Op7i0a::Wq\miHD8D*YS9bib;BB2g]9k/4F#da;2D!Giao6&:TCLp$Kc+u%8u7E%AV*taIm>;MG46D-Ke26k(9MP6%0;%s6%S7<.lKP#,I:%'>]>OO-(F]/fS*qsodqYbMGe986"]%p)2nQW?&]F#:,V_Qc#DD=%cUB:E2mEE1X"']9+mYUJ87WfXWUu/lib2`05s/-JXFe?gOMn^3Ng-Q-bHi<>Q;TJ$fWO.`*D&Rn#-XFQA3(J1DM1>@$D,]1/^k&]%0bE:T@:>R+V+q$nPC@XbKm&%1j=Sf6M-F^313aL]1%as/;COoK1b>D2^H+c$oVu\X%E#shjA\>\O"-9Z7SpJm_/[MA<4ja.2MAg@%,+.iC`.Eq#cN3V?"n_cL>KOCaXDh/>m\M^E&V,3kN=0l8@q1;(&c`I6.KCHQ.f]iO-RI*tEHCjo79oPYHOUIOr9%C=j$L<.fXQ//%R%*p7TNpJ`J3%t*mPQtAg7N^$%[ZkO?A$-ArOLP<\2f',76%H/K?!-$IME?ZnE8YH^ubI((Ep:bmY(sbqHJK\$1o?R:P:bHGTMp0%WTOS.'E(&\DP!JI'*88V02->)#V_Ub+D=Q(3]utHQn3i"l$KB5Qf$t/o$[CtmgR@^Lh4.$R%#T:Jr2<qa`[]GPEcq4EqB,/okms*%kFY%c3AEVtbb[*$.a"1L.H#4,&L:/ES@s#.a-;q8kI>.i:.T83>Ca8`nK;L@KK?Yd!KE:r([,kfp]B\t(8#*nKlTM#nH^h8c6-dr%KK=JfGc3S'AEao8QbDR-nri`0pC,2;M<1uGR%"BmJr3H<WH90lbIR3YH!,KcH7s!YF3gMlPSbGBk0b+M'rB.LjRFpL"Nf,21;%-\%5=)tf4[52LPb7LtD9]o,`-2d"-UOBJ3JYZ"E,ZM2.2%Ye/jmMGmm9#p\Te7E94nf81`;6JhIJ<c"Nb`a]5YF<4SL<F0/_(h$&8Pl%(ZDl\H1"*\?='4M%h=qlkMCjOB'$Q>fsjV!!TrP*H)R'mkFjFOcb0U>;'*OHJ+tl\DE=A9jc#[gk?^mC^pk35\@Hhbk,.,u.$oeR%Te&4L@<&X;*&Ut>SpLJJQ\G0?JE$^A(YH62GaOhLkFc&a?@Y'CGjY_pDZ62R!=kHFk?`\VA`(0;i4-mQmKGS1Hp<Wbi6-&KbWGRi%)_U[K^&5kRE\G1Ie*c#7Dn)l1p[T7Ul-@!?L?74(f@RM]G95gWgcZdHE9DdI^>4)/NKA#giqcHr[R8]*pOV8AAVTL,@V0$SJpDOP%f`R-55Bui1QXo:91rJG-\Q@4h;!ujk/E&.1889'@!=.`WlN5R-H#mZ3Q,=i&><+\&\Wqf]Q:A-)./3QV(QSQ;1[?%1V7n<D.@V:q%<uOBQr$SWGn%AY^s%6JnHcalh%`nR3<rW8?^G54s52%"3JP>[]i6T2*7^L,jKIQ!$[C@$F(>'4rUK`L,)KCeT\hJMUM2$f425)=^%Y72kSMsnjiCC'G<fKb<u+e>r@d-.K!F5.l_)rGas<`^G%E<T.JULiLpWe)i=H'e]n(0='TBFH9EMQa_/><<9%1G0U%A;WBg#V0p'%4t*LkjK:B[&)Wg4'kKZ:!\:TcA&ao*XipJl++,jQE;fgEpGG+"jLBBJT`.;rAm'i_Oqb1.$dX?S"RLj:7\eb+BAh&tA&bb3Ir??*%,S/obC\f:'dr-R7SUDu*LghbH&s(,?=]BXd;G'Ac\gIW7QikojWrAc5hKin<=<-c7A,&A6Nj$n%WEIi5^5BAGFaE7qa.aRA4Z*hY%ml,2LU>'o:[8p<r)c"R]7H1$hC2h9<?SNSOCTFOcFq)9EfS8\`[..qu<0p6/l=P-:/k01]8p:'HRUJ,,6GA6CN3aYiORMGB2Zik>%AAu4o#*8EED<%V)%;In^omK:KU-+!aN")T5:Sbbk@4E7k(B*0GOp-X2,^jqd:U=Ik;]3MXZ+!.VU_K>\4c6CaXKV&`>\AK,U-,7_%3G%*Q@)*WrM"5YGpT%mj,/n&+>J$RJ(</CAm'R#N2]L@ogeau%TPG1O_h"bh1,af[I`J`@b?h+?\pOss+jKo"M!D#];6Rf=*.;l+%Nj;00GnmN\1qE?>%1+u7lG:Mf]^H6N!_B2L<e>s*0?O&U8[E20G%?-,T<un3)Rc?N(hAD`*`I/t[Gtd^!\[rLp9bBW$5-bi2hV#K%3<3Qd^Wu[sH[,%q/m9>RO1*K7^JbrTk5'h&H5.t$fs.6Pf.eZgT19j;Q&#BCY=)BOb-NM)/q&LOngrKi`7oC^Z<=Q*Gbm(bWm%2r%q(.uM0oMbD9o&=3'K`e<V.t8g]qJpK`<PkfFP<uk[)l'9?S\*>Z1f]:51#Zd@F02]@'s^UJQL6@Eh>hUM%)bB0YbagY3bgFW))AF%N!kh`'](u*I5X!ClAejW.qfhi0+TY2mF,`aOR!c0ka4j0A<1:p'5"^E''PC/dFX&7SM[Y7k^=pTGIOOcL0S<5dnac3eJFfMiIX8?%NF\0^1grS712:kZL?s&a7Q\duMO*#N$la8%he;_O;$VcJGVp7@&<+_q3tmhBUl.Gf)_#<BLkZ=8,%;]_]I7f0>iI0[O92.%,R6=5%M82Cc7MF&hL+,MTP!0N+O/.it.-V[r.g^:nO\hbo'0>>IdRS?SOn=bqkpZ1d39M^^OWrm8'U$>FP@sLD)G*=]L->gHO!1:W@#/YZ%0?91'H5#e1^d/<*'8&=k9-V-,Cl\.^OO3L`U/9R"j<DSf[qL@W12<4Ge;Paj9mh1a5p=sEH5*G*Fkf6&O)].J3L)N(PAcEdj<hm*%aehHE&R-8Y7+?-N+sR&3%M<3568V!7Im&@=gTg[MM'$[8%D":j'Pq9$h6?C0F)VOJKf9#S#oj'j[kN%n2C,S^f]5R=MG?[E:cKh#%Kc#_ATaCS:W9">*4!RJ`fnXe'#0f\E$C6gcDBLs\\2T/4\sn5l]12]q'?1QG.?kN7<`;a)p"E>ra?,t*`)n8f:!i64:C!V;4<%tn%a8=?toHLu0_(O/_CEU=H`jl7@PhcIi,]F<Dd=b#6_\>:[*EMdJlf`O4]FOs0iX]O]pG5,,eDOIo1c9O+cbtn%(J+s;OYi5Q<[<MI%"%aZXBgkojU3*"=8E+HX&4h[hT27M)>T^s0eV?uDoHD]tI6o+!o6d.Ar>Y&I3NX-]7*[9:E7'2&grMKEL7D-MO;LCfNTl?*S.H)b%Le]4,,bbr>)9G0B2Y'<S$TaDHU(\2$kX8<<E]T>IOZ8gXP`[qna-Dc2QRA#[/=#D_M+gp3Le]3q,bbr>(!/a>7<1GO<09.s-WH3f%LF6&`4GCguN?X"1TLe!\ORmZ%[.Kn#7>gH&8[%#Y'FC[iYl`hK<NttA6.+?!><=-8BB`VW-m\b5=X;u?8VMuq7$9'@P[oc4BM4HY%M1cM6R*`\@;):DtP<ni_+QM^M6&J*kP-WJKB?_8EH:b\=PbsX@m3FRK^6n`eK2)8$Z:P!DCuXnF8`t_#r:aB4:QfhNd[,JQM'toi%BZUDl127`Rf/R=@:a;F:22f5XEpbRsP.ENlCs]XeT\nIp^_7I;Rbb.>jl-YkbEq?@e@i&H(9C67N&VR^d\8]TigUlf_A^Zf_L#Xl%&;6kDWZgO7+ZKpKp'!MJh>7n6D5W+n6)(d$\m8,rFtd)%lX+G'I2_-T=!FG`Sjntt+r%U46s>N`m7S8;%m^=q.rurpfiK&SG(EJb%(AC2/ZnE[#n!CaR(f].BUIpji<7Y4YqY$maEco,6CR8&-hKGlOb6S0L>4e(FUjR@X"Y(Tu0qr[,.NG@*M?_K<Je&?EOU@k>qlQ2a%1I;p#D'2*rFT$mUei/p>L-m@iNsH!)IR<2JEg4&LhR?K/_)r(fW/XNsRG%F-g*59?9)gZh=_+J<plq"1W86ETH=(D%a6=(FDl?[#%JK>-+F=0EP&6P%#U9[-V]8jAJ@f\/)*^Fl375LCh5l2q3/l-\YU==8L`>lSar,3nh%ETG]o^N2MX6EH>hNW4^*8*/pp(rV8-SQb;%$ra5k_]t2eNHr=1%AS_BbPY2XhIM)`eZ@.3N?urHp'amP5/SU_D_aNaNki?Mr3Ve)\MoouFejf\:$*h"%[k[>WmN_OD""Cr@mbH.%mnIl^@Q8-h3,Cnkau#/%G6U3&5(t(;Gf896@j<%em.+h=l@ara=eEN[5D1$%e5-4aef"Cq_:Dn0b8iD1/IQO]HgP8?e@>kO-U/H<%4D'`E%!q,b$K%@k_=ua;LsfqR4NsG0iGnkX$bljlbo9;`fK4_(NqY0(`lpG!s5"b<nUBn47/Y^OL9eub,b@;_WDDKn%3ACBgsubg%B<s`"TDROL!';BB5q\)8&fC>fi5Z;8/uQ^DD^N2Hnp(cIWHUW3,Yo8IHtKYS%!o.+$K'WViVM&k`V#F'5n'Q,">c-%iO<3eH".-h%HY;immG;DlbagQ]n'`g$$pf3-K-No?^;4N@YTPuZ'SW0rNuL4@ptSt>J&j;Ns)9nFrklI+>EII2Ylofp1\`lOGaE]AETbRDqmOub%-gP<:T:cZfkD-SMPPI4GLcdAZ+7YW&#H[J`oRX">Zkq^49VWsI#T7^g+i-Gf,hP'ZPPO0t9g%oLCAamg,SSV"d!""7)'DTD31#^m%B+l+/4s@`Xm,t79'k!em<A8QfFDY(QM-CC&Srt"%0W5/0M-J'j+;[`-8"#%H0!Mntd0m&D6i7"dq`)K$l9</L9V0j@fnW*&;tel]%cH8<\S$Gi4>;Bb3]rs4$VX1'&_Pm`?p+`_$<I(*OaIr,6$kqZ_iP@M_@@u'.W>FE\FQdU':^jFd7oZJ=*%#J@qC;P[ikLnq`0)t$%2[ii[PMn(e'9!$-of2&p0J='Y0TutQ2V*H5MQ[6+rU>S4H]^KG=mma+5\`I0<WYFLM.'j81-@TkD1uV7cM\k.IYHY)#QO9j,jb9M%5Q(JdR6Hu:Bg;<g0kQqU?8YJ'#no'[6)P4CU0d<PEL%s8es@t7qXuKXWV3?!rYZ$!<bCVK=H<ArMhp1BqJ#/WAm<Q%!ah=rjX.U1%K6S&!J3b$(h"<Vai=T*I5rkjOY&+-11/'XmcG4`!j#\qV@<-:(\fs@(qlum*JuI!g?ub)s["&,+.4MN(XtQiI(gBk=<S-Pmd-.0H%"0m)2TUiFEY!%ktTH"Z!dj4JD&1P`GP1j)"a.fT,E0lRb8__p@V:6;$RT<<U"ka#b89+.\PJN^QZKk,gpJ'[qI<d)p+gAa[YHS]\%18p:*)6?;7L7]ZkN`/a6a?Pti;R.*"-MsOEP(DM4/%=iD.D?S00)ZpQLplZ+i7E$1/BiTc(PpoQ_>KhfM7irEK+'UPDF&m1qNM@g%Lq9&?^"k<k?FA%^J:/G>[?%BNq`FRIj]JZSH*Xpqn]Oj$gtn]/ESeJ7lEM7t-Q&:!\h38m4h&8ViLn^Y`n<>%@bArIFD2go><U$f%Z)l!jaW2($OfriPr";jAX;A@[Kj.a*ROX>PUrl!%ae<)[MpcpmO()qGcMGlh[uOc&%RsGMRnMt%U>R]SbdFTW-]\[V/>Q5^%4.:^%^CM%nDharo:Jt%Uih_m=G\"1r9^CdQ.TfVVcqUO@/#^7#(F4$Ye>jVl.YkTK6V^G@Vc9<U5ZX4I\_+`^#P>1Y.K,5n.L_1;;M"e;%cr=B0;6#TdH$SbC1=f9Ej<`@-2t2sG^,s'_b(]Nc1uDrY4mM>$KRHM%)]D`L:]C<kLjsA*N4G5"i$3m*7r$"k1%?Qj(]Xf[IBLW8%a+e1J)p2Ku;"UWU)=-;u8kn!\L1W+!K7E5ZRAO6qC+WZ\Z=2G0L1W+9n&\A^%V&r1"O2DhIW@O4O,6)>IYP0"#"blVB1J/X*@3p9%5/,?F/Rq;C:teX(`mI:GqlUmG<`;*,2/__QZ=mY'ZLn;oIZE<@T;!@G_TiJaaJecqgG+1Or-A$X'61kUk%@&fT+,?r[=W](aOmZ9%BX46>c$i+rG*ajYZr8W6,G*$'L1NRgRf2Tf-U2l<N.mf92#Gu'8aX#P-N:[()qtRr]^n%"(n0Us6i"FQYUVVqmp#h-SstbR$(C#d%.1`G"KX]DHBQEI3/M\m')i!L#_gbJN]skm]fJu7h]]&gbG2+/QIssoSACGIC?VYKAm)79sG2fHWSK.M)miUrA[8(8'!"ns*5@CX:%;YLo=.s0FBe4J&Q69@Vq_.?7(NfMWuan]fH:nT0O'O.hR`]u1n6UXkm78C_l8_8GbOcug.?Y\7bjeNKU<)+DjNKS^[WO_;^0p/ej%$&oUdUTXTXehM))MYQ6ZF,)\qifKg*>a[_bKtPMr.'&iUYD4l)j&QFAHU?Eh*H-iW`-N[C=oQs#^PH!)+#&+20.6(SoJ+ki(!HB`%R&gU!<%c^dE)dQN]@nDhCn`7<qfhUUVQqNspTj$7V4o;<@%h8>#&&T8nlppaj5f1G1Q`/4(3FrG7*Pin>Rh%,kUONi9^74]LFU+a%@O/!\fiKM5`h_PO&:\a8EG+Kr4u/"GqUSoqA0]9iHi:[c"B$B=cG/g:n`f;UnIX\gJVZ)X\blltP&k=c5e`A"a['Ug/TI"C8'[s0%Y[t[0/Kp`c9/$CMf2,WZFDV;T'\4h/c\G`CT8uf"iQm:[Lr@V,Ca>GmbR@*Y-,Xtq)]?&$H8FN>M)RXiLgM<*dMMm_G@r!S`((`a%#7^4#<XJ?S&56gOAZWHuC*3\!m`!T*KHb-:<L&tSGDM)lDk_W7^@0non?6c'V\Ir=MRmA?2!toFit!-j5jF"%#"R^7*Jk-u%I2#>%f4M<-LK&\=9d9"-S07Fp5^ZVTd&d!Pj.r\'0r#?if!nPr^qgBR3#a8D(O^ToU`8ja^<2^s0\U3%-cR<ehHP[(@EjfN27V\$'G)hf%\[OO@Gf_]%K^RJ'<=K%I0RQF)<8ekGA(Y=4]qYk#l:(rFd-"4Q6/M;Z0eb-bWn<B4bZOm:XD<Be1E:E@WRDD87%dmLK'[9k/fbtt%+1STTIY167q]35oU6PtkP@Kr.%YML\_j#4Nan12?a/:YJ\@Tah[(8L8^=fole<E_bHQFD'OJK($V8++d%su'l<"%\o)^&@*obHL5%qnbA92`UObIG;6GM6bZ?f,VK;%6m5=KL55Q-UJF@clI+FaHN,.O!c?mnGuNESjA@!7ggA2%ne;b+1`d5M%<`&#=Fcp>%#:dn,ZE$%Sj<h&LRs@Ci'YeC6L^[\64ru(1[tHmBUQ@p-P,7.PtWV&*qebHp`>.U*K5==*gUEZ@bT/\,@Mf<:(:=XS.(7Q4..'SpF'D;?rX]2%-5\N(T!:f&7`VG.li+hH=bVBXmF7>U[8W+q,emFaRNW2L:Vc$j$\*42,>-7YG`\JUp)#mafg,+e28PC/2Z]+HX`N:9E5BJBfrYrm%O1nG(4o4MQGfBj2%!fL3!^75VU>=VC#`>r;*`H^H4es-IFtc&=9ebZ%9u'7#8*@C=iIZpdDJkG13qXdCl-s>JaYO]>B#qm='/6uI%K%ne.`PBT[#bdI0&OE<Y)b?R*-5^e#-=CkpFcMnE(JOaNRfjpU:2aGAcKPcqOPXIT-PI3AkR!V'!K1Mf',Iqt;^19g7RtCLhG===%4gl[SEr.1kRKT^5e:bA?ikOq3O&2K3PXd,s*m,];L@U-ja[:<+K&e(;68A&X*Us\daG*fMS.Q9n',^7Z!\HMUMBd$/Uq=CDiX!NC%6f`l/j.Q\:@#0P^A=OeNN!DglE<7_"*A)M@4"R)(Gc6Tu:u'#Z*"/k[Dh4R;L^-HOE<7^5*]bMe%M+s>MM?o/#R/+OAAi!:TeYR+%S32aub")ZP6XqACiN=kD;!<g^'KkGF+p]7L+qt+iD%R;0]0(lS^^9Q#G@2$\->\@LLTUnO^7TcJmXai@'a&`5f=5``/atpA6uY!_%-d.?Cj?(:A..A6,*tF#BLrY,cP/&flG^pM#-I@@ld6p\.D@0,<@5L^Y.dt42M9l5?/K>1u-)sRH+9f@p*.@Dog]8)WI71YrKmLg1%V#)CbrHjTIs8<?)<!gB4J.gbT,5"S/Y&kYe>bZ2bU`b(IUi?2\d(.4KH!meW9f+MBA:/(o^5@k=^\t/s?L\Us'WFX-(+VS5nI`/;%A-d?OqRUW[Vau.+Kn?*B,JI6U2@?63p+!-(_"q6qe9Z-5a%(XR"[lHs6CJ)"K3.M2n)W3*@0dPJC;7KSg9Kj1#7Jh/Vd<>%6/!r7%!D`<?Gp>gZ<+EI>NIgOk&b1\2kOtt;J9AiqG<'c8_#A?*0PgkaZ%eEH"NIZ/P9[;fm8b3S<S)'Q/l*.gH5:2,fYRH>?!^lZ<TH7X%Go@-I.!je0B]L:o;[nCZLFh(1rG>mUCn`e-/n/0Veg]*SE-+Bf!8Na@.KabC*!YiCZ#OS-JZ&c&4q'BW"nB0Mo?Hl/N=[t)cgT"*%<!]Q^.1%(=C*>mIXakT/j@Pk4HL5K"YT#=t%/D4g'^_&s]O/+i8cD(?e9eGVA4*g*1dEIK01-7;8IXZe@e\EGs"-g/%U#U7nRZ,n%mY)@h8O'tXDu^"qA=2;6;3;"N_!DB9%?^qlqWs=D?H&AIZoeYH2:r=T)dh43W*5])GM>u9PT[&?QW8P#@$(LOfG,Uj'8KE2=@8l%%Ir+%l!r=5f,M+Ou3PWkO:o(\Ip@@"dDct<eK+psok.;Q*-LF"l)OMqK/hkp*SMC'd`-E=H\8iW8'400P:A!cRV'F#)6s0_7#<:C8%<Z*iP]r\7?=CB<&Z]9UH+-JpVnRIgSku5Eb5(/G,,ceHJ=`Pt3Le.uPp%?djXJ[B=j$Y>VV.KW22r)_('0R#dr)@QEPkIo&LajDj%@RTi"oPD43UIV/5G&Wn%,F#!3(oJbbVMp5dgfY)mJ-_:2['1oE,_QpQ*'+CAgn#**6inW#KL$nPL;Lf"KLcA"E))#M.r73l_;uCU%,=0ip)E[NS$,!UO!q@F?=.ACb/\fOEM:Umn`#0+qCr6qY?tdn$EGskm_?.kD#ZE2J5jN8C(hL6&ome124F"^a$+%9sBY`(,SpcpJ%V%X@P*=3W0\nbEX`-;>MS7?f`fU53)d+nq^5rM,o!>uh:#16LJ0aNhbL&jT&@.4ROGC"Q92.>/Ac[O(*,lY]n6M-%WfJ.T-o)jY*%\+#>>(`Tgbh0j5YA4,DjOKjp?i-gSY!r#52&eGb&"OH!NJX/_i9ir%EZeoZg%,N5?'!t/NfW]=PnH+A'VsoYM4,o8V],PAp2GhO]%(eY_Kd8s*\#`j5E!'u`"n-gXfHEodmiOK$9I_3;[_0<hU(3E'ZNeYM'COAAi_'M3Rr3@7N&U1]t<S0Q,42Y/]fbn_&TBqO2e^FR*%MQD>@0YQhE'+dl_9#.dj^+4n&4NEOM?qS>5&.3tU$=P0N,Era!)*jGup7)NK63r\\TK3:21'%Z;7">7d%j4,5")nR"a9$VSmVaV,%5WjgZ%ksbe+pa\STL&i5OW9#ka5IS,*.]"-i&>kC_G)/%,NKAkhb`uu`.SQlJjKnX'EgpV6uW]N"@jj^35I>&%r+;rYIXrrTCs)S%"$J2RVu9op+:e955DCQEK>J&;O?GRkiD@pSK342]4E-0f804";c<g_c>!D)PH3Ygins;[?mG^M4"N;8Y!9o;(JTen;oa^25s&2_N%\a%PIm)]+@/%hKV+kQZ(Ob3gT_V4f@^8#UY&WZEHI^8_LYobGQct[#S<0Mj;:bH^=J>#7SHm==I,!Q>infq*EHs.'."8X>QS'r`.%`!@=kaT?C3TK)3Y+H[`SNkRpqmX^5h51kp'Tm#qAIXIA!qRs3WJ,aThIEAli`2<4rjE4(?A=RYeM/C:<f0=82!fTr6+u^=`.Ud2+%&gCcg+qO(fM>BIM"L[aaM'KQej[&r4@R3Pg.hWR[O:p2ag"1]?ZCo7God*0PTJeVd)jllTls#lN8p66irHe-`+tS4YqEWs+'TiS`%Z,Wo8L:%gp:I#443ECPOGRpYGXY4rGS8ZKX:H3tOP0Aq$<$9u:<<q)>iCkf+Tud1TiaAf;".j#5,Z&e0cAOPS6"*tX&V\AL#_f$m%q4Uk)&2uSufN3sYF$jn5"%'JNYho+(9(4f#ZCjm)+R%^k$24sML[DIi1?,dp(\q1A!sut,Q%grkk%bCdgF"6Rb::[i.;gE!fJl+$%ou1KamhgDrYELSO&S`bLWKCIs./0:6Ui\YBb%Z=c@oQDWP%V35]gX229.lh[hc+XUd!?-'"G%bP`'fA!Ig(FEIlPBq#FArQ#=7Vr%\%8"R2tXNhXOL=MF>'(L0d+U**/3kA]!,O^(p<19dSHVl:j)c%-Wpt:@_r5-@6k7N@+:.KMInOV/Cr>PID:(@"EP'WLDsS*h1R-,%ak@E!$OGJCb>?9$YWt8i;L$i>T9;nL;@r,,d]1BS3:ooJ5l.d3kNfbg"W8>G&aO,-0NPjF7<ZrS:$k_RZ:M6KP_C.kA!'$^MGC[#%7M$cZ[+!'F+'dPq:q*F5E`Qo#Y=#710:NHQrm5hC@PeXP:$[?5R(/VMB$;g#C<+3mCe3*ee?8*fUICN^I7EGL;]cL*.8#/t_8P;<%_0)gBXY^_A`>nC$mfrnjY/FNJI@'Vk.T5;lm<e%@VA(>d%"\Sa;$T+a6V`TaBjeMIA=GVXEHY<Ff,\Xigk=OVULYlE<F5f4dc;mp%isqdWICPTOV<bbraR-_<I#j<UhuI5Tr]5E&5>ujfbVTb8>S'hD=r9pfQtXK/C^jmjf+:Q59gY+ETk9g@+bPT\+i+UsDG4u$W>j:.%n7EMXnqKtMD\B)BN<sHl`8?s-7SO#Ga_\?&i0_Xk;`H,0_$-WH&*R:V2E4hclEG?OUf<*);(J?c#p9O1dUWDC1,p*eDT.DL[O5`/%[QSjUWeVY1+,/0(M'cYKjYQ\QT_4FNEF2Ceai3[.HR8PK(`r+YU$O(86PANdapcO$2C^&]1DlTlOn1`XH7+*Ms8IB9PIJG3fJu7(%T=plPNqm2Ec^UP`pn;"+ogA\%Pl0T!8]%!.RA#\#%ZVmD1T6gSOV:%&H=qi.s7-!U;maGEfJu5>)7=p646DT\5OX%27YlC+S.PGP%;"g+C-OFkfAVOe])gT?g(rsN0"[g5Z#=ZT0pYV1,]H,#/c3]s<m/<`'g`I2ZhWKlkMYJb4ZA@CN6i"DS@YM([AS,VI2iQ;GG!&Af%(.FUPXcG^j^X)n+HLJNf`kp"-Rcb.K-ai"6R/$8i9ak0W"G]C>(doR9-jI"K,`:P;P%eBqM+8aa$mLj.&u-)'A9&GR,pgXC,Y!D[%@as$U'>rJUoL[Ya9/VZ%.%0YEROBHpWGn*O/=]a5Qk;so'",ZVEBhs3;ab.-&PT'TYpG-]KJ;E[6cA!BFpJJ=M,7ZL(c@c(1b^EL%9I,0T6k_"W&CX#K(eurVrWR@gZUZiP^^.BjoIm/!<)UIbd'PHnE&-[9K,H$M^=X([7(O2[3K\!/P>2F*eqqeISJ!u.VkJCP9\H5r%mn>n;mI)NIV9ZJKag5.DIG&^NJ$S!Uq+5>UUsQo9;lEADjV3:\5rs^?7BfOGH)2rVR<Kk)M5P#7^'S3[IoBVGJj1]X6kMWo`JS>`%YfOL$Pk_/0=uW4IE6#nf*u*3Xf=UfcTK_pb4rC65`B\i(i51b0!C_Uo/m'a"nk\!EE?Zs`k5qW6@Sp4#Qp_pgYM_2MosnlEMB6EA%'$KM`LX>pHNf"TFT23dUjQ^Q]SPYE^Y\k]*g,J-G'Hjsa4:6dm)1rL0C4.I/Nodpp%EkU0\Y0an'`f60,kDt;f"SB9S]ca)VI\NT%06!%)os,``8:joFFX(3pqC:Yf`&EG0a!`a?ZkZjQhs%COk_hBBijJ+*I\[i'#e)RH6<];;pub.'8*tl<<W_/!jbb\@r=gQ13o\;&%m\f7l*"Fi!^U@'ma:WleB=T#*OffC0!hgW20i97W#X]*njt7Z&%[`m#r45,O\rHKpn5h(p,/s#-k@1(3Q2TH>QgsB^84YDFh6@VJ%n#oZ&AA7ANl0GlQ'.?VGLbc(K'^`;aG`uFpeK:Rq74G#T%-E*OSF0>cqkct4:!7[uPu:XKb!+ae"4;M5:i:*K._\L<$9_J$o&rkF%F"knR&&k:%\=a&0&]4[Y<$0YB6E=9AB5ieM_h0QSm6"7cG0S[fIm';BW&s]<f%jY5,#Gj6-TFuC`,a?r?&j#<"6WP$8?H!m*=,8r%_IoUlGDVDM4)kaF;mJhA]8A#\K%8G>$0i[cXN2HnN;J9KRi9ec7#`l;KOE_YV@.`hWp&7tPke<:f>'6#82gd,b1T@3hH7En1fq1C%[(MEFF5?N#1IA!.E5e`@Na\W]O/n9$/AbRV178?2!_(\TG#&tD_.sF$-42r;N"4k"`9L(G*;rK#'V/`ij'8:VP4gJ#2f,;Ja:db'%oOUQs4-KVD?hgRO:_%oVhY8mXIK/$nWS?Kp'#8?XrpcD,JBB/X#[JmUq'9UoPJ[/BfTohsHubpU&B7km7mYEQI$T*5Fl[M_i<=hm%oE'SeHpMZ%B-Eu8`rQBY\3J<%Ji8WCaF<R0P\_:o(j]8f$XO&K.L-Z6Vu'`K)IjDXl1<M(pN._0a>OKnO2DCmn2S]IHOM0adpL=^%:Gg/Akdri:_'%uj&B*8QD9QU4?K![i1A?k/8_CKa9A.WI?+Jq5eZ?)s[Xk\Ch&nd_9;!0c)^HDr'<0=A(`^S)e>UXjW,^Y.g2"F.%ip4qR*2qJ/csbpk?`8l-kG4e>RriWi9tE<EP-,7)7kZR=N(N7;RICMG2LG]]/^$g9dRJ4I+PMt1!V3S6+G5h.Ne'b:a+#)/2UM_=%_j[BYZUrurEQ8(VO?DmmWf"-b#R!`pF'$?6YVQLjRoFCcTMh6bc%IPV:;us%r5GZqiSM]:H#H]Q%;/th9bbX`Uq:"WaX092]sW:3%=@9JBXdf9J4u-;<L?W+!"c19-^#LZUi)l.JE&>Zh`:$&O+kg?Um$s`0N*8HF*HT9-05ohcq^/57Da&>$3S@:#d_91L/8N7?+,g"j%gqqH/7M3kF8U>':UGLZ@??RlFg!SmBpjIB9g0lQ!S=kq%>!Ju,pW(4EG<Zn6M-B2hc\?$r)p3UZd!Em<8'Q_Y\nM[8Rb`opRkfOl%.o6A_P/*8kfuo+^0Dk4[9@aM=@H@X:::<o</*;bH0CM)Z)"+5u`McReAfhu7:;Y_*]oDIgH6T*H2aap8_8I&`oL(c#ldO:8@8Q[f%!4.UNa5eF_K<_Y#Jn>gG+/p.P`Pe*%+6s73A\H@1L?;(\:nCZ!A(YPe4*#2hj1:'W3LXSlUpBWh<19(rPgqk!1b0N2B4XI%XR*^"%=k288/F8n"GujWf;EO<-M*Ja.L'%V'%5i9l(lk@_%*)3X_a0l?_g7!SE0.'5DgGM?`,Ja.5uHkjM;]R/D-]TT_prRB,mlD?$qE;o%FciH?bhKVe[,o7l]1l2oK@FkWp.=.k@l9bkYqi8dZPnjV8I`^;P-^:g\:"UG1!inc=FV.p._.lG29FesT_&`i13u%\*ItYH,<6a!%OrTLW/;FnR%QU"l,queUal2m4$K?'\da:7AEC>r=E,Z`g6<tR/_ndeC>.=$10f>K8G".]n5:i[de(<66\#l`d'E4ObSuEV<%\6Wg%J63<%_5)kH-jen7,)Uhd/;UX,<+eA7U<F<kE!#l&i$^&6i8GbH(4*,sK.@HP`D9V'qqX$7rZ"?,Wa<[B@OQgNK`uJ5oL[BdRCI'U%6-YPriJUFPa=gb%apG6AORi>m0RpYfcAqLYANr^&B.#MBj#BZJ2CRH9a(#e68(=EjRm<[j>1TCB)(<@1Vs$j#47jtA@3#92K_>6l%EQ+CAGmN/`Am3($+PeM.lGc%DC>JMo_Aa/,I^#*P7Mt<MoA/O*gu\iIq2mB*cWi)Ah;eZlB_WnZhDQ+h`!<;oZ04YdcGSA4J#bJt%\cB+>U.p(/]jEjF_XR6aDeY=h]Q%N_?_fh!D5Nl0*(M`[(!E!SX4(Wr<`bON_h#9+WF6'2YIgkTEO6Z7kAkU$Ym03$dFBnDXg]]o%dXK6c,:@o%03DQbf-UNa*EC^5S_L:5b>U]hbTb4ES>`G^,#bdr^_[.Zn;sab(qrnh-n#_FUFQp-_hpme<As(aI&-T=Ye>5o)'XXK%[^&J`Poe6konR-VlZ@=rSZE`F4n6A)H3fRT"oTb@Sl5S"fY3/Dh$%Y>6GtB6aF"tTh7b"qlk0ieTTc><"P.P=DeQ]d=t??EnnV[O%"maKP?cH3Zp>[>Jq_YJBIAp+^!n^X%L_mbErWi*?^J92sbL#"K]%aEOL]7jI>"=M^J*7b%V=&%sj+qm3Gbfgf*@>G0VCVP\F[Q$g%riqoI<_sk;+;6A(kqrB47;gAA`d_AYrX&8f?U3t.?`3F$E-uobDW;gIia(,'1&c056.YfcWhGd/l>?;`Y,M_e_\ZcDkc]XJs5!`V%Rk50N5^B$Cj-c[g_k6B=_ge"_Lc3b*pqtr<L%At[K2(#Eim'1WlAA4D:V-*^8_#&FItr:D3uF_7"l+ekN\QNUe0LBF7mFPKY!`W!%"=ANg;l=@%:L%l]r=,`3a*;Cr5!jXND1.\+IXnU./5k_%+2i;NfkmBHKCj4a?ka5b$DrUE2U0XZ_9WjH,490d/htK/!`1t0U#G(N%'1'Gr"\?!6K7abn-B'kj97h3lrMQ<YLAV_4:d`'5V;!feHrGP]2_d5CVN?:JZ>%BE8^PSiVN?9OWbKO='k3UurlMi6Gnf]rs&=Uh%EKu\=0Gc/]k%Vnq<8q4$Ep@6<4q]i2+)8Xe+Yk>,-*fM_V%=2XE6+")e-&-VhZS<PE-.,/(`mqq*=9L1`%"2OLfB6Q3uEEdWeDU/%C*qj`JV3-Z-B&EY;h@^fUOu6t*]k3fnKo)nq^15GJYR;9KXkLM^RJG[7&%BuLI?PKO?>>?'h4^^R=ND[K@f&d#5c;m3-iFh4*O(U%2N[hl>%#:NRt/VYUM&Atkl/ME2jX_]6p1k!LjEk[\])W(L7F0iJB=_/jA6MBmib>o.jC1J.\[C`N1=@dB?4qZJB=S;0l"P95Oi$&%.8`JiN<M[;e")%H.2m+k:s^g.0[6Ocg/&FuOX!dKSju7?300pu")1Z?-5^e#-=E9>X`N!F\R=F3[oK'O(M8>Tl4[)\Y52*'%+Q`'%K8/ZTI(u3])QHS[,(kX8dm76c:i7aN"Yo(3:k1q:&SO;ROF:SICXV+t;"gk6&h(\aL]eWj9[!p!FH]Wg$onD(+;$j>3\qFD3.Va?%&H+D,T?bCSW:!UG.mpqjRg=h[T)a`E+`K,"6hfgfib.I=e\q=nh5?]T+4Yen/u!cKnC'iJSNMo[iMVhuT29t\cGucR*#mU-Ka=<t%INlKR`1MkR)<+GiZTTV1St,*i`0m44K'+:N=e;>c`;J,\Vsgefe7ugGZ1"AYrrB,frMf80QHfI,P6IV8i>JXgRG\tJ9F$-BiT.WV%6dG*&kZeH&5WQ:e!`8D5E)Ysn&4Y-8^u^t($OnJ%JY6Cn![L[!_9k2[_&Y6"h?ThICBU:o(nD1,kBG58r;@;UCB's6[Z9"J'XiMl%<<%n1gI:$NKDjUYb?bj\A4W?GE(:?Qm@oEa=5L>n`D@E:X.]H<b(?(c_\r#V>dkre\??<+,@MYqrWhOr^@n2Ya:m_0]hdm]R"aGk%<CBce>R8qPAd?1crC[Z-V26MsLBg-$&d3K<*.[SFgatj*XJ9.?;o1<V@`btR8<ZTe:gJ\UODsoc3XB&nNR6kr+fi?U7CFs8,WK4n%eNgmZY?9kdA.Z\!b*Q%e"3#C2+gI[YM8Zh7l>K5P3+T:$=3+-.F\8_fO#@'6rDQiepIH#m^_.WCTFlkJ#ZZS/#j`3S11cRFYh$3s%34j%ue)QAIkob4u1g*>+EJ#:t+#XE!TFcappGZd7T_QRA)WN+T1mBK85TK#L'MM`_!PqtL7,93.+[hc"UsT="&L?$AYOig3TKaE+%"o-*9"Erdq&-J_m2Scn6)q<,;V#ZcKbXKAbB`^mb)2.0RHNRpBlbG2FR0j8/S^7ln#b`W2'G%FBKH[]gEAo>JJ;F139i-e7XY>oc%(mff/49oZ+URDL3'pM"dabSaO9E[oCNMOLDXfFmUJ?XDaV3"m<lSTra,*V2QZVhF*YHfXt_6AWeD^*Z\oV[-Yh@3FiPe.YMd?/k;%,.6;D.&TYbSJ7>OAFg5W3i)WqLTPJW<h6.1^D[Xrf_W0IIL>2I<P3;qR/DR'DqWlikmCND#XmqLj,bnRO+f<1Iar:`2uIJ'#D5(%%K_+_G9(gE3ihTMm:d$W`or?cAnPjZGJ_7q]7l>=._hLeU]/G#+!l8jaNia&1Y(/j>P&deBoYStcCI(X1boOIn>E(0a8LDuQ3c`XE%bgBY^\#oL'#DDLQh-&0KT^\%.#&$)"N>Cn"h!0sd5`GO)VZ8G!o^R0_#hK-pnU)#:2QTVYAHQiXqIoepMH6/3;*h1I\/pd'g,\1^%Pc;rf;iD]i"=(fD]dU,$_t`&IX)Sf)j;FCeM<"t7/&R)k(#PN)-[>b%P)$;.ndJ)?-@%r+MA(kHdOLGC+__\U6n2oi,gYN`]X+J8%O?>.R&fcsIVbeFsb,]Is&KsoB4C\oA#58`h2hEA-T\Q6FPZ!99220/CcrQ"A+bCnVkS\and'AD##tl1_nl]#(+`bUb6JRTFf.hK+%P95H;EUo&O(`Su<gtddSY^o]*_H=qlnt&=&OS^9nK*[A,TP*bV5YDTE-9O6Nfl&fn#,r8A#u2j/CfiZ.n/_]lAb(eb2[A#&pE"tr%=V-udA83@k78H&W./[Lf5_MN@cnh&:BfSH.J>E6/qs<If+EO8%_<"(/%1A46iB`9`--mG*dWh(fqqtr#KLkkE;^:0I3bmnCi=+'+%+XiM%T#'JZ:\BP[4O`KHBA&P<il#XJ*)=^lL;gf<,Y&tCO?@#8@iDfhGIP(dfKb4s_cSsX*RgFK`K!O9PBmLlS=X@Ic'Y*M'2<^<%ca2NC.qM01c&f6RffVXEMA_s.A]<_)86Kp^O%NR213m-I.M@#+N[j/\&/8h@%WW=\J=a^>>#pd'oA&6\<m-BA)\nOYgl9HNEVb\f%;DE5[L_D_-&T?]sF"2W_-XPR4,&KZjMF\[$Zf2@J*#3NQ!>/rX+E9:B%aHDsXIQU7;HC83*L3qAV<Wl$<T-Ul=0d]OS`bdtUh#b>%FG?#[VJK5TMA_K%Z?"*"BN\ohAr'T$b%?H47=n8Pb#Kgek6)F>3K?sO:1,;$7s1n29$q]Uh`39d[LGa0]=/.L24Bl<RX.t4dAifg%>EpV+:otqa``9&Z$fNOI2&LAR-9u$V#W+_VW)iEs5#eSc2#Y&.2#E'(P_1,AjXh$SM*\4H7>q\.UMnP5Hf3S&+,nIJ&Ztnb@;LBr%>lTG]q-\#fJS5dMl'mI1jesJ7AU;/*^MQ^;WMJ=qi!HQQr_Yk&3=fs4icqCnb8<uVmsB+2!MhP_?)hlN;Ig5:[rcVf<5SH_C_<WX%UeF*$5^<K+N.caOkasCt[uc57_BRnt9)3L"i(I2Ud2A';T-hkiNDNqXZ#)RS7Hbc[lQB&,FThWj(Fb.T(DY"Z2.I3YW$j,FDGD;s%7-W@^$JN\(]6j\U;_[cmmO>tnGs7%;*N)a>CN$b5rjL"qg-b)$GMudV,9gs3'T#X*L,rEG9<^]$<(7GRO;*A`KJYqVrId:8EABdK%KN?<;KNr+#8l"iujb,oCQRQ:'>io>;HiXST?Zdarr@+teS)H;AjAQZCf5!g^a%#E%6%o2<M-_DNGY.$t?W"lU^Vnr!R/rj,3Dp5!%YdUQW%S.h+E&"B"8[NaX=W>J8\`CO:nh.0?36/NjYjE[6+n@,%,7,WjG:@7@]`HP@>5*/Qj"Ru8-)]_L[4\M1l^),98$3cU`NO\/%G[?P_"-sYU>DV_RCM46m)i,X8WQ[[.Cq&Bg!bJf7LWq0n5856q[91f_54W.g5$/T6T7LPCo-98=!84C6ODU0akTsm,7/8Z"m%S=D%+X0OF<%8t@OK-1,bHlSrWd<3q),YK]7=":33a2`4X.n]=#@"!^H'C@R;W*0Z)G84o3)/)#F^rK^gc*nW-aj;$=f;SYG2n-1Uq3,>%Rk"OXW;]sQPq_jD0@!'+fSKs%&;E5V:b#Tn!u3grU6%4Q+rR?3EEq\JN7kFcL>S#;S5'-V@Y]?o"+oERO@AEFEdTmTjHX[QN$q]%%$=JT;;Zu?dD'\!J#3_:':nPR"K!9O3XK%4dfA1F!bO/%9TED":l:d?6hEWB@%S0u9"'X=TD,<bHnWT$E.;/hR(T;'\;a_g1`"eEi%Q(t.4ja7YM_&*bVS5DTXYs[mqrBgbmF$ua+5ol)bQN&p$Z(_]IS38&QkbA7jreND=S3S8m/Rjf4;i<%LdaW:IM);WW]p$M.hO7V6%,EYMh&4r[p@N^N139cS[Vefu/,GTn]iF\#c@XE]-@afs2+u,AXI>G$o4,ela'D.DalR0)MmWeHe9cAf^-0c-u9[nDZa\0q!,g<fh%)>_G<TRsZo@uT'7i1&Bq+IoD)nb_fR[)6"u3C+`)[=2"8mZ32hmsYc+M0fue'DLB\p=!Da''(mq%*`Z2,Z/;f:eAbM-_cdkc9u[@%rV,A!CPJOeEe7mN>:6rro>SY7G97&7`I/(gML07i439IPKK0,k6aMu95iQqkc,9fH6cHJq7E(h,+-VVq%E?9)$(>/dIACK1(DC04%Hq[KSc[eA_nSDnfc`0J$0G_%B%*c,aYtEf3LG$]CLg@=Z&\[8YdXP'!WjflJfJu7hXR,n]G2+/QIst`sM`<8NdNT<^UpM+!.BW:V%1_rYs&W]@Y>!un`Pa4+.UkRo0<l1BM,*^/"7ZGY:/Zl7*deDX$98a'-P--!$MaX]f,r$sK[1_W?(84-5&aJEj[Gr5A=[WB/M.mR>%7:KHjq[gZ&FoinSMbp.Y(`b^TBk]TT79Wm5FHMk);-fuoj^]0ABn_HmO(bPi7=5o.BbB;mC0HX\S<e5&,c=),([5WGlU?,':4&*E%Q4mU3F6\\2+MSPhoG>V`L$=f(^NWtpV=+Y4Q-ZIYjf-H!V4C^BWMJ+JFP'AjdUEtCFK:c5$\bW(_EnQEYXKjJ67^15(+=64KK9td%mDL@q/E0Gt=O3V(OLU2*LD6'+VIM0_Qj>!9/>:)Y76BIhM*F4\Z!SZNoaerurOt(U5,>Rb4kHS.>S%BHRK_H*3]:=q1agm4Kr.9U%W@o<q)i?sl>Km;hB-\Mk0C+'S--!OX0XqDL**_+aW6C`j/:3rA)e(!&,.Rn6[;;ih!a\5M$MqoF6&]-OP;@7mo=oB9,^N$^',`8t%<$_1hfABcJ$h6"UA\Y6U9bE'o8*-'87O+Xd,SC^=(3-*J></M;(ke>9;'HX"qEeA.Car2M?"*TqUcUL].)brXI\Dp_s28Sk-<>:6%V_pun6[HK8h['$Q1e@IUmL+iRX?g</efZ\(l&FWc02ce]5ZH3"j><itoX-0o.;e+R"Ck)H'\4F1Tk%Gte<pfQ*)'N]!@K`;\jZm^%:h'eOL*]9O[7UH[].^u*GiOEF8NJ7D4dB#=3XDF]7G%[),q0Cj=r&b25'0@'.,^P)8_i?i-hcE&,V.A6O6^*T5N#KE5@>sN^P^b<%;NDcQg;K=mdS/T>%6gH=RnDYCaP+4%FY4PDi4%JNK2XXT\j_jiVoB>dp<MU:%CRm1A+#kTIrF<K.rpi>]q0Gg)gl_>_9$Jclq<Xu%=cr9_[C\%b^c0;,6idH';e'<tabC8ok'2MsNqZb^f=\?kL:oD<k'6?8C<W2(oC%n'qkp6[GF=hKDiQb9Gtk*mm]XG1.E!UK&+o#X%$V?F_.V9DuY,X,UR5MdLgC:m-h/C+no>VF,ekXS]e%NAm.<E_W[s+aBHUW(?Rq>@0g$'!QcVEQ]*k,5/7&Zm;Kjt15ggHAH9[YYD%)2*9<hghrS_!H3!Ze+4Qj>:d*@:AO3Ib\>s0Xp/HR<ePpp50Lh&73RuG<!4j@J3hmH-^NmB7ZlMp"\iWm1)?uE(/!K-,8&TaQbA1%26cFi6aP8?pZ/Sm."Pgm%*hV/mW)P"R$hm-06`#NIG%@U2+;g=!@P^IJ4]:,K?/mfN?qBOMIM`[8EGrqagGgCl6^gt,*'BE=lH/`%]7Q!ei7?N!6VA``H=5mKl(3]BFViB6n-Sbrk(_bsqP7)0L95%S'1]D(M8QE:;Y6p?IKOR8i##'N%\Ghi6ed\,$i!hH>JcAnLsq(L%:Lof%8HU8H(."W5Y_n8r`LrWaF\jQ@0X1Y*ggI(*g+A$n8qdI*jC_U'V*[!0.c^-]@OS)4h'fH&TkYupDF9OkQ9tt>c^rfp&>a7Z%U[H3\.#qn2'Sfg)"a7*?84aMlp=HOBoL)_K.?H"8<Mbdf;2WGEas[d+'3naB.<<WTOue?O9#,S5Li5's3@q2OCD'-o:<_M_hK]r>%?XfS3N@8ASUnOb)Ld1WNbgs6`fL:I$`sNR8"a(2?s5[QI$(qDp$76cUFAQPQO/&_%.=u@$:Z5uu87i]=.?KfhNQ$)gm%WqWFb7=`%/l**E%i#am-\5aU802u"oKZbgL97r4<4HN%ff,Pn5A@Y'B5+(3?#d\MnBI?W8%eXBhY^.]DiQ7;NB@&(eN^(00<]4[6-)DP%`i)*%dgHZ#B"0KSg0(e]4f7'[+hBVk^.H6dD`RK>I^rKrEXl05)Nfn?,,K:R=Pe70,TU^ec+l8GM=0Tlrm^a&i97fq"NS?d7?6c=;E,(4%kX@]<F-CS9J<qU?Peo*qeu<Cn#5_N#$qt1Bc7c5I<W#/tr"Qi1NYS&c&]"XMM(bL.95)G@^X6,H,#uCd"hT=aoe&*"Y@E@Mct;da%Gop>a#E!SNX/]Q4]#P!,OPQq]?]2/f#]hj+7>Lf]Fu0YbM532`8:16>N>Q.'U8jhF\g,FNA,,^$V=!eg]+TU,2Rd(p#[H@gJCHOl%E5h!HOr"1s&Od5q%G7:[883#N&;I6_NH-j9*s)"MZ7<cFJ2W,ggp[_mML$<KKCX*rRG.8/a,i@0d<E\uIKmWPRq=@lW*:Xm9q7E1%1ZL7C(Y#TbWJn)d1bcP/Y([CE^I7rG_7T1:^j8P.\=$jp_A[i&ZV)M,g0e&(dMc4DlQAMo>Ek"LER\P;_Z0jUl[j=LWbRg=+>!!Q%6Joaeq-#$K/\58QiX.G!)3d"hY.b#*:?XcZ\TC\;'S)?["5cJ_7$?p,g7NL.qeVdD*KTH:No6e.qc75hgi-#9CKC^[1g`&R(a^m\%S#Y`Hs4W_lkQ]Q9A?H&-%otj#aHuT<XV>(.?77:Y6l52<qFeP`$)8#WI6C?P)nOnE!_S?gajs,1S*5fNm.,b!P&ri6QW*Tp%JBR`%K.ug&dRM6(AQL'7X_dP.QTcL-+p,\jeNh-`:C5#br=jOLH<G:$'WNYr]BE!%5#<T"D65$`<:!;lcU/>Z=le@p4OrOUDrA?<%$/Y>%^iH_W]8tB8g),k8pUu3>b<BR?$q_&10A,==.f!:p"8!Aqd12k;6[)&!4Ai/V>YX(An*kYnfB[qaoS<J9T?D`aQTtM2f,t"LO+7!'%q9pGbn6^\?j,a6-00fB\^:aL<a1qWCIsue@iQm"nG43KOec4amO+6uqYQ+LWrpo*m?iTfVr\'B4'>+/QJ,#B1nt/,EJ!\o,kl~>%AI9_PrivateDataEnd